/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 207);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var require;//! moment.js

;(function (global, factory) {
     true ? module.exports = factory() :
    typeof define === 'function' && define.amd ? define(factory) :
    global.moment = factory()
}(this, (function () { 'use strict';

    var hookCallback;

    function hooks () {
        return hookCallback.apply(null, arguments);
    }

    // This is done to register the method called with moment()
    // without creating circular dependencies.
    function setHookCallback (callback) {
        hookCallback = callback;
    }

    function isArray(input) {
        return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';
    }

    function isObject(input) {
        // IE8 will treat undefined and null as object if it wasn't for
        // input != null
        return input != null && Object.prototype.toString.call(input) === '[object Object]';
    }

    function isObjectEmpty(obj) {
        if (Object.getOwnPropertyNames) {
            return (Object.getOwnPropertyNames(obj).length === 0);
        } else {
            var k;
            for (k in obj) {
                if (obj.hasOwnProperty(k)) {
                    return false;
                }
            }
            return true;
        }
    }

    function isUndefined(input) {
        return input === void 0;
    }

    function isNumber(input) {
        return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';
    }

    function isDate(input) {
        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';
    }

    function map(arr, fn) {
        var res = [], i;
        for (i = 0; i < arr.length; ++i) {
            res.push(fn(arr[i], i));
        }
        return res;
    }

    function hasOwnProp(a, b) {
        return Object.prototype.hasOwnProperty.call(a, b);
    }

    function extend(a, b) {
        for (var i in b) {
            if (hasOwnProp(b, i)) {
                a[i] = b[i];
            }
        }

        if (hasOwnProp(b, 'toString')) {
            a.toString = b.toString;
        }

        if (hasOwnProp(b, 'valueOf')) {
            a.valueOf = b.valueOf;
        }

        return a;
    }

    function createUTC (input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, true).utc();
    }

    function defaultParsingFlags() {
        // We need to deep clone this object.
        return {
            empty           : false,
            unusedTokens    : [],
            unusedInput     : [],
            overflow        : -2,
            charsLeftOver   : 0,
            nullInput       : false,
            invalidMonth    : null,
            invalidFormat   : false,
            userInvalidated : false,
            iso             : false,
            parsedDateParts : [],
            meridiem        : null,
            rfc2822         : false,
            weekdayMismatch : false
        };
    }

    function getParsingFlags(m) {
        if (m._pf == null) {
            m._pf = defaultParsingFlags();
        }
        return m._pf;
    }

    var some;
    if (Array.prototype.some) {
        some = Array.prototype.some;
    } else {
        some = function (fun) {
            var t = Object(this);
            var len = t.length >>> 0;

            for (var i = 0; i < len; i++) {
                if (i in t && fun.call(this, t[i], i, t)) {
                    return true;
                }
            }

            return false;
        };
    }

    function isValid(m) {
        if (m._isValid == null) {
            var flags = getParsingFlags(m);
            var parsedParts = some.call(flags.parsedDateParts, function (i) {
                return i != null;
            });
            var isNowValid = !isNaN(m._d.getTime()) &&
                flags.overflow < 0 &&
                !flags.empty &&
                !flags.invalidMonth &&
                !flags.invalidWeekday &&
                !flags.weekdayMismatch &&
                !flags.nullInput &&
                !flags.invalidFormat &&
                !flags.userInvalidated &&
                (!flags.meridiem || (flags.meridiem && parsedParts));

            if (m._strict) {
                isNowValid = isNowValid &&
                    flags.charsLeftOver === 0 &&
                    flags.unusedTokens.length === 0 &&
                    flags.bigHour === undefined;
            }

            if (Object.isFrozen == null || !Object.isFrozen(m)) {
                m._isValid = isNowValid;
            }
            else {
                return isNowValid;
            }
        }
        return m._isValid;
    }

    function createInvalid (flags) {
        var m = createUTC(NaN);
        if (flags != null) {
            extend(getParsingFlags(m), flags);
        }
        else {
            getParsingFlags(m).userInvalidated = true;
        }

        return m;
    }

    // Plugins that add properties should also add the key here (null value),
    // so we can properly clone ourselves.
    var momentProperties = hooks.momentProperties = [];

    function copyConfig(to, from) {
        var i, prop, val;

        if (!isUndefined(from._isAMomentObject)) {
            to._isAMomentObject = from._isAMomentObject;
        }
        if (!isUndefined(from._i)) {
            to._i = from._i;
        }
        if (!isUndefined(from._f)) {
            to._f = from._f;
        }
        if (!isUndefined(from._l)) {
            to._l = from._l;
        }
        if (!isUndefined(from._strict)) {
            to._strict = from._strict;
        }
        if (!isUndefined(from._tzm)) {
            to._tzm = from._tzm;
        }
        if (!isUndefined(from._isUTC)) {
            to._isUTC = from._isUTC;
        }
        if (!isUndefined(from._offset)) {
            to._offset = from._offset;
        }
        if (!isUndefined(from._pf)) {
            to._pf = getParsingFlags(from);
        }
        if (!isUndefined(from._locale)) {
            to._locale = from._locale;
        }

        if (momentProperties.length > 0) {
            for (i = 0; i < momentProperties.length; i++) {
                prop = momentProperties[i];
                val = from[prop];
                if (!isUndefined(val)) {
                    to[prop] = val;
                }
            }
        }

        return to;
    }

    var updateInProgress = false;

    // Moment prototype object
    function Moment(config) {
        copyConfig(this, config);
        this._d = new Date(config._d != null ? config._d.getTime() : NaN);
        if (!this.isValid()) {
            this._d = new Date(NaN);
        }
        // Prevent infinite loop in case updateOffset creates new moment
        // objects.
        if (updateInProgress === false) {
            updateInProgress = true;
            hooks.updateOffset(this);
            updateInProgress = false;
        }
    }

    function isMoment (obj) {
        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);
    }

    function absFloor (number) {
        if (number < 0) {
            // -0 -> 0
            return Math.ceil(number) || 0;
        } else {
            return Math.floor(number);
        }
    }

    function toInt(argumentForCoercion) {
        var coercedNumber = +argumentForCoercion,
            value = 0;

        if (coercedNumber !== 0 && isFinite(coercedNumber)) {
            value = absFloor(coercedNumber);
        }

        return value;
    }

    // compare two arrays, return the number of differences
    function compareArrays(array1, array2, dontConvert) {
        var len = Math.min(array1.length, array2.length),
            lengthDiff = Math.abs(array1.length - array2.length),
            diffs = 0,
            i;
        for (i = 0; i < len; i++) {
            if ((dontConvert && array1[i] !== array2[i]) ||
                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {
                diffs++;
            }
        }
        return diffs + lengthDiff;
    }

    function warn(msg) {
        if (hooks.suppressDeprecationWarnings === false &&
                (typeof console !==  'undefined') && console.warn) {
            console.warn('Deprecation warning: ' + msg);
        }
    }

    function deprecate(msg, fn) {
        var firstTime = true;

        return extend(function () {
            if (hooks.deprecationHandler != null) {
                hooks.deprecationHandler(null, msg);
            }
            if (firstTime) {
                var args = [];
                var arg;
                for (var i = 0; i < arguments.length; i++) {
                    arg = '';
                    if (typeof arguments[i] === 'object') {
                        arg += '\n[' + i + '] ';
                        for (var key in arguments[0]) {
                            arg += key + ': ' + arguments[0][key] + ', ';
                        }
                        arg = arg.slice(0, -2); // Remove trailing comma and space
                    } else {
                        arg = arguments[i];
                    }
                    args.push(arg);
                }
                warn(msg + '\nArguments: ' + Array.prototype.slice.call(args).join('') + '\n' + (new Error()).stack);
                firstTime = false;
            }
            return fn.apply(this, arguments);
        }, fn);
    }

    var deprecations = {};

    function deprecateSimple(name, msg) {
        if (hooks.deprecationHandler != null) {
            hooks.deprecationHandler(name, msg);
        }
        if (!deprecations[name]) {
            warn(msg);
            deprecations[name] = true;
        }
    }

    hooks.suppressDeprecationWarnings = false;
    hooks.deprecationHandler = null;

    function isFunction(input) {
        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
    }

    function set (config) {
        var prop, i;
        for (i in config) {
            prop = config[i];
            if (isFunction(prop)) {
                this[i] = prop;
            } else {
                this['_' + i] = prop;
            }
        }
        this._config = config;
        // Lenient ordinal parsing accepts just a number in addition to
        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
        // TODO: Remove "ordinalParse" fallback in next major release.
        this._dayOfMonthOrdinalParseLenient = new RegExp(
            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +
                '|' + (/\d{1,2}/).source);
    }

    function mergeConfigs(parentConfig, childConfig) {
        var res = extend({}, parentConfig), prop;
        for (prop in childConfig) {
            if (hasOwnProp(childConfig, prop)) {
                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
                    res[prop] = {};
                    extend(res[prop], parentConfig[prop]);
                    extend(res[prop], childConfig[prop]);
                } else if (childConfig[prop] != null) {
                    res[prop] = childConfig[prop];
                } else {
                    delete res[prop];
                }
            }
        }
        for (prop in parentConfig) {
            if (hasOwnProp(parentConfig, prop) &&
                    !hasOwnProp(childConfig, prop) &&
                    isObject(parentConfig[prop])) {
                // make sure changes to properties don't modify parent config
                res[prop] = extend({}, res[prop]);
            }
        }
        return res;
    }

    function Locale(config) {
        if (config != null) {
            this.set(config);
        }
    }

    var keys;

    if (Object.keys) {
        keys = Object.keys;
    } else {
        keys = function (obj) {
            var i, res = [];
            for (i in obj) {
                if (hasOwnProp(obj, i)) {
                    res.push(i);
                }
            }
            return res;
        };
    }

    var defaultCalendar = {
        sameDay : '[Today at] LT',
        nextDay : '[Tomorrow at] LT',
        nextWeek : 'dddd [at] LT',
        lastDay : '[Yesterday at] LT',
        lastWeek : '[Last] dddd [at] LT',
        sameElse : 'L'
    };

    function calendar (key, mom, now) {
        var output = this._calendar[key] || this._calendar['sameElse'];
        return isFunction(output) ? output.call(mom, now) : output;
    }

    var defaultLongDateFormat = {
        LTS  : 'h:mm:ss A',
        LT   : 'h:mm A',
        L    : 'MM/DD/YYYY',
        LL   : 'MMMM D, YYYY',
        LLL  : 'MMMM D, YYYY h:mm A',
        LLLL : 'dddd, MMMM D, YYYY h:mm A'
    };

    function longDateFormat (key) {
        var format = this._longDateFormat[key],
            formatUpper = this._longDateFormat[key.toUpperCase()];

        if (format || !formatUpper) {
            return format;
        }

        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {
            return val.slice(1);
        });

        return this._longDateFormat[key];
    }

    var defaultInvalidDate = 'Invalid date';

    function invalidDate () {
        return this._invalidDate;
    }

    var defaultOrdinal = '%d';
    var defaultDayOfMonthOrdinalParse = /\d{1,2}/;

    function ordinal (number) {
        return this._ordinal.replace('%d', number);
    }

    var defaultRelativeTime = {
        future : 'in %s',
        past   : '%s ago',
        s  : 'a few seconds',
        ss : '%d seconds',
        m  : 'a minute',
        mm : '%d minutes',
        h  : 'an hour',
        hh : '%d hours',
        d  : 'a day',
        dd : '%d days',
        M  : 'a month',
        MM : '%d months',
        y  : 'a year',
        yy : '%d years'
    };

    function relativeTime (number, withoutSuffix, string, isFuture) {
        var output = this._relativeTime[string];
        return (isFunction(output)) ?
            output(number, withoutSuffix, string, isFuture) :
            output.replace(/%d/i, number);
    }

    function pastFuture (diff, output) {
        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
        return isFunction(format) ? format(output) : format.replace(/%s/i, output);
    }

    var aliases = {};

    function addUnitAlias (unit, shorthand) {
        var lowerCase = unit.toLowerCase();
        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
    }

    function normalizeUnits(units) {
        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;
    }

    function normalizeObjectUnits(inputObject) {
        var normalizedInput = {},
            normalizedProp,
            prop;

        for (prop in inputObject) {
            if (hasOwnProp(inputObject, prop)) {
                normalizedProp = normalizeUnits(prop);
                if (normalizedProp) {
                    normalizedInput[normalizedProp] = inputObject[prop];
                }
            }
        }

        return normalizedInput;
    }

    var priorities = {};

    function addUnitPriority(unit, priority) {
        priorities[unit] = priority;
    }

    function getPrioritizedUnits(unitsObj) {
        var units = [];
        for (var u in unitsObj) {
            units.push({unit: u, priority: priorities[u]});
        }
        units.sort(function (a, b) {
            return a.priority - b.priority;
        });
        return units;
    }

    function zeroFill(number, targetLength, forceSign) {
        var absNumber = '' + Math.abs(number),
            zerosToFill = targetLength - absNumber.length,
            sign = number >= 0;
        return (sign ? (forceSign ? '+' : '') : '-') +
            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
    }

    var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;

    var localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;

    var formatFunctions = {};

    var formatTokenFunctions = {};

    // token:    'M'
    // padded:   ['MM', 2]
    // ordinal:  'Mo'
    // callback: function () { this.month() + 1 }
    function addFormatToken (token, padded, ordinal, callback) {
        var func = callback;
        if (typeof callback === 'string') {
            func = function () {
                return this[callback]();
            };
        }
        if (token) {
            formatTokenFunctions[token] = func;
        }
        if (padded) {
            formatTokenFunctions[padded[0]] = function () {
                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
            };
        }
        if (ordinal) {
            formatTokenFunctions[ordinal] = function () {
                return this.localeData().ordinal(func.apply(this, arguments), token);
            };
        }
    }

    function removeFormattingTokens(input) {
        if (input.match(/\[[\s\S]/)) {
            return input.replace(/^\[|\]$/g, '');
        }
        return input.replace(/\\/g, '');
    }

    function makeFormatFunction(format) {
        var array = format.match(formattingTokens), i, length;

        for (i = 0, length = array.length; i < length; i++) {
            if (formatTokenFunctions[array[i]]) {
                array[i] = formatTokenFunctions[array[i]];
            } else {
                array[i] = removeFormattingTokens(array[i]);
            }
        }

        return function (mom) {
            var output = '', i;
            for (i = 0; i < length; i++) {
                output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];
            }
            return output;
        };
    }

    // format date using native date object
    function formatMoment(m, format) {
        if (!m.isValid()) {
            return m.localeData().invalidDate();
        }

        format = expandFormat(format, m.localeData());
        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);

        return formatFunctions[format](m);
    }

    function expandFormat(format, locale) {
        var i = 5;

        function replaceLongDateFormatTokens(input) {
            return locale.longDateFormat(input) || input;
        }

        localFormattingTokens.lastIndex = 0;
        while (i >= 0 && localFormattingTokens.test(format)) {
            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
            localFormattingTokens.lastIndex = 0;
            i -= 1;
        }

        return format;
    }

    var match1         = /\d/;            //       0 - 9
    var match2         = /\d\d/;          //      00 - 99
    var match3         = /\d{3}/;         //     000 - 999
    var match4         = /\d{4}/;         //    0000 - 9999
    var match6         = /[+-]?\d{6}/;    // -999999 - 999999
    var match1to2      = /\d\d?/;         //       0 - 99
    var match3to4      = /\d\d\d\d?/;     //     999 - 9999
    var match5to6      = /\d\d\d\d\d\d?/; //   99999 - 999999
    var match1to3      = /\d{1,3}/;       //       0 - 999
    var match1to4      = /\d{1,4}/;       //       0 - 9999
    var match1to6      = /[+-]?\d{1,6}/;  // -999999 - 999999

    var matchUnsigned  = /\d+/;           //       0 - inf
    var matchSigned    = /[+-]?\d+/;      //    -inf - inf

    var matchOffset    = /Z|[+-]\d\d:?\d\d/gi; // +00:00 -00:00 +0000 -0000 or Z
    var matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z

    var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/; // 123456789 123456789.123

    // any word (or two) characters or numbers including two/three word month in arabic.
    // includes scottish gaelic two word and hyphenated months
    var matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;

    var regexes = {};

    function addRegexToken (token, regex, strictRegex) {
        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {
            return (isStrict && strictRegex) ? strictRegex : regex;
        };
    }

    function getParseRegexForToken (token, config) {
        if (!hasOwnProp(regexes, token)) {
            return new RegExp(unescapeFormat(token));
        }

        return regexes[token](config._strict, config._locale);
    }

    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
    function unescapeFormat(s) {
        return regexEscape(s.replace('\\', '').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
            return p1 || p2 || p3 || p4;
        }));
    }

    function regexEscape(s) {
        return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
    }

    var tokens = {};

    function addParseToken (token, callback) {
        var i, func = callback;
        if (typeof token === 'string') {
            token = [token];
        }
        if (isNumber(callback)) {
            func = function (input, array) {
                array[callback] = toInt(input);
            };
        }
        for (i = 0; i < token.length; i++) {
            tokens[token[i]] = func;
        }
    }

    function addWeekParseToken (token, callback) {
        addParseToken(token, function (input, array, config, token) {
            config._w = config._w || {};
            callback(input, config._w, config, token);
        });
    }

    function addTimeToArrayFromToken(token, input, config) {
        if (input != null && hasOwnProp(tokens, token)) {
            tokens[token](input, config._a, config, token);
        }
    }

    var YEAR = 0;
    var MONTH = 1;
    var DATE = 2;
    var HOUR = 3;
    var MINUTE = 4;
    var SECOND = 5;
    var MILLISECOND = 6;
    var WEEK = 7;
    var WEEKDAY = 8;

    // FORMATTING

    addFormatToken('Y', 0, 0, function () {
        var y = this.year();
        return y <= 9999 ? '' + y : '+' + y;
    });

    addFormatToken(0, ['YY', 2], 0, function () {
        return this.year() % 100;
    });

    addFormatToken(0, ['YYYY',   4],       0, 'year');
    addFormatToken(0, ['YYYYY',  5],       0, 'year');
    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

    // ALIASES

    addUnitAlias('year', 'y');

    // PRIORITIES

    addUnitPriority('year', 1);

    // PARSING

    addRegexToken('Y',      matchSigned);
    addRegexToken('YY',     match1to2, match2);
    addRegexToken('YYYY',   match1to4, match4);
    addRegexToken('YYYYY',  match1to6, match6);
    addRegexToken('YYYYYY', match1to6, match6);

    addParseToken(['YYYYY', 'YYYYYY'], YEAR);
    addParseToken('YYYY', function (input, array) {
        array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
    });
    addParseToken('YY', function (input, array) {
        array[YEAR] = hooks.parseTwoDigitYear(input);
    });
    addParseToken('Y', function (input, array) {
        array[YEAR] = parseInt(input, 10);
    });

    // HELPERS

    function daysInYear(year) {
        return isLeapYear(year) ? 366 : 365;
    }

    function isLeapYear(year) {
        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
    }

    // HOOKS

    hooks.parseTwoDigitYear = function (input) {
        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
    };

    // MOMENTS

    var getSetYear = makeGetSet('FullYear', true);

    function getIsLeapYear () {
        return isLeapYear(this.year());
    }

    function makeGetSet (unit, keepTime) {
        return function (value) {
            if (value != null) {
                set$1(this, unit, value);
                hooks.updateOffset(this, keepTime);
                return this;
            } else {
                return get(this, unit);
            }
        };
    }

    function get (mom, unit) {
        return mom.isValid() ?
            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;
    }

    function set$1 (mom, unit, value) {
        if (mom.isValid() && !isNaN(value)) {
            if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {
                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));
            }
            else {
                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
            }
        }
    }

    // MOMENTS

    function stringGet (units) {
        units = normalizeUnits(units);
        if (isFunction(this[units])) {
            return this[units]();
        }
        return this;
    }


    function stringSet (units, value) {
        if (typeof units === 'object') {
            units = normalizeObjectUnits(units);
            var prioritized = getPrioritizedUnits(units);
            for (var i = 0; i < prioritized.length; i++) {
                this[prioritized[i].unit](units[prioritized[i].unit]);
            }
        } else {
            units = normalizeUnits(units);
            if (isFunction(this[units])) {
                return this[units](value);
            }
        }
        return this;
    }

    function mod(n, x) {
        return ((n % x) + x) % x;
    }

    var indexOf;

    if (Array.prototype.indexOf) {
        indexOf = Array.prototype.indexOf;
    } else {
        indexOf = function (o) {
            // I know
            var i;
            for (i = 0; i < this.length; ++i) {
                if (this[i] === o) {
                    return i;
                }
            }
            return -1;
        };
    }

    function daysInMonth(year, month) {
        if (isNaN(year) || isNaN(month)) {
            return NaN;
        }
        var modMonth = mod(month, 12);
        year += (month - modMonth) / 12;
        return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);
    }

    // FORMATTING

    addFormatToken('M', ['MM', 2], 'Mo', function () {
        return this.month() + 1;
    });

    addFormatToken('MMM', 0, 0, function (format) {
        return this.localeData().monthsShort(this, format);
    });

    addFormatToken('MMMM', 0, 0, function (format) {
        return this.localeData().months(this, format);
    });

    // ALIASES

    addUnitAlias('month', 'M');

    // PRIORITY

    addUnitPriority('month', 8);

    // PARSING

    addRegexToken('M',    match1to2);
    addRegexToken('MM',   match1to2, match2);
    addRegexToken('MMM',  function (isStrict, locale) {
        return locale.monthsShortRegex(isStrict);
    });
    addRegexToken('MMMM', function (isStrict, locale) {
        return locale.monthsRegex(isStrict);
    });

    addParseToken(['M', 'MM'], function (input, array) {
        array[MONTH] = toInt(input) - 1;
    });

    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
        var month = config._locale.monthsParse(input, token, config._strict);
        // if we didn't find a month name, mark the date as invalid.
        if (month != null) {
            array[MONTH] = month;
        } else {
            getParsingFlags(config).invalidMonth = input;
        }
    });

    // LOCALES

    var MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;
    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');
    function localeMonths (m, format) {
        if (!m) {
            return isArray(this._months) ? this._months :
                this._months['standalone'];
        }
        return isArray(this._months) ? this._months[m.month()] :
            this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];
    }

    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');
    function localeMonthsShort (m, format) {
        if (!m) {
            return isArray(this._monthsShort) ? this._monthsShort :
                this._monthsShort['standalone'];
        }
        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :
            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];
    }

    function handleStrictParse(monthName, format, strict) {
        var i, ii, mom, llc = monthName.toLocaleLowerCase();
        if (!this._monthsParse) {
            // this is not used
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
            for (i = 0; i < 12; ++i) {
                mom = createUTC([2000, i]);
                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();
                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
            }
        }

        if (strict) {
            if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
            }
        } else {
            if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
            }
        }
    }

    function localeMonthsParse (monthName, format, strict) {
        var i, mom, regex;

        if (this._monthsParseExact) {
            return handleStrictParse.call(this, monthName, format, strict);
        }

        if (!this._monthsParse) {
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
        }

        // TODO: add sorting
        // Sorting makes sure if one month (or abbr) is a prefix of another
        // see sorting in computeMonthsParse
        for (i = 0; i < 12; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, i]);
            if (strict && !this._longMonthsParse[i]) {
                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');
                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');
            }
            if (!strict && !this._monthsParse[i]) {
                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }
            // test the regex
            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {
                return i;
            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {
                return i;
            } else if (!strict && this._monthsParse[i].test(monthName)) {
                return i;
            }
        }
    }

    // MOMENTS

    function setMonth (mom, value) {
        var dayOfMonth;

        if (!mom.isValid()) {
            // No op
            return mom;
        }

        if (typeof value === 'string') {
            if (/^\d+$/.test(value)) {
                value = toInt(value);
            } else {
                value = mom.localeData().monthsParse(value);
                // TODO: Another silent failure?
                if (!isNumber(value)) {
                    return mom;
                }
            }
        }

        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
        return mom;
    }

    function getSetMonth (value) {
        if (value != null) {
            setMonth(this, value);
            hooks.updateOffset(this, true);
            return this;
        } else {
            return get(this, 'Month');
        }
    }

    function getDaysInMonth () {
        return daysInMonth(this.year(), this.month());
    }

    var defaultMonthsShortRegex = matchWord;
    function monthsShortRegex (isStrict) {
        if (this._monthsParseExact) {
            if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
            }
            if (isStrict) {
                return this._monthsShortStrictRegex;
            } else {
                return this._monthsShortRegex;
            }
        } else {
            if (!hasOwnProp(this, '_monthsShortRegex')) {
                this._monthsShortRegex = defaultMonthsShortRegex;
            }
            return this._monthsShortStrictRegex && isStrict ?
                this._monthsShortStrictRegex : this._monthsShortRegex;
        }
    }

    var defaultMonthsRegex = matchWord;
    function monthsRegex (isStrict) {
        if (this._monthsParseExact) {
            if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
            }
            if (isStrict) {
                return this._monthsStrictRegex;
            } else {
                return this._monthsRegex;
            }
        } else {
            if (!hasOwnProp(this, '_monthsRegex')) {
                this._monthsRegex = defaultMonthsRegex;
            }
            return this._monthsStrictRegex && isStrict ?
                this._monthsStrictRegex : this._monthsRegex;
        }
    }

    function computeMonthsParse () {
        function cmpLenRev(a, b) {
            return b.length - a.length;
        }

        var shortPieces = [], longPieces = [], mixedPieces = [],
            i, mom;
        for (i = 0; i < 12; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, i]);
            shortPieces.push(this.monthsShort(mom, ''));
            longPieces.push(this.months(mom, ''));
            mixedPieces.push(this.months(mom, ''));
            mixedPieces.push(this.monthsShort(mom, ''));
        }
        // Sorting makes sure if one month (or abbr) is a prefix of another it
        // will match the longer piece.
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);
        for (i = 0; i < 12; i++) {
            shortPieces[i] = regexEscape(shortPieces[i]);
            longPieces[i] = regexEscape(longPieces[i]);
        }
        for (i = 0; i < 24; i++) {
            mixedPieces[i] = regexEscape(mixedPieces[i]);
        }

        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._monthsShortRegex = this._monthsRegex;
        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
    }

    function createDate (y, m, d, h, M, s, ms) {
        // can't just apply() to create a date:
        // https://stackoverflow.com/q/181348
        var date;
        // the date constructor remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            date = new Date(y + 400, m, d, h, M, s, ms);
            if (isFinite(date.getFullYear())) {
                date.setFullYear(y);
            }
        } else {
            date = new Date(y, m, d, h, M, s, ms);
        }

        return date;
    }

    function createUTCDate (y) {
        var date;
        // the Date.UTC function remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            var args = Array.prototype.slice.call(arguments);
            // preserve leap years using a full 400 year cycle, then reset
            args[0] = y + 400;
            date = new Date(Date.UTC.apply(null, args));
            if (isFinite(date.getUTCFullYear())) {
                date.setUTCFullYear(y);
            }
        } else {
            date = new Date(Date.UTC.apply(null, arguments));
        }

        return date;
    }

    // start-of-first-week - start-of-year
    function firstWeekOffset(year, dow, doy) {
        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
            fwd = 7 + dow - doy,
            // first-week day local weekday -- which local weekday is fwd
            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;

        return -fwdlw + fwd - 1;
    }

    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
        var localWeekday = (7 + weekday - dow) % 7,
            weekOffset = firstWeekOffset(year, dow, doy),
            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
            resYear, resDayOfYear;

        if (dayOfYear <= 0) {
            resYear = year - 1;
            resDayOfYear = daysInYear(resYear) + dayOfYear;
        } else if (dayOfYear > daysInYear(year)) {
            resYear = year + 1;
            resDayOfYear = dayOfYear - daysInYear(year);
        } else {
            resYear = year;
            resDayOfYear = dayOfYear;
        }

        return {
            year: resYear,
            dayOfYear: resDayOfYear
        };
    }

    function weekOfYear(mom, dow, doy) {
        var weekOffset = firstWeekOffset(mom.year(), dow, doy),
            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
            resWeek, resYear;

        if (week < 1) {
            resYear = mom.year() - 1;
            resWeek = week + weeksInYear(resYear, dow, doy);
        } else if (week > weeksInYear(mom.year(), dow, doy)) {
            resWeek = week - weeksInYear(mom.year(), dow, doy);
            resYear = mom.year() + 1;
        } else {
            resYear = mom.year();
            resWeek = week;
        }

        return {
            week: resWeek,
            year: resYear
        };
    }

    function weeksInYear(year, dow, doy) {
        var weekOffset = firstWeekOffset(year, dow, doy),
            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
    }

    // FORMATTING

    addFormatToken('w', ['ww', 2], 'wo', 'week');
    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

    // ALIASES

    addUnitAlias('week', 'w');
    addUnitAlias('isoWeek', 'W');

    // PRIORITIES

    addUnitPriority('week', 5);
    addUnitPriority('isoWeek', 5);

    // PARSING

    addRegexToken('w',  match1to2);
    addRegexToken('ww', match1to2, match2);
    addRegexToken('W',  match1to2);
    addRegexToken('WW', match1to2, match2);

    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {
        week[token.substr(0, 1)] = toInt(input);
    });

    // HELPERS

    // LOCALES

    function localeWeek (mom) {
        return weekOfYear(mom, this._week.dow, this._week.doy).week;
    }

    var defaultLocaleWeek = {
        dow : 0, // Sunday is the first day of the week.
        doy : 6  // The week that contains Jan 6th is the first week of the year.
    };

    function localeFirstDayOfWeek () {
        return this._week.dow;
    }

    function localeFirstDayOfYear () {
        return this._week.doy;
    }

    // MOMENTS

    function getSetWeek (input) {
        var week = this.localeData().week(this);
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    function getSetISOWeek (input) {
        var week = weekOfYear(this, 1, 4).week;
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    // FORMATTING

    addFormatToken('d', 0, 'do', 'day');

    addFormatToken('dd', 0, 0, function (format) {
        return this.localeData().weekdaysMin(this, format);
    });

    addFormatToken('ddd', 0, 0, function (format) {
        return this.localeData().weekdaysShort(this, format);
    });

    addFormatToken('dddd', 0, 0, function (format) {
        return this.localeData().weekdays(this, format);
    });

    addFormatToken('e', 0, 0, 'weekday');
    addFormatToken('E', 0, 0, 'isoWeekday');

    // ALIASES

    addUnitAlias('day', 'd');
    addUnitAlias('weekday', 'e');
    addUnitAlias('isoWeekday', 'E');

    // PRIORITY
    addUnitPriority('day', 11);
    addUnitPriority('weekday', 11);
    addUnitPriority('isoWeekday', 11);

    // PARSING

    addRegexToken('d',    match1to2);
    addRegexToken('e',    match1to2);
    addRegexToken('E',    match1to2);
    addRegexToken('dd',   function (isStrict, locale) {
        return locale.weekdaysMinRegex(isStrict);
    });
    addRegexToken('ddd',   function (isStrict, locale) {
        return locale.weekdaysShortRegex(isStrict);
    });
    addRegexToken('dddd',   function (isStrict, locale) {
        return locale.weekdaysRegex(isStrict);
    });

    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
        var weekday = config._locale.weekdaysParse(input, token, config._strict);
        // if we didn't get a weekday name, mark the date as invalid
        if (weekday != null) {
            week.d = weekday;
        } else {
            getParsingFlags(config).invalidWeekday = input;
        }
    });

    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
        week[token] = toInt(input);
    });

    // HELPERS

    function parseWeekday(input, locale) {
        if (typeof input !== 'string') {
            return input;
        }

        if (!isNaN(input)) {
            return parseInt(input, 10);
        }

        input = locale.weekdaysParse(input);
        if (typeof input === 'number') {
            return input;
        }

        return null;
    }

    function parseIsoWeekday(input, locale) {
        if (typeof input === 'string') {
            return locale.weekdaysParse(input) % 7 || 7;
        }
        return isNaN(input) ? null : input;
    }

    // LOCALES
    function shiftWeekdays (ws, n) {
        return ws.slice(n, 7).concat(ws.slice(0, n));
    }

    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');
    function localeWeekdays (m, format) {
        var weekdays = isArray(this._weekdays) ? this._weekdays :
            this._weekdays[(m && m !== true && this._weekdays.isFormat.test(format)) ? 'format' : 'standalone'];
        return (m === true) ? shiftWeekdays(weekdays, this._week.dow)
            : (m) ? weekdays[m.day()] : weekdays;
    }

    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');
    function localeWeekdaysShort (m) {
        return (m === true) ? shiftWeekdays(this._weekdaysShort, this._week.dow)
            : (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;
    }

    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');
    function localeWeekdaysMin (m) {
        return (m === true) ? shiftWeekdays(this._weekdaysMin, this._week.dow)
            : (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;
    }

    function handleStrictParse$1(weekdayName, format, strict) {
        var i, ii, mom, llc = weekdayName.toLocaleLowerCase();
        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._minWeekdaysParse = [];

            for (i = 0; i < 7; ++i) {
                mom = createUTC([2000, 1]).day(i);
                this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();
                this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();
                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
            }
        }

        if (strict) {
            if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            }
        } else {
            if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            }
        }
    }

    function localeWeekdaysParse (weekdayName, format, strict) {
        var i, mom, regex;

        if (this._weekdaysParseExact) {
            return handleStrictParse$1.call(this, weekdayName, format, strict);
        }

        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._minWeekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._fullWeekdaysParse = [];
        }

        for (i = 0; i < 7; i++) {
            // make the regex if we don't have it already

            mom = createUTC([2000, 1]).day(i);
            if (strict && !this._fullWeekdaysParse[i]) {
                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');
                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');
                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');
            }
            if (!this._weekdaysParse[i]) {
                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }
            // test the regex
            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {
                return i;
            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {
                return i;
            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {
                return i;
            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
                return i;
            }
        }
    }

    // MOMENTS

    function getSetDayOfWeek (input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
        if (input != null) {
            input = parseWeekday(input, this.localeData());
            return this.add(input - day, 'd');
        } else {
            return day;
        }
    }

    function getSetLocaleDayOfWeek (input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
        return input == null ? weekday : this.add(input - weekday, 'd');
    }

    function getSetISODayOfWeek (input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }

        // behaves the same as moment#day except
        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
        // as a setter, sunday should belong to the previous week.

        if (input != null) {
            var weekday = parseIsoWeekday(input, this.localeData());
            return this.day(this.day() % 7 ? weekday : weekday - 7);
        } else {
            return this.day() || 7;
        }
    }

    var defaultWeekdaysRegex = matchWord;
    function weekdaysRegex (isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysStrictRegex;
            } else {
                return this._weekdaysRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                this._weekdaysRegex = defaultWeekdaysRegex;
            }
            return this._weekdaysStrictRegex && isStrict ?
                this._weekdaysStrictRegex : this._weekdaysRegex;
        }
    }

    var defaultWeekdaysShortRegex = matchWord;
    function weekdaysShortRegex (isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysShortStrictRegex;
            } else {
                return this._weekdaysShortRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysShortRegex')) {
                this._weekdaysShortRegex = defaultWeekdaysShortRegex;
            }
            return this._weekdaysShortStrictRegex && isStrict ?
                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;
        }
    }

    var defaultWeekdaysMinRegex = matchWord;
    function weekdaysMinRegex (isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysMinStrictRegex;
            } else {
                return this._weekdaysMinRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysMinRegex')) {
                this._weekdaysMinRegex = defaultWeekdaysMinRegex;
            }
            return this._weekdaysMinStrictRegex && isStrict ?
                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;
        }
    }


    function computeWeekdaysParse () {
        function cmpLenRev(a, b) {
            return b.length - a.length;
        }

        var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],
            i, mom, minp, shortp, longp;
        for (i = 0; i < 7; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, 1]).day(i);
            minp = this.weekdaysMin(mom, '');
            shortp = this.weekdaysShort(mom, '');
            longp = this.weekdays(mom, '');
            minPieces.push(minp);
            shortPieces.push(shortp);
            longPieces.push(longp);
            mixedPieces.push(minp);
            mixedPieces.push(shortp);
            mixedPieces.push(longp);
        }
        // Sorting makes sure if one weekday (or abbr) is a prefix of another it
        // will match the longer piece.
        minPieces.sort(cmpLenRev);
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);
        for (i = 0; i < 7; i++) {
            shortPieces[i] = regexEscape(shortPieces[i]);
            longPieces[i] = regexEscape(longPieces[i]);
            mixedPieces[i] = regexEscape(mixedPieces[i]);
        }

        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._weekdaysShortRegex = this._weekdaysRegex;
        this._weekdaysMinRegex = this._weekdaysRegex;

        this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
        this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
        this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');
    }

    // FORMATTING

    function hFormat() {
        return this.hours() % 12 || 12;
    }

    function kFormat() {
        return this.hours() || 24;
    }

    addFormatToken('H', ['HH', 2], 0, 'hour');
    addFormatToken('h', ['hh', 2], 0, hFormat);
    addFormatToken('k', ['kk', 2], 0, kFormat);

    addFormatToken('hmm', 0, 0, function () {
        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
    });

    addFormatToken('hmmss', 0, 0, function () {
        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +
            zeroFill(this.seconds(), 2);
    });

    addFormatToken('Hmm', 0, 0, function () {
        return '' + this.hours() + zeroFill(this.minutes(), 2);
    });

    addFormatToken('Hmmss', 0, 0, function () {
        return '' + this.hours() + zeroFill(this.minutes(), 2) +
            zeroFill(this.seconds(), 2);
    });

    function meridiem (token, lowercase) {
        addFormatToken(token, 0, 0, function () {
            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);
        });
    }

    meridiem('a', true);
    meridiem('A', false);

    // ALIASES

    addUnitAlias('hour', 'h');

    // PRIORITY
    addUnitPriority('hour', 13);

    // PARSING

    function matchMeridiem (isStrict, locale) {
        return locale._meridiemParse;
    }

    addRegexToken('a',  matchMeridiem);
    addRegexToken('A',  matchMeridiem);
    addRegexToken('H',  match1to2);
    addRegexToken('h',  match1to2);
    addRegexToken('k',  match1to2);
    addRegexToken('HH', match1to2, match2);
    addRegexToken('hh', match1to2, match2);
    addRegexToken('kk', match1to2, match2);

    addRegexToken('hmm', match3to4);
    addRegexToken('hmmss', match5to6);
    addRegexToken('Hmm', match3to4);
    addRegexToken('Hmmss', match5to6);

    addParseToken(['H', 'HH'], HOUR);
    addParseToken(['k', 'kk'], function (input, array, config) {
        var kInput = toInt(input);
        array[HOUR] = kInput === 24 ? 0 : kInput;
    });
    addParseToken(['a', 'A'], function (input, array, config) {
        config._isPm = config._locale.isPM(input);
        config._meridiem = input;
    });
    addParseToken(['h', 'hh'], function (input, array, config) {
        array[HOUR] = toInt(input);
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('hmmss', function (input, array, config) {
        var pos1 = input.length - 4;
        var pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('Hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
    });
    addParseToken('Hmmss', function (input, array, config) {
        var pos1 = input.length - 4;
        var pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
    });

    // LOCALES

    function localeIsPM (input) {
        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
        // Using charAt should be more compatible.
        return ((input + '').toLowerCase().charAt(0) === 'p');
    }

    var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;
    function localeMeridiem (hours, minutes, isLower) {
        if (hours > 11) {
            return isLower ? 'pm' : 'PM';
        } else {
            return isLower ? 'am' : 'AM';
        }
    }


    // MOMENTS

    // Setting the hour should keep the time, because the user explicitly
    // specified which hour they want. So trying to maintain the same hour (in
    // a new timezone) makes sense. Adding/subtracting hours does not follow
    // this rule.
    var getSetHour = makeGetSet('Hours', true);

    var baseConfig = {
        calendar: defaultCalendar,
        longDateFormat: defaultLongDateFormat,
        invalidDate: defaultInvalidDate,
        ordinal: defaultOrdinal,
        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
        relativeTime: defaultRelativeTime,

        months: defaultLocaleMonths,
        monthsShort: defaultLocaleMonthsShort,

        week: defaultLocaleWeek,

        weekdays: defaultLocaleWeekdays,
        weekdaysMin: defaultLocaleWeekdaysMin,
        weekdaysShort: defaultLocaleWeekdaysShort,

        meridiemParse: defaultLocaleMeridiemParse
    };

    // internal storage for locale config files
    var locales = {};
    var localeFamilies = {};
    var globalLocale;

    function normalizeLocale(key) {
        return key ? key.toLowerCase().replace('_', '-') : key;
    }

    // pick the locale from the array
    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
    function chooseLocale(names) {
        var i = 0, j, next, locale, split;

        while (i < names.length) {
            split = normalizeLocale(names[i]).split('-');
            j = split.length;
            next = normalizeLocale(names[i + 1]);
            next = next ? next.split('-') : null;
            while (j > 0) {
                locale = loadLocale(split.slice(0, j).join('-'));
                if (locale) {
                    return locale;
                }
                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
                    //the next array item is better than a shallower substring of this one
                    break;
                }
                j--;
            }
            i++;
        }
        return globalLocale;
    }

    function loadLocale(name) {
        var oldLocale = null;
        // TODO: Find a better way to register and load all the locales in Node
        if (!locales[name] && (typeof module !== 'undefined') &&
                module && module.exports) {
            try {
                oldLocale = globalLocale._abbr;
                var aliasedRequire = require;
                __webpack_require__(293)("./" + name);
                getSetGlobalLocale(oldLocale);
            } catch (e) {}
        }
        return locales[name];
    }

    // This function will load locale and then set the global locale.  If
    // no arguments are passed in, it will simply return the current global
    // locale key.
    function getSetGlobalLocale (key, values) {
        var data;
        if (key) {
            if (isUndefined(values)) {
                data = getLocale(key);
            }
            else {
                data = defineLocale(key, values);
            }

            if (data) {
                // moment.duration._locale = moment._locale = data;
                globalLocale = data;
            }
            else {
                if ((typeof console !==  'undefined') && console.warn) {
                    //warn user if arguments are passed but the locale could not be set
                    console.warn('Locale ' + key +  ' not found. Did you forget to load it?');
                }
            }
        }

        return globalLocale._abbr;
    }

    function defineLocale (name, config) {
        if (config !== null) {
            var locale, parentConfig = baseConfig;
            config.abbr = name;
            if (locales[name] != null) {
                deprecateSimple('defineLocaleOverride',
                        'use moment.updateLocale(localeName, config) to change ' +
                        'an existing locale. moment.defineLocale(localeName, ' +
                        'config) should only be used for creating a new locale ' +
                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');
                parentConfig = locales[name]._config;
            } else if (config.parentLocale != null) {
                if (locales[config.parentLocale] != null) {
                    parentConfig = locales[config.parentLocale]._config;
                } else {
                    locale = loadLocale(config.parentLocale);
                    if (locale != null) {
                        parentConfig = locale._config;
                    } else {
                        if (!localeFamilies[config.parentLocale]) {
                            localeFamilies[config.parentLocale] = [];
                        }
                        localeFamilies[config.parentLocale].push({
                            name: name,
                            config: config
                        });
                        return null;
                    }
                }
            }
            locales[name] = new Locale(mergeConfigs(parentConfig, config));

            if (localeFamilies[name]) {
                localeFamilies[name].forEach(function (x) {
                    defineLocale(x.name, x.config);
                });
            }

            // backwards compat for now: also set the locale
            // make sure we set the locale AFTER all child locales have been
            // created, so we won't end up with the child locale set.
            getSetGlobalLocale(name);


            return locales[name];
        } else {
            // useful for testing
            delete locales[name];
            return null;
        }
    }

    function updateLocale(name, config) {
        if (config != null) {
            var locale, tmpLocale, parentConfig = baseConfig;
            // MERGE
            tmpLocale = loadLocale(name);
            if (tmpLocale != null) {
                parentConfig = tmpLocale._config;
            }
            config = mergeConfigs(parentConfig, config);
            locale = new Locale(config);
            locale.parentLocale = locales[name];
            locales[name] = locale;

            // backwards compat for now: also set the locale
            getSetGlobalLocale(name);
        } else {
            // pass null for config to unupdate, useful for tests
            if (locales[name] != null) {
                if (locales[name].parentLocale != null) {
                    locales[name] = locales[name].parentLocale;
                } else if (locales[name] != null) {
                    delete locales[name];
                }
            }
        }
        return locales[name];
    }

    // returns locale data
    function getLocale (key) {
        var locale;

        if (key && key._locale && key._locale._abbr) {
            key = key._locale._abbr;
        }

        if (!key) {
            return globalLocale;
        }

        if (!isArray(key)) {
            //short-circuit everything else
            locale = loadLocale(key);
            if (locale) {
                return locale;
            }
            key = [key];
        }

        return chooseLocale(key);
    }

    function listLocales() {
        return keys(locales);
    }

    function checkOverflow (m) {
        var overflow;
        var a = m._a;

        if (a && getParsingFlags(m).overflow === -2) {
            overflow =
                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :
                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :
                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :
                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :
                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :
                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :
                -1;

            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
                overflow = DATE;
            }
            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
                overflow = WEEK;
            }
            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
                overflow = WEEKDAY;
            }

            getParsingFlags(m).overflow = overflow;
        }

        return m;
    }

    // Pick the first defined of two or three arguments.
    function defaults(a, b, c) {
        if (a != null) {
            return a;
        }
        if (b != null) {
            return b;
        }
        return c;
    }

    function currentDateArray(config) {
        // hooks is actually the exported moment object
        var nowValue = new Date(hooks.now());
        if (config._useUTC) {
            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];
        }
        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
    }

    // convert an array to a date.
    // the array should mirror the parameters below
    // note: all values past the year are optional and will default to the lowest possible value.
    // [year, month, day , hour, minute, second, millisecond]
    function configFromArray (config) {
        var i, date, input = [], currentDate, expectedWeekday, yearToUse;

        if (config._d) {
            return;
        }

        currentDate = currentDateArray(config);

        //compute day of the year from weeks and weekdays
        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
            dayOfYearFromWeekInfo(config);
        }

        //if the day of the year is set, figure out what it is
        if (config._dayOfYear != null) {
            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

            if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {
                getParsingFlags(config)._overflowDayOfYear = true;
            }

            date = createUTCDate(yearToUse, 0, config._dayOfYear);
            config._a[MONTH] = date.getUTCMonth();
            config._a[DATE] = date.getUTCDate();
        }

        // Default to current date.
        // * if no year, month, day of month are given, default to today
        // * if day of month is given, default month and year
        // * if month is given, default only year
        // * if year is given, don't default anything
        for (i = 0; i < 3 && config._a[i] == null; ++i) {
            config._a[i] = input[i] = currentDate[i];
        }

        // Zero out whatever was not defaulted, including time
        for (; i < 7; i++) {
            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];
        }

        // Check for 24:00:00.000
        if (config._a[HOUR] === 24 &&
                config._a[MINUTE] === 0 &&
                config._a[SECOND] === 0 &&
                config._a[MILLISECOND] === 0) {
            config._nextDay = true;
            config._a[HOUR] = 0;
        }

        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);
        expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();

        // Apply timezone offset from input. The actual utcOffset can be changed
        // with parseZone.
        if (config._tzm != null) {
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
        }

        if (config._nextDay) {
            config._a[HOUR] = 24;
        }

        // check for mismatching day of week
        if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {
            getParsingFlags(config).weekdayMismatch = true;
        }
    }

    function dayOfYearFromWeekInfo(config) {
        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;

        w = config._w;
        if (w.GG != null || w.W != null || w.E != null) {
            dow = 1;
            doy = 4;

            // TODO: We need to take the current isoWeekYear, but that depends on
            // how we interpret now (local, utc, fixed offset). So create
            // a now version of current config (take local/utc/offset flags, and
            // create now).
            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);
            week = defaults(w.W, 1);
            weekday = defaults(w.E, 1);
            if (weekday < 1 || weekday > 7) {
                weekdayOverflow = true;
            }
        } else {
            dow = config._locale._week.dow;
            doy = config._locale._week.doy;

            var curWeek = weekOfYear(createLocal(), dow, doy);

            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);

            // Default to current week.
            week = defaults(w.w, curWeek.week);

            if (w.d != null) {
                // weekday -- low day numbers are considered next week
                weekday = w.d;
                if (weekday < 0 || weekday > 6) {
                    weekdayOverflow = true;
                }
            } else if (w.e != null) {
                // local weekday -- counting starts from beginning of week
                weekday = w.e + dow;
                if (w.e < 0 || w.e > 6) {
                    weekdayOverflow = true;
                }
            } else {
                // default to beginning of week
                weekday = dow;
            }
        }
        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
            getParsingFlags(config)._overflowWeeks = true;
        } else if (weekdayOverflow != null) {
            getParsingFlags(config)._overflowWeekday = true;
        } else {
            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
            config._a[YEAR] = temp.year;
            config._dayOfYear = temp.dayOfYear;
        }
    }

    // iso 8601 regex
    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
    var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
    var basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;

    var tzRegex = /Z|[+-]\d\d(?::?\d\d)?/;

    var isoDates = [
        ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
        ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
        ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
        ['GGGG-[W]WW', /\d{4}-W\d\d/, false],
        ['YYYY-DDD', /\d{4}-\d{3}/],
        ['YYYY-MM', /\d{4}-\d\d/, false],
        ['YYYYYYMMDD', /[+-]\d{10}/],
        ['YYYYMMDD', /\d{8}/],
        // YYYYMM is NOT allowed by the standard
        ['GGGG[W]WWE', /\d{4}W\d{3}/],
        ['GGGG[W]WW', /\d{4}W\d{2}/, false],
        ['YYYYDDD', /\d{7}/]
    ];

    // iso time formats and regexes
    var isoTimes = [
        ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
        ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
        ['HH:mm:ss', /\d\d:\d\d:\d\d/],
        ['HH:mm', /\d\d:\d\d/],
        ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
        ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
        ['HHmmss', /\d\d\d\d\d\d/],
        ['HHmm', /\d\d\d\d/],
        ['HH', /\d\d/]
    ];

    var aspNetJsonRegex = /^\/?Date\((\-?\d+)/i;

    // date from iso format
    function configFromISO(config) {
        var i, l,
            string = config._i,
            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
            allowTime, dateFormat, timeFormat, tzFormat;

        if (match) {
            getParsingFlags(config).iso = true;

            for (i = 0, l = isoDates.length; i < l; i++) {
                if (isoDates[i][1].exec(match[1])) {
                    dateFormat = isoDates[i][0];
                    allowTime = isoDates[i][2] !== false;
                    break;
                }
            }
            if (dateFormat == null) {
                config._isValid = false;
                return;
            }
            if (match[3]) {
                for (i = 0, l = isoTimes.length; i < l; i++) {
                    if (isoTimes[i][1].exec(match[3])) {
                        // match[2] should be 'T' or space
                        timeFormat = (match[2] || ' ') + isoTimes[i][0];
                        break;
                    }
                }
                if (timeFormat == null) {
                    config._isValid = false;
                    return;
                }
            }
            if (!allowTime && timeFormat != null) {
                config._isValid = false;
                return;
            }
            if (match[4]) {
                if (tzRegex.exec(match[4])) {
                    tzFormat = 'Z';
                } else {
                    config._isValid = false;
                    return;
                }
            }
            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
            configFromStringAndFormat(config);
        } else {
            config._isValid = false;
        }
    }

    // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3
    var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;

    function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {
        var result = [
            untruncateYear(yearStr),
            defaultLocaleMonthsShort.indexOf(monthStr),
            parseInt(dayStr, 10),
            parseInt(hourStr, 10),
            parseInt(minuteStr, 10)
        ];

        if (secondStr) {
            result.push(parseInt(secondStr, 10));
        }

        return result;
    }

    function untruncateYear(yearStr) {
        var year = parseInt(yearStr, 10);
        if (year <= 49) {
            return 2000 + year;
        } else if (year <= 999) {
            return 1900 + year;
        }
        return year;
    }

    function preprocessRFC2822(s) {
        // Remove comments and folding whitespace and replace multiple-spaces with a single space
        return s.replace(/\([^)]*\)|[\n\t]/g, ' ').replace(/(\s\s+)/g, ' ').replace(/^\s\s*/, '').replace(/\s\s*$/, '');
    }

    function checkWeekday(weekdayStr, parsedInput, config) {
        if (weekdayStr) {
            // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.
            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),
                weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();
            if (weekdayProvided !== weekdayActual) {
                getParsingFlags(config).weekdayMismatch = true;
                config._isValid = false;
                return false;
            }
        }
        return true;
    }

    var obsOffsets = {
        UT: 0,
        GMT: 0,
        EDT: -4 * 60,
        EST: -5 * 60,
        CDT: -5 * 60,
        CST: -6 * 60,
        MDT: -6 * 60,
        MST: -7 * 60,
        PDT: -7 * 60,
        PST: -8 * 60
    };

    function calculateOffset(obsOffset, militaryOffset, numOffset) {
        if (obsOffset) {
            return obsOffsets[obsOffset];
        } else if (militaryOffset) {
            // the only allowed military tz is Z
            return 0;
        } else {
            var hm = parseInt(numOffset, 10);
            var m = hm % 100, h = (hm - m) / 100;
            return h * 60 + m;
        }
    }

    // date and time from ref 2822 format
    function configFromRFC2822(config) {
        var match = rfc2822.exec(preprocessRFC2822(config._i));
        if (match) {
            var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);
            if (!checkWeekday(match[1], parsedArray, config)) {
                return;
            }

            config._a = parsedArray;
            config._tzm = calculateOffset(match[8], match[9], match[10]);

            config._d = createUTCDate.apply(null, config._a);
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);

            getParsingFlags(config).rfc2822 = true;
        } else {
            config._isValid = false;
        }
    }

    // date from iso format or fallback
    function configFromString(config) {
        var matched = aspNetJsonRegex.exec(config._i);

        if (matched !== null) {
            config._d = new Date(+matched[1]);
            return;
        }

        configFromISO(config);
        if (config._isValid === false) {
            delete config._isValid;
        } else {
            return;
        }

        configFromRFC2822(config);
        if (config._isValid === false) {
            delete config._isValid;
        } else {
            return;
        }

        // Final attempt, use Input Fallback
        hooks.createFromInputFallback(config);
    }

    hooks.createFromInputFallback = deprecate(
        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +
        'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +
        'discouraged and will be removed in an upcoming major release. Please refer to ' +
        'http://momentjs.com/guides/#/warnings/js-date/ for more info.',
        function (config) {
            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
        }
    );

    // constant that refers to the ISO standard
    hooks.ISO_8601 = function () {};

    // constant that refers to the RFC 2822 form
    hooks.RFC_2822 = function () {};

    // date from string and format string
    function configFromStringAndFormat(config) {
        // TODO: Move this to another part of the creation flow to prevent circular deps
        if (config._f === hooks.ISO_8601) {
            configFromISO(config);
            return;
        }
        if (config._f === hooks.RFC_2822) {
            configFromRFC2822(config);
            return;
        }
        config._a = [];
        getParsingFlags(config).empty = true;

        // This array is used to make a Date, either with `new Date` or `Date.UTC`
        var string = '' + config._i,
            i, parsedInput, tokens, token, skipped,
            stringLength = string.length,
            totalParsedInputLength = 0;

        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];

        for (i = 0; i < tokens.length; i++) {
            token = tokens[i];
            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];
            // console.log('token', token, 'parsedInput', parsedInput,
            //         'regex', getParseRegexForToken(token, config));
            if (parsedInput) {
                skipped = string.substr(0, string.indexOf(parsedInput));
                if (skipped.length > 0) {
                    getParsingFlags(config).unusedInput.push(skipped);
                }
                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
                totalParsedInputLength += parsedInput.length;
            }
            // don't parse if it's not a known token
            if (formatTokenFunctions[token]) {
                if (parsedInput) {
                    getParsingFlags(config).empty = false;
                }
                else {
                    getParsingFlags(config).unusedTokens.push(token);
                }
                addTimeToArrayFromToken(token, parsedInput, config);
            }
            else if (config._strict && !parsedInput) {
                getParsingFlags(config).unusedTokens.push(token);
            }
        }

        // add remaining unparsed input length to the string
        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;
        if (string.length > 0) {
            getParsingFlags(config).unusedInput.push(string);
        }

        // clear _12h flag if hour is <= 12
        if (config._a[HOUR] <= 12 &&
            getParsingFlags(config).bigHour === true &&
            config._a[HOUR] > 0) {
            getParsingFlags(config).bigHour = undefined;
        }

        getParsingFlags(config).parsedDateParts = config._a.slice(0);
        getParsingFlags(config).meridiem = config._meridiem;
        // handle meridiem
        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);

        configFromArray(config);
        checkOverflow(config);
    }


    function meridiemFixWrap (locale, hour, meridiem) {
        var isPm;

        if (meridiem == null) {
            // nothing to do
            return hour;
        }
        if (locale.meridiemHour != null) {
            return locale.meridiemHour(hour, meridiem);
        } else if (locale.isPM != null) {
            // Fallback
            isPm = locale.isPM(meridiem);
            if (isPm && hour < 12) {
                hour += 12;
            }
            if (!isPm && hour === 12) {
                hour = 0;
            }
            return hour;
        } else {
            // this is not supposed to happen
            return hour;
        }
    }

    // date from string and array of format strings
    function configFromStringAndArray(config) {
        var tempConfig,
            bestMoment,

            scoreToBeat,
            i,
            currentScore;

        if (config._f.length === 0) {
            getParsingFlags(config).invalidFormat = true;
            config._d = new Date(NaN);
            return;
        }

        for (i = 0; i < config._f.length; i++) {
            currentScore = 0;
            tempConfig = copyConfig({}, config);
            if (config._useUTC != null) {
                tempConfig._useUTC = config._useUTC;
            }
            tempConfig._f = config._f[i];
            configFromStringAndFormat(tempConfig);

            if (!isValid(tempConfig)) {
                continue;
            }

            // if there is any input that was not parsed add a penalty for that format
            currentScore += getParsingFlags(tempConfig).charsLeftOver;

            //or tokens
            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;

            getParsingFlags(tempConfig).score = currentScore;

            if (scoreToBeat == null || currentScore < scoreToBeat) {
                scoreToBeat = currentScore;
                bestMoment = tempConfig;
            }
        }

        extend(config, bestMoment || tempConfig);
    }

    function configFromObject(config) {
        if (config._d) {
            return;
        }

        var i = normalizeObjectUnits(config._i);
        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {
            return obj && parseInt(obj, 10);
        });

        configFromArray(config);
    }

    function createFromConfig (config) {
        var res = new Moment(checkOverflow(prepareConfig(config)));
        if (res._nextDay) {
            // Adding is smart enough around DST
            res.add(1, 'd');
            res._nextDay = undefined;
        }

        return res;
    }

    function prepareConfig (config) {
        var input = config._i,
            format = config._f;

        config._locale = config._locale || getLocale(config._l);

        if (input === null || (format === undefined && input === '')) {
            return createInvalid({nullInput: true});
        }

        if (typeof input === 'string') {
            config._i = input = config._locale.preparse(input);
        }

        if (isMoment(input)) {
            return new Moment(checkOverflow(input));
        } else if (isDate(input)) {
            config._d = input;
        } else if (isArray(format)) {
            configFromStringAndArray(config);
        } else if (format) {
            configFromStringAndFormat(config);
        }  else {
            configFromInput(config);
        }

        if (!isValid(config)) {
            config._d = null;
        }

        return config;
    }

    function configFromInput(config) {
        var input = config._i;
        if (isUndefined(input)) {
            config._d = new Date(hooks.now());
        } else if (isDate(input)) {
            config._d = new Date(input.valueOf());
        } else if (typeof input === 'string') {
            configFromString(config);
        } else if (isArray(input)) {
            config._a = map(input.slice(0), function (obj) {
                return parseInt(obj, 10);
            });
            configFromArray(config);
        } else if (isObject(input)) {
            configFromObject(config);
        } else if (isNumber(input)) {
            // from milliseconds
            config._d = new Date(input);
        } else {
            hooks.createFromInputFallback(config);
        }
    }

    function createLocalOrUTC (input, format, locale, strict, isUTC) {
        var c = {};

        if (locale === true || locale === false) {
            strict = locale;
            locale = undefined;
        }

        if ((isObject(input) && isObjectEmpty(input)) ||
                (isArray(input) && input.length === 0)) {
            input = undefined;
        }
        // object construction must be done this way.
        // https://github.com/moment/moment/issues/1423
        c._isAMomentObject = true;
        c._useUTC = c._isUTC = isUTC;
        c._l = locale;
        c._i = input;
        c._f = format;
        c._strict = strict;

        return createFromConfig(c);
    }

    function createLocal (input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, false);
    }

    var prototypeMin = deprecate(
        'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',
        function () {
            var other = createLocal.apply(null, arguments);
            if (this.isValid() && other.isValid()) {
                return other < this ? this : other;
            } else {
                return createInvalid();
            }
        }
    );

    var prototypeMax = deprecate(
        'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',
        function () {
            var other = createLocal.apply(null, arguments);
            if (this.isValid() && other.isValid()) {
                return other > this ? this : other;
            } else {
                return createInvalid();
            }
        }
    );

    // Pick a moment m from moments so that m[fn](other) is true for all
    // other. This relies on the function fn to be transitive.
    //
    // moments should either be an array of moment objects or an array, whose
    // first element is an array of moment objects.
    function pickBy(fn, moments) {
        var res, i;
        if (moments.length === 1 && isArray(moments[0])) {
            moments = moments[0];
        }
        if (!moments.length) {
            return createLocal();
        }
        res = moments[0];
        for (i = 1; i < moments.length; ++i) {
            if (!moments[i].isValid() || moments[i][fn](res)) {
                res = moments[i];
            }
        }
        return res;
    }

    // TODO: Use [].sort instead?
    function min () {
        var args = [].slice.call(arguments, 0);

        return pickBy('isBefore', args);
    }

    function max () {
        var args = [].slice.call(arguments, 0);

        return pickBy('isAfter', args);
    }

    var now = function () {
        return Date.now ? Date.now() : +(new Date());
    };

    var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];

    function isDurationValid(m) {
        for (var key in m) {
            if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {
                return false;
            }
        }

        var unitHasDecimal = false;
        for (var i = 0; i < ordering.length; ++i) {
            if (m[ordering[i]]) {
                if (unitHasDecimal) {
                    return false; // only allow non-integers for smallest unit
                }
                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
                    unitHasDecimal = true;
                }
            }
        }

        return true;
    }

    function isValid$1() {
        return this._isValid;
    }

    function createInvalid$1() {
        return createDuration(NaN);
    }

    function Duration (duration) {
        var normalizedInput = normalizeObjectUnits(duration),
            years = normalizedInput.year || 0,
            quarters = normalizedInput.quarter || 0,
            months = normalizedInput.month || 0,
            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,
            days = normalizedInput.day || 0,
            hours = normalizedInput.hour || 0,
            minutes = normalizedInput.minute || 0,
            seconds = normalizedInput.second || 0,
            milliseconds = normalizedInput.millisecond || 0;

        this._isValid = isDurationValid(normalizedInput);

        // representation for dateAddRemove
        this._milliseconds = +milliseconds +
            seconds * 1e3 + // 1000
            minutes * 6e4 + // 1000 * 60
            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
        // Because of dateAddRemove treats 24 hours as different from a
        // day when working around DST, we need to store them separately
        this._days = +days +
            weeks * 7;
        // It is impossible to translate months into days without knowing
        // which months you are are talking about, so we have to store
        // it separately.
        this._months = +months +
            quarters * 3 +
            years * 12;

        this._data = {};

        this._locale = getLocale();

        this._bubble();
    }

    function isDuration (obj) {
        return obj instanceof Duration;
    }

    function absRound (number) {
        if (number < 0) {
            return Math.round(-1 * number) * -1;
        } else {
            return Math.round(number);
        }
    }

    // FORMATTING

    function offset (token, separator) {
        addFormatToken(token, 0, 0, function () {
            var offset = this.utcOffset();
            var sign = '+';
            if (offset < 0) {
                offset = -offset;
                sign = '-';
            }
            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);
        });
    }

    offset('Z', ':');
    offset('ZZ', '');

    // PARSING

    addRegexToken('Z',  matchShortOffset);
    addRegexToken('ZZ', matchShortOffset);
    addParseToken(['Z', 'ZZ'], function (input, array, config) {
        config._useUTC = true;
        config._tzm = offsetFromString(matchShortOffset, input);
    });

    // HELPERS

    // timezone chunker
    // '+10:00' > ['10',  '00']
    // '-1530'  > ['-15', '30']
    var chunkOffset = /([\+\-]|\d\d)/gi;

    function offsetFromString(matcher, string) {
        var matches = (string || '').match(matcher);

        if (matches === null) {
            return null;
        }

        var chunk   = matches[matches.length - 1] || [];
        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];
        var minutes = +(parts[1] * 60) + toInt(parts[2]);

        return minutes === 0 ?
          0 :
          parts[0] === '+' ? minutes : -minutes;
    }

    // Return a moment from input, that is local/utc/zone equivalent to model.
    function cloneWithOffset(input, model) {
        var res, diff;
        if (model._isUTC) {
            res = model.clone();
            diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();
            // Use low-level api, because this fn is low-level api.
            res._d.setTime(res._d.valueOf() + diff);
            hooks.updateOffset(res, false);
            return res;
        } else {
            return createLocal(input).local();
        }
    }

    function getDateOffset (m) {
        // On Firefox.24 Date#getTimezoneOffset returns a floating point.
        // https://github.com/moment/moment/pull/1871
        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;
    }

    // HOOKS

    // This function will be called whenever a moment is mutated.
    // It is intended to keep the offset in sync with the timezone.
    hooks.updateOffset = function () {};

    // MOMENTS

    // keepLocalTime = true means only change the timezone, without
    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
    // +0200, so we adjust the time as needed, to be valid.
    //
    // Keeping the time actually adds/subtracts (one hour)
    // from the actual represented time. That is why we call updateOffset
    // a second time. In case it wants us to change the offset again
    // _changeInProgress == true case, then we have to adjust, because
    // there is no such time in the given timezone.
    function getSetOffset (input, keepLocalTime, keepMinutes) {
        var offset = this._offset || 0,
            localAdjust;
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        if (input != null) {
            if (typeof input === 'string') {
                input = offsetFromString(matchShortOffset, input);
                if (input === null) {
                    return this;
                }
            } else if (Math.abs(input) < 16 && !keepMinutes) {
                input = input * 60;
            }
            if (!this._isUTC && keepLocalTime) {
                localAdjust = getDateOffset(this);
            }
            this._offset = input;
            this._isUTC = true;
            if (localAdjust != null) {
                this.add(localAdjust, 'm');
            }
            if (offset !== input) {
                if (!keepLocalTime || this._changeInProgress) {
                    addSubtract(this, createDuration(input - offset, 'm'), 1, false);
                } else if (!this._changeInProgress) {
                    this._changeInProgress = true;
                    hooks.updateOffset(this, true);
                    this._changeInProgress = null;
                }
            }
            return this;
        } else {
            return this._isUTC ? offset : getDateOffset(this);
        }
    }

    function getSetZone (input, keepLocalTime) {
        if (input != null) {
            if (typeof input !== 'string') {
                input = -input;
            }

            this.utcOffset(input, keepLocalTime);

            return this;
        } else {
            return -this.utcOffset();
        }
    }

    function setOffsetToUTC (keepLocalTime) {
        return this.utcOffset(0, keepLocalTime);
    }

    function setOffsetToLocal (keepLocalTime) {
        if (this._isUTC) {
            this.utcOffset(0, keepLocalTime);
            this._isUTC = false;

            if (keepLocalTime) {
                this.subtract(getDateOffset(this), 'm');
            }
        }
        return this;
    }

    function setOffsetToParsedOffset () {
        if (this._tzm != null) {
            this.utcOffset(this._tzm, false, true);
        } else if (typeof this._i === 'string') {
            var tZone = offsetFromString(matchOffset, this._i);
            if (tZone != null) {
                this.utcOffset(tZone);
            }
            else {
                this.utcOffset(0, true);
            }
        }
        return this;
    }

    function hasAlignedHourOffset (input) {
        if (!this.isValid()) {
            return false;
        }
        input = input ? createLocal(input).utcOffset() : 0;

        return (this.utcOffset() - input) % 60 === 0;
    }

    function isDaylightSavingTime () {
        return (
            this.utcOffset() > this.clone().month(0).utcOffset() ||
            this.utcOffset() > this.clone().month(5).utcOffset()
        );
    }

    function isDaylightSavingTimeShifted () {
        if (!isUndefined(this._isDSTShifted)) {
            return this._isDSTShifted;
        }

        var c = {};

        copyConfig(c, this);
        c = prepareConfig(c);

        if (c._a) {
            var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
            this._isDSTShifted = this.isValid() &&
                compareArrays(c._a, other.toArray()) > 0;
        } else {
            this._isDSTShifted = false;
        }

        return this._isDSTShifted;
    }

    function isLocal () {
        return this.isValid() ? !this._isUTC : false;
    }

    function isUtcOffset () {
        return this.isValid() ? this._isUTC : false;
    }

    function isUtc () {
        return this.isValid() ? this._isUTC && this._offset === 0 : false;
    }

    // ASP.NET json date format regex
    var aspNetRegex = /^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/;

    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
    // and further modified to allow for strings containing both week and day
    var isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;

    function createDuration (input, key) {
        var duration = input,
            // matching against regexp is expensive, do it on demand
            match = null,
            sign,
            ret,
            diffRes;

        if (isDuration(input)) {
            duration = {
                ms : input._milliseconds,
                d  : input._days,
                M  : input._months
            };
        } else if (isNumber(input)) {
            duration = {};
            if (key) {
                duration[key] = input;
            } else {
                duration.milliseconds = input;
            }
        } else if (!!(match = aspNetRegex.exec(input))) {
            sign = (match[1] === '-') ? -1 : 1;
            duration = {
                y  : 0,
                d  : toInt(match[DATE])                         * sign,
                h  : toInt(match[HOUR])                         * sign,
                m  : toInt(match[MINUTE])                       * sign,
                s  : toInt(match[SECOND])                       * sign,
                ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match
            };
        } else if (!!(match = isoRegex.exec(input))) {
            sign = (match[1] === '-') ? -1 : 1;
            duration = {
                y : parseIso(match[2], sign),
                M : parseIso(match[3], sign),
                w : parseIso(match[4], sign),
                d : parseIso(match[5], sign),
                h : parseIso(match[6], sign),
                m : parseIso(match[7], sign),
                s : parseIso(match[8], sign)
            };
        } else if (duration == null) {// checks for null or undefined
            duration = {};
        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {
            diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));

            duration = {};
            duration.ms = diffRes.milliseconds;
            duration.M = diffRes.months;
        }

        ret = new Duration(duration);

        if (isDuration(input) && hasOwnProp(input, '_locale')) {
            ret._locale = input._locale;
        }

        return ret;
    }

    createDuration.fn = Duration.prototype;
    createDuration.invalid = createInvalid$1;

    function parseIso (inp, sign) {
        // We'd normally use ~~inp for this, but unfortunately it also
        // converts floats to ints.
        // inp may be undefined, so careful calling replace on it.
        var res = inp && parseFloat(inp.replace(',', '.'));
        // apply sign while we're at it
        return (isNaN(res) ? 0 : res) * sign;
    }

    function positiveMomentsDifference(base, other) {
        var res = {};

        res.months = other.month() - base.month() +
            (other.year() - base.year()) * 12;
        if (base.clone().add(res.months, 'M').isAfter(other)) {
            --res.months;
        }

        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));

        return res;
    }

    function momentsDifference(base, other) {
        var res;
        if (!(base.isValid() && other.isValid())) {
            return {milliseconds: 0, months: 0};
        }

        other = cloneWithOffset(other, base);
        if (base.isBefore(other)) {
            res = positiveMomentsDifference(base, other);
        } else {
            res = positiveMomentsDifference(other, base);
            res.milliseconds = -res.milliseconds;
            res.months = -res.months;
        }

        return res;
    }

    // TODO: remove 'name' arg after deprecation is removed
    function createAdder(direction, name) {
        return function (val, period) {
            var dur, tmp;
            //invert the arguments, but complain about it
            if (period !== null && !isNaN(+period)) {
                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +
                'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');
                tmp = val; val = period; period = tmp;
            }

            val = typeof val === 'string' ? +val : val;
            dur = createDuration(val, period);
            addSubtract(this, dur, direction);
            return this;
        };
    }

    function addSubtract (mom, duration, isAdding, updateOffset) {
        var milliseconds = duration._milliseconds,
            days = absRound(duration._days),
            months = absRound(duration._months);

        if (!mom.isValid()) {
            // No op
            return;
        }

        updateOffset = updateOffset == null ? true : updateOffset;

        if (months) {
            setMonth(mom, get(mom, 'Month') + months * isAdding);
        }
        if (days) {
            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);
        }
        if (milliseconds) {
            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
        }
        if (updateOffset) {
            hooks.updateOffset(mom, days || months);
        }
    }

    var add      = createAdder(1, 'add');
    var subtract = createAdder(-1, 'subtract');

    function getCalendarFormat(myMoment, now) {
        var diff = myMoment.diff(now, 'days', true);
        return diff < -6 ? 'sameElse' :
                diff < -1 ? 'lastWeek' :
                diff < 0 ? 'lastDay' :
                diff < 1 ? 'sameDay' :
                diff < 2 ? 'nextDay' :
                diff < 7 ? 'nextWeek' : 'sameElse';
    }

    function calendar$1 (time, formats) {
        // We want to compare the start of today, vs this.
        // Getting start-of-today depends on whether we're local/utc/offset or not.
        var now = time || createLocal(),
            sod = cloneWithOffset(now, this).startOf('day'),
            format = hooks.calendarFormat(this, sod) || 'sameElse';

        var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);

        return this.format(output || this.localeData().calendar(format, this, createLocal(now)));
    }

    function clone () {
        return new Moment(this);
    }

    function isAfter (input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() > localInput.valueOf();
        } else {
            return localInput.valueOf() < this.clone().startOf(units).valueOf();
        }
    }

    function isBefore (input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() < localInput.valueOf();
        } else {
            return this.clone().endOf(units).valueOf() < localInput.valueOf();
        }
    }

    function isBetween (from, to, units, inclusivity) {
        var localFrom = isMoment(from) ? from : createLocal(from),
            localTo = isMoment(to) ? to : createLocal(to);
        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {
            return false;
        }
        inclusivity = inclusivity || '()';
        return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) &&
            (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));
    }

    function isSame (input, units) {
        var localInput = isMoment(input) ? input : createLocal(input),
            inputMs;
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() === localInput.valueOf();
        } else {
            inputMs = localInput.valueOf();
            return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();
        }
    }

    function isSameOrAfter (input, units) {
        return this.isSame(input, units) || this.isAfter(input, units);
    }

    function isSameOrBefore (input, units) {
        return this.isSame(input, units) || this.isBefore(input, units);
    }

    function diff (input, units, asFloat) {
        var that,
            zoneDelta,
            output;

        if (!this.isValid()) {
            return NaN;
        }

        that = cloneWithOffset(input, this);

        if (!that.isValid()) {
            return NaN;
        }

        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;

        units = normalizeUnits(units);

        switch (units) {
            case 'year': output = monthDiff(this, that) / 12; break;
            case 'month': output = monthDiff(this, that); break;
            case 'quarter': output = monthDiff(this, that) / 3; break;
            case 'second': output = (this - that) / 1e3; break; // 1000
            case 'minute': output = (this - that) / 6e4; break; // 1000 * 60
            case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60
            case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst
            case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst
            default: output = this - that;
        }

        return asFloat ? output : absFloor(output);
    }

    function monthDiff (a, b) {
        // difference in months
        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),
            // b is in (anchor - 1 month, anchor + 1 month)
            anchor = a.clone().add(wholeMonthDiff, 'months'),
            anchor2, adjust;

        if (b - anchor < 0) {
            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
            // linear across the month
            adjust = (b - anchor) / (anchor - anchor2);
        } else {
            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
            // linear across the month
            adjust = (b - anchor) / (anchor2 - anchor);
        }

        //check for negative zero, return zero if negative zero
        return -(wholeMonthDiff + adjust) || 0;
    }

    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';

    function toString () {
        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
    }

    function toISOString(keepOffset) {
        if (!this.isValid()) {
            return null;
        }
        var utc = keepOffset !== true;
        var m = utc ? this.clone().utc() : this;
        if (m.year() < 0 || m.year() > 9999) {
            return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');
        }
        if (isFunction(Date.prototype.toISOString)) {
            // native implementation is ~50x faster, use it when we can
            if (utc) {
                return this.toDate().toISOString();
            } else {
                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));
            }
        }
        return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');
    }

    /**
     * Return a human readable representation of a moment that can
     * also be evaluated to get a new moment which is the same
     *
     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
     */
    function inspect () {
        if (!this.isValid()) {
            return 'moment.invalid(/* ' + this._i + ' */)';
        }
        var func = 'moment';
        var zone = '';
        if (!this.isLocal()) {
            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';
            zone = 'Z';
        }
        var prefix = '[' + func + '("]';
        var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';
        var datetime = '-MM-DD[T]HH:mm:ss.SSS';
        var suffix = zone + '[")]';

        return this.format(prefix + year + datetime + suffix);
    }

    function format (inputString) {
        if (!inputString) {
            inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;
        }
        var output = formatMoment(this, inputString);
        return this.localeData().postformat(output);
    }

    function from (time, withoutSuffix) {
        if (this.isValid() &&
                ((isMoment(time) && time.isValid()) ||
                 createLocal(time).isValid())) {
            return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);
        } else {
            return this.localeData().invalidDate();
        }
    }

    function fromNow (withoutSuffix) {
        return this.from(createLocal(), withoutSuffix);
    }

    function to (time, withoutSuffix) {
        if (this.isValid() &&
                ((isMoment(time) && time.isValid()) ||
                 createLocal(time).isValid())) {
            return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);
        } else {
            return this.localeData().invalidDate();
        }
    }

    function toNow (withoutSuffix) {
        return this.to(createLocal(), withoutSuffix);
    }

    // If passed a locale key, it will set the locale for this
    // instance.  Otherwise, it will return the locale configuration
    // variables for this instance.
    function locale (key) {
        var newLocaleData;

        if (key === undefined) {
            return this._locale._abbr;
        } else {
            newLocaleData = getLocale(key);
            if (newLocaleData != null) {
                this._locale = newLocaleData;
            }
            return this;
        }
    }

    var lang = deprecate(
        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
        function (key) {
            if (key === undefined) {
                return this.localeData();
            } else {
                return this.locale(key);
            }
        }
    );

    function localeData () {
        return this._locale;
    }

    var MS_PER_SECOND = 1000;
    var MS_PER_MINUTE = 60 * MS_PER_SECOND;
    var MS_PER_HOUR = 60 * MS_PER_MINUTE;
    var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;

    // actual modulo - handles negative numbers (for dates before 1970):
    function mod$1(dividend, divisor) {
        return (dividend % divisor + divisor) % divisor;
    }

    function localStartOfDate(y, m, d) {
        // the date constructor remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            return new Date(y + 400, m, d) - MS_PER_400_YEARS;
        } else {
            return new Date(y, m, d).valueOf();
        }
    }

    function utcStartOfDate(y, m, d) {
        // Date.UTC remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;
        } else {
            return Date.UTC(y, m, d);
        }
    }

    function startOf (units) {
        var time;
        units = normalizeUnits(units);
        if (units === undefined || units === 'millisecond' || !this.isValid()) {
            return this;
        }

        var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

        switch (units) {
            case 'year':
                time = startOfDate(this.year(), 0, 1);
                break;
            case 'quarter':
                time = startOfDate(this.year(), this.month() - this.month() % 3, 1);
                break;
            case 'month':
                time = startOfDate(this.year(), this.month(), 1);
                break;
            case 'week':
                time = startOfDate(this.year(), this.month(), this.date() - this.weekday());
                break;
            case 'isoWeek':
                time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));
                break;
            case 'day':
            case 'date':
                time = startOfDate(this.year(), this.month(), this.date());
                break;
            case 'hour':
                time = this._d.valueOf();
                time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);
                break;
            case 'minute':
                time = this._d.valueOf();
                time -= mod$1(time, MS_PER_MINUTE);
                break;
            case 'second':
                time = this._d.valueOf();
                time -= mod$1(time, MS_PER_SECOND);
                break;
        }

        this._d.setTime(time);
        hooks.updateOffset(this, true);
        return this;
    }

    function endOf (units) {
        var time;
        units = normalizeUnits(units);
        if (units === undefined || units === 'millisecond' || !this.isValid()) {
            return this;
        }

        var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

        switch (units) {
            case 'year':
                time = startOfDate(this.year() + 1, 0, 1) - 1;
                break;
            case 'quarter':
                time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;
                break;
            case 'month':
                time = startOfDate(this.year(), this.month() + 1, 1) - 1;
                break;
            case 'week':
                time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;
                break;
            case 'isoWeek':
                time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;
                break;
            case 'day':
            case 'date':
                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;
                break;
            case 'hour':
                time = this._d.valueOf();
                time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;
                break;
            case 'minute':
                time = this._d.valueOf();
                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;
                break;
            case 'second':
                time = this._d.valueOf();
                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;
                break;
        }

        this._d.setTime(time);
        hooks.updateOffset(this, true);
        return this;
    }

    function valueOf () {
        return this._d.valueOf() - ((this._offset || 0) * 60000);
    }

    function unix () {
        return Math.floor(this.valueOf() / 1000);
    }

    function toDate () {
        return new Date(this.valueOf());
    }

    function toArray () {
        var m = this;
        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];
    }

    function toObject () {
        var m = this;
        return {
            years: m.year(),
            months: m.month(),
            date: m.date(),
            hours: m.hours(),
            minutes: m.minutes(),
            seconds: m.seconds(),
            milliseconds: m.milliseconds()
        };
    }

    function toJSON () {
        // new Date(NaN).toJSON() === null
        return this.isValid() ? this.toISOString() : null;
    }

    function isValid$2 () {
        return isValid(this);
    }

    function parsingFlags () {
        return extend({}, getParsingFlags(this));
    }

    function invalidAt () {
        return getParsingFlags(this).overflow;
    }

    function creationData() {
        return {
            input: this._i,
            format: this._f,
            locale: this._locale,
            isUTC: this._isUTC,
            strict: this._strict
        };
    }

    // FORMATTING

    addFormatToken(0, ['gg', 2], 0, function () {
        return this.weekYear() % 100;
    });

    addFormatToken(0, ['GG', 2], 0, function () {
        return this.isoWeekYear() % 100;
    });

    function addWeekYearFormatToken (token, getter) {
        addFormatToken(0, [token, token.length], 0, getter);
    }

    addWeekYearFormatToken('gggg',     'weekYear');
    addWeekYearFormatToken('ggggg',    'weekYear');
    addWeekYearFormatToken('GGGG',  'isoWeekYear');
    addWeekYearFormatToken('GGGGG', 'isoWeekYear');

    // ALIASES

    addUnitAlias('weekYear', 'gg');
    addUnitAlias('isoWeekYear', 'GG');

    // PRIORITY

    addUnitPriority('weekYear', 1);
    addUnitPriority('isoWeekYear', 1);


    // PARSING

    addRegexToken('G',      matchSigned);
    addRegexToken('g',      matchSigned);
    addRegexToken('GG',     match1to2, match2);
    addRegexToken('gg',     match1to2, match2);
    addRegexToken('GGGG',   match1to4, match4);
    addRegexToken('gggg',   match1to4, match4);
    addRegexToken('GGGGG',  match1to6, match6);
    addRegexToken('ggggg',  match1to6, match6);

    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {
        week[token.substr(0, 2)] = toInt(input);
    });

    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
        week[token] = hooks.parseTwoDigitYear(input);
    });

    // MOMENTS

    function getSetWeekYear (input) {
        return getSetWeekYearHelper.call(this,
                input,
                this.week(),
                this.weekday(),
                this.localeData()._week.dow,
                this.localeData()._week.doy);
    }

    function getSetISOWeekYear (input) {
        return getSetWeekYearHelper.call(this,
                input, this.isoWeek(), this.isoWeekday(), 1, 4);
    }

    function getISOWeeksInYear () {
        return weeksInYear(this.year(), 1, 4);
    }

    function getWeeksInYear () {
        var weekInfo = this.localeData()._week;
        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
    }

    function getSetWeekYearHelper(input, week, weekday, dow, doy) {
        var weeksTarget;
        if (input == null) {
            return weekOfYear(this, dow, doy).year;
        } else {
            weeksTarget = weeksInYear(input, dow, doy);
            if (week > weeksTarget) {
                week = weeksTarget;
            }
            return setWeekAll.call(this, input, week, weekday, dow, doy);
        }
    }

    function setWeekAll(weekYear, week, weekday, dow, doy) {
        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);

        this.year(date.getUTCFullYear());
        this.month(date.getUTCMonth());
        this.date(date.getUTCDate());
        return this;
    }

    // FORMATTING

    addFormatToken('Q', 0, 'Qo', 'quarter');

    // ALIASES

    addUnitAlias('quarter', 'Q');

    // PRIORITY

    addUnitPriority('quarter', 7);

    // PARSING

    addRegexToken('Q', match1);
    addParseToken('Q', function (input, array) {
        array[MONTH] = (toInt(input) - 1) * 3;
    });

    // MOMENTS

    function getSetQuarter (input) {
        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
    }

    // FORMATTING

    addFormatToken('D', ['DD', 2], 'Do', 'date');

    // ALIASES

    addUnitAlias('date', 'D');

    // PRIORITY
    addUnitPriority('date', 9);

    // PARSING

    addRegexToken('D',  match1to2);
    addRegexToken('DD', match1to2, match2);
    addRegexToken('Do', function (isStrict, locale) {
        // TODO: Remove "ordinalParse" fallback in next major release.
        return isStrict ?
          (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :
          locale._dayOfMonthOrdinalParseLenient;
    });

    addParseToken(['D', 'DD'], DATE);
    addParseToken('Do', function (input, array) {
        array[DATE] = toInt(input.match(match1to2)[0]);
    });

    // MOMENTS

    var getSetDayOfMonth = makeGetSet('Date', true);

    // FORMATTING

    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

    // ALIASES

    addUnitAlias('dayOfYear', 'DDD');

    // PRIORITY
    addUnitPriority('dayOfYear', 4);

    // PARSING

    addRegexToken('DDD',  match1to3);
    addRegexToken('DDDD', match3);
    addParseToken(['DDD', 'DDDD'], function (input, array, config) {
        config._dayOfYear = toInt(input);
    });

    // HELPERS

    // MOMENTS

    function getSetDayOfYear (input) {
        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;
        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');
    }

    // FORMATTING

    addFormatToken('m', ['mm', 2], 0, 'minute');

    // ALIASES

    addUnitAlias('minute', 'm');

    // PRIORITY

    addUnitPriority('minute', 14);

    // PARSING

    addRegexToken('m',  match1to2);
    addRegexToken('mm', match1to2, match2);
    addParseToken(['m', 'mm'], MINUTE);

    // MOMENTS

    var getSetMinute = makeGetSet('Minutes', false);

    // FORMATTING

    addFormatToken('s', ['ss', 2], 0, 'second');

    // ALIASES

    addUnitAlias('second', 's');

    // PRIORITY

    addUnitPriority('second', 15);

    // PARSING

    addRegexToken('s',  match1to2);
    addRegexToken('ss', match1to2, match2);
    addParseToken(['s', 'ss'], SECOND);

    // MOMENTS

    var getSetSecond = makeGetSet('Seconds', false);

    // FORMATTING

    addFormatToken('S', 0, 0, function () {
        return ~~(this.millisecond() / 100);
    });

    addFormatToken(0, ['SS', 2], 0, function () {
        return ~~(this.millisecond() / 10);
    });

    addFormatToken(0, ['SSS', 3], 0, 'millisecond');
    addFormatToken(0, ['SSSS', 4], 0, function () {
        return this.millisecond() * 10;
    });
    addFormatToken(0, ['SSSSS', 5], 0, function () {
        return this.millisecond() * 100;
    });
    addFormatToken(0, ['SSSSSS', 6], 0, function () {
        return this.millisecond() * 1000;
    });
    addFormatToken(0, ['SSSSSSS', 7], 0, function () {
        return this.millisecond() * 10000;
    });
    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
        return this.millisecond() * 100000;
    });
    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
        return this.millisecond() * 1000000;
    });


    // ALIASES

    addUnitAlias('millisecond', 'ms');

    // PRIORITY

    addUnitPriority('millisecond', 16);

    // PARSING

    addRegexToken('S',    match1to3, match1);
    addRegexToken('SS',   match1to3, match2);
    addRegexToken('SSS',  match1to3, match3);

    var token;
    for (token = 'SSSS'; token.length <= 9; token += 'S') {
        addRegexToken(token, matchUnsigned);
    }

    function parseMs(input, array) {
        array[MILLISECOND] = toInt(('0.' + input) * 1000);
    }

    for (token = 'S'; token.length <= 9; token += 'S') {
        addParseToken(token, parseMs);
    }
    // MOMENTS

    var getSetMillisecond = makeGetSet('Milliseconds', false);

    // FORMATTING

    addFormatToken('z',  0, 0, 'zoneAbbr');
    addFormatToken('zz', 0, 0, 'zoneName');

    // MOMENTS

    function getZoneAbbr () {
        return this._isUTC ? 'UTC' : '';
    }

    function getZoneName () {
        return this._isUTC ? 'Coordinated Universal Time' : '';
    }

    var proto = Moment.prototype;

    proto.add               = add;
    proto.calendar          = calendar$1;
    proto.clone             = clone;
    proto.diff              = diff;
    proto.endOf             = endOf;
    proto.format            = format;
    proto.from              = from;
    proto.fromNow           = fromNow;
    proto.to                = to;
    proto.toNow             = toNow;
    proto.get               = stringGet;
    proto.invalidAt         = invalidAt;
    proto.isAfter           = isAfter;
    proto.isBefore          = isBefore;
    proto.isBetween         = isBetween;
    proto.isSame            = isSame;
    proto.isSameOrAfter     = isSameOrAfter;
    proto.isSameOrBefore    = isSameOrBefore;
    proto.isValid           = isValid$2;
    proto.lang              = lang;
    proto.locale            = locale;
    proto.localeData        = localeData;
    proto.max               = prototypeMax;
    proto.min               = prototypeMin;
    proto.parsingFlags      = parsingFlags;
    proto.set               = stringSet;
    proto.startOf           = startOf;
    proto.subtract          = subtract;
    proto.toArray           = toArray;
    proto.toObject          = toObject;
    proto.toDate            = toDate;
    proto.toISOString       = toISOString;
    proto.inspect           = inspect;
    proto.toJSON            = toJSON;
    proto.toString          = toString;
    proto.unix              = unix;
    proto.valueOf           = valueOf;
    proto.creationData      = creationData;
    proto.year       = getSetYear;
    proto.isLeapYear = getIsLeapYear;
    proto.weekYear    = getSetWeekYear;
    proto.isoWeekYear = getSetISOWeekYear;
    proto.quarter = proto.quarters = getSetQuarter;
    proto.month       = getSetMonth;
    proto.daysInMonth = getDaysInMonth;
    proto.week           = proto.weeks        = getSetWeek;
    proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;
    proto.weeksInYear    = getWeeksInYear;
    proto.isoWeeksInYear = getISOWeeksInYear;
    proto.date       = getSetDayOfMonth;
    proto.day        = proto.days             = getSetDayOfWeek;
    proto.weekday    = getSetLocaleDayOfWeek;
    proto.isoWeekday = getSetISODayOfWeek;
    proto.dayOfYear  = getSetDayOfYear;
    proto.hour = proto.hours = getSetHour;
    proto.minute = proto.minutes = getSetMinute;
    proto.second = proto.seconds = getSetSecond;
    proto.millisecond = proto.milliseconds = getSetMillisecond;
    proto.utcOffset            = getSetOffset;
    proto.utc                  = setOffsetToUTC;
    proto.local                = setOffsetToLocal;
    proto.parseZone            = setOffsetToParsedOffset;
    proto.hasAlignedHourOffset = hasAlignedHourOffset;
    proto.isDST                = isDaylightSavingTime;
    proto.isLocal              = isLocal;
    proto.isUtcOffset          = isUtcOffset;
    proto.isUtc                = isUtc;
    proto.isUTC                = isUtc;
    proto.zoneAbbr = getZoneAbbr;
    proto.zoneName = getZoneName;
    proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);
    proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);
    proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);
    proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);
    proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);

    function createUnix (input) {
        return createLocal(input * 1000);
    }

    function createInZone () {
        return createLocal.apply(null, arguments).parseZone();
    }

    function preParsePostFormat (string) {
        return string;
    }

    var proto$1 = Locale.prototype;

    proto$1.calendar        = calendar;
    proto$1.longDateFormat  = longDateFormat;
    proto$1.invalidDate     = invalidDate;
    proto$1.ordinal         = ordinal;
    proto$1.preparse        = preParsePostFormat;
    proto$1.postformat      = preParsePostFormat;
    proto$1.relativeTime    = relativeTime;
    proto$1.pastFuture      = pastFuture;
    proto$1.set             = set;

    proto$1.months            =        localeMonths;
    proto$1.monthsShort       =        localeMonthsShort;
    proto$1.monthsParse       =        localeMonthsParse;
    proto$1.monthsRegex       = monthsRegex;
    proto$1.monthsShortRegex  = monthsShortRegex;
    proto$1.week = localeWeek;
    proto$1.firstDayOfYear = localeFirstDayOfYear;
    proto$1.firstDayOfWeek = localeFirstDayOfWeek;

    proto$1.weekdays       =        localeWeekdays;
    proto$1.weekdaysMin    =        localeWeekdaysMin;
    proto$1.weekdaysShort  =        localeWeekdaysShort;
    proto$1.weekdaysParse  =        localeWeekdaysParse;

    proto$1.weekdaysRegex       =        weekdaysRegex;
    proto$1.weekdaysShortRegex  =        weekdaysShortRegex;
    proto$1.weekdaysMinRegex    =        weekdaysMinRegex;

    proto$1.isPM = localeIsPM;
    proto$1.meridiem = localeMeridiem;

    function get$1 (format, index, field, setter) {
        var locale = getLocale();
        var utc = createUTC().set(setter, index);
        return locale[field](utc, format);
    }

    function listMonthsImpl (format, index, field) {
        if (isNumber(format)) {
            index = format;
            format = undefined;
        }

        format = format || '';

        if (index != null) {
            return get$1(format, index, field, 'month');
        }

        var i;
        var out = [];
        for (i = 0; i < 12; i++) {
            out[i] = get$1(format, i, field, 'month');
        }
        return out;
    }

    // ()
    // (5)
    // (fmt, 5)
    // (fmt)
    // (true)
    // (true, 5)
    // (true, fmt, 5)
    // (true, fmt)
    function listWeekdaysImpl (localeSorted, format, index, field) {
        if (typeof localeSorted === 'boolean') {
            if (isNumber(format)) {
                index = format;
                format = undefined;
            }

            format = format || '';
        } else {
            format = localeSorted;
            index = format;
            localeSorted = false;

            if (isNumber(format)) {
                index = format;
                format = undefined;
            }

            format = format || '';
        }

        var locale = getLocale(),
            shift = localeSorted ? locale._week.dow : 0;

        if (index != null) {
            return get$1(format, (index + shift) % 7, field, 'day');
        }

        var i;
        var out = [];
        for (i = 0; i < 7; i++) {
            out[i] = get$1(format, (i + shift) % 7, field, 'day');
        }
        return out;
    }

    function listMonths (format, index) {
        return listMonthsImpl(format, index, 'months');
    }

    function listMonthsShort (format, index) {
        return listMonthsImpl(format, index, 'monthsShort');
    }

    function listWeekdays (localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
    }

    function listWeekdaysShort (localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
    }

    function listWeekdaysMin (localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
    }

    getSetGlobalLocale('en', {
        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (toInt(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        }
    });

    // Side effect imports

    hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);
    hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);

    var mathAbs = Math.abs;

    function abs () {
        var data           = this._data;

        this._milliseconds = mathAbs(this._milliseconds);
        this._days         = mathAbs(this._days);
        this._months       = mathAbs(this._months);

        data.milliseconds  = mathAbs(data.milliseconds);
        data.seconds       = mathAbs(data.seconds);
        data.minutes       = mathAbs(data.minutes);
        data.hours         = mathAbs(data.hours);
        data.months        = mathAbs(data.months);
        data.years         = mathAbs(data.years);

        return this;
    }

    function addSubtract$1 (duration, input, value, direction) {
        var other = createDuration(input, value);

        duration._milliseconds += direction * other._milliseconds;
        duration._days         += direction * other._days;
        duration._months       += direction * other._months;

        return duration._bubble();
    }

    // supports only 2.0-style add(1, 's') or add(duration)
    function add$1 (input, value) {
        return addSubtract$1(this, input, value, 1);
    }

    // supports only 2.0-style subtract(1, 's') or subtract(duration)
    function subtract$1 (input, value) {
        return addSubtract$1(this, input, value, -1);
    }

    function absCeil (number) {
        if (number < 0) {
            return Math.floor(number);
        } else {
            return Math.ceil(number);
        }
    }

    function bubble () {
        var milliseconds = this._milliseconds;
        var days         = this._days;
        var months       = this._months;
        var data         = this._data;
        var seconds, minutes, hours, years, monthsFromDays;

        // if we have a mix of positive and negative values, bubble down first
        // check: https://github.com/moment/moment/issues/2166
        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||
                (milliseconds <= 0 && days <= 0 && months <= 0))) {
            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
            days = 0;
            months = 0;
        }

        // The following code bubbles up values, see the tests for
        // examples of what that means.
        data.milliseconds = milliseconds % 1000;

        seconds           = absFloor(milliseconds / 1000);
        data.seconds      = seconds % 60;

        minutes           = absFloor(seconds / 60);
        data.minutes      = minutes % 60;

        hours             = absFloor(minutes / 60);
        data.hours        = hours % 24;

        days += absFloor(hours / 24);

        // convert days to months
        monthsFromDays = absFloor(daysToMonths(days));
        months += monthsFromDays;
        days -= absCeil(monthsToDays(monthsFromDays));

        // 12 months -> 1 year
        years = absFloor(months / 12);
        months %= 12;

        data.days   = days;
        data.months = months;
        data.years  = years;

        return this;
    }

    function daysToMonths (days) {
        // 400 years have 146097 days (taking into account leap year rules)
        // 400 years have 12 months === 4800
        return days * 4800 / 146097;
    }

    function monthsToDays (months) {
        // the reverse of daysToMonths
        return months * 146097 / 4800;
    }

    function as (units) {
        if (!this.isValid()) {
            return NaN;
        }
        var days;
        var months;
        var milliseconds = this._milliseconds;

        units = normalizeUnits(units);

        if (units === 'month' || units === 'quarter' || units === 'year') {
            days = this._days + milliseconds / 864e5;
            months = this._months + daysToMonths(days);
            switch (units) {
                case 'month':   return months;
                case 'quarter': return months / 3;
                case 'year':    return months / 12;
            }
        } else {
            // handle milliseconds separately because of floating point math errors (issue #1867)
            days = this._days + Math.round(monthsToDays(this._months));
            switch (units) {
                case 'week'   : return days / 7     + milliseconds / 6048e5;
                case 'day'    : return days         + milliseconds / 864e5;
                case 'hour'   : return days * 24    + milliseconds / 36e5;
                case 'minute' : return days * 1440  + milliseconds / 6e4;
                case 'second' : return days * 86400 + milliseconds / 1000;
                // Math.floor prevents floating point math errors here
                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;
                default: throw new Error('Unknown unit ' + units);
            }
        }
    }

    // TODO: Use this.as('ms')?
    function valueOf$1 () {
        if (!this.isValid()) {
            return NaN;
        }
        return (
            this._milliseconds +
            this._days * 864e5 +
            (this._months % 12) * 2592e6 +
            toInt(this._months / 12) * 31536e6
        );
    }

    function makeAs (alias) {
        return function () {
            return this.as(alias);
        };
    }

    var asMilliseconds = makeAs('ms');
    var asSeconds      = makeAs('s');
    var asMinutes      = makeAs('m');
    var asHours        = makeAs('h');
    var asDays         = makeAs('d');
    var asWeeks        = makeAs('w');
    var asMonths       = makeAs('M');
    var asQuarters     = makeAs('Q');
    var asYears        = makeAs('y');

    function clone$1 () {
        return createDuration(this);
    }

    function get$2 (units) {
        units = normalizeUnits(units);
        return this.isValid() ? this[units + 's']() : NaN;
    }

    function makeGetter(name) {
        return function () {
            return this.isValid() ? this._data[name] : NaN;
        };
    }

    var milliseconds = makeGetter('milliseconds');
    var seconds      = makeGetter('seconds');
    var minutes      = makeGetter('minutes');
    var hours        = makeGetter('hours');
    var days         = makeGetter('days');
    var months       = makeGetter('months');
    var years        = makeGetter('years');

    function weeks () {
        return absFloor(this.days() / 7);
    }

    var round = Math.round;
    var thresholds = {
        ss: 44,         // a few seconds to seconds
        s : 45,         // seconds to minute
        m : 45,         // minutes to hour
        h : 22,         // hours to day
        d : 26,         // days to month
        M : 11          // months to year
    };

    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
    }

    function relativeTime$1 (posNegDuration, withoutSuffix, locale) {
        var duration = createDuration(posNegDuration).abs();
        var seconds  = round(duration.as('s'));
        var minutes  = round(duration.as('m'));
        var hours    = round(duration.as('h'));
        var days     = round(duration.as('d'));
        var months   = round(duration.as('M'));
        var years    = round(duration.as('y'));

        var a = seconds <= thresholds.ss && ['s', seconds]  ||
                seconds < thresholds.s   && ['ss', seconds] ||
                minutes <= 1             && ['m']           ||
                minutes < thresholds.m   && ['mm', minutes] ||
                hours   <= 1             && ['h']           ||
                hours   < thresholds.h   && ['hh', hours]   ||
                days    <= 1             && ['d']           ||
                days    < thresholds.d   && ['dd', days]    ||
                months  <= 1             && ['M']           ||
                months  < thresholds.M   && ['MM', months]  ||
                years   <= 1             && ['y']           || ['yy', years];

        a[2] = withoutSuffix;
        a[3] = +posNegDuration > 0;
        a[4] = locale;
        return substituteTimeAgo.apply(null, a);
    }

    // This function allows you to set the rounding function for relative time strings
    function getSetRelativeTimeRounding (roundingFunction) {
        if (roundingFunction === undefined) {
            return round;
        }
        if (typeof(roundingFunction) === 'function') {
            round = roundingFunction;
            return true;
        }
        return false;
    }

    // This function allows you to set a threshold for relative time strings
    function getSetRelativeTimeThreshold (threshold, limit) {
        if (thresholds[threshold] === undefined) {
            return false;
        }
        if (limit === undefined) {
            return thresholds[threshold];
        }
        thresholds[threshold] = limit;
        if (threshold === 's') {
            thresholds.ss = limit - 1;
        }
        return true;
    }

    function humanize (withSuffix) {
        if (!this.isValid()) {
            return this.localeData().invalidDate();
        }

        var locale = this.localeData();
        var output = relativeTime$1(this, !withSuffix, locale);

        if (withSuffix) {
            output = locale.pastFuture(+this, output);
        }

        return locale.postformat(output);
    }

    var abs$1 = Math.abs;

    function sign(x) {
        return ((x > 0) - (x < 0)) || +x;
    }

    function toISOString$1() {
        // for ISO strings we do not use the normal bubbling rules:
        //  * milliseconds bubble up until they become hours
        //  * days do not bubble at all
        //  * months bubble up until they become years
        // This is because there is no context-free conversion between hours and days
        // (think of clock changes)
        // and also not between days and months (28-31 days per month)
        if (!this.isValid()) {
            return this.localeData().invalidDate();
        }

        var seconds = abs$1(this._milliseconds) / 1000;
        var days         = abs$1(this._days);
        var months       = abs$1(this._months);
        var minutes, hours, years;

        // 3600 seconds -> 60 minutes -> 1 hour
        minutes           = absFloor(seconds / 60);
        hours             = absFloor(minutes / 60);
        seconds %= 60;
        minutes %= 60;

        // 12 months -> 1 year
        years  = absFloor(months / 12);
        months %= 12;


        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
        var Y = years;
        var M = months;
        var D = days;
        var h = hours;
        var m = minutes;
        var s = seconds ? seconds.toFixed(3).replace(/\.?0+$/, '') : '';
        var total = this.asSeconds();

        if (!total) {
            // this is the same as C#'s (Noda) and python (isodate)...
            // but not other JS (goog.date)
            return 'P0D';
        }

        var totalSign = total < 0 ? '-' : '';
        var ymSign = sign(this._months) !== sign(total) ? '-' : '';
        var daysSign = sign(this._days) !== sign(total) ? '-' : '';
        var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';

        return totalSign + 'P' +
            (Y ? ymSign + Y + 'Y' : '') +
            (M ? ymSign + M + 'M' : '') +
            (D ? daysSign + D + 'D' : '') +
            ((h || m || s) ? 'T' : '') +
            (h ? hmsSign + h + 'H' : '') +
            (m ? hmsSign + m + 'M' : '') +
            (s ? hmsSign + s + 'S' : '');
    }

    var proto$2 = Duration.prototype;

    proto$2.isValid        = isValid$1;
    proto$2.abs            = abs;
    proto$2.add            = add$1;
    proto$2.subtract       = subtract$1;
    proto$2.as             = as;
    proto$2.asMilliseconds = asMilliseconds;
    proto$2.asSeconds      = asSeconds;
    proto$2.asMinutes      = asMinutes;
    proto$2.asHours        = asHours;
    proto$2.asDays         = asDays;
    proto$2.asWeeks        = asWeeks;
    proto$2.asMonths       = asMonths;
    proto$2.asQuarters     = asQuarters;
    proto$2.asYears        = asYears;
    proto$2.valueOf        = valueOf$1;
    proto$2._bubble        = bubble;
    proto$2.clone          = clone$1;
    proto$2.get            = get$2;
    proto$2.milliseconds   = milliseconds;
    proto$2.seconds        = seconds;
    proto$2.minutes        = minutes;
    proto$2.hours          = hours;
    proto$2.days           = days;
    proto$2.weeks          = weeks;
    proto$2.months         = months;
    proto$2.years          = years;
    proto$2.humanize       = humanize;
    proto$2.toISOString    = toISOString$1;
    proto$2.toString       = toISOString$1;
    proto$2.toJSON         = toISOString$1;
    proto$2.locale         = locale;
    proto$2.localeData     = localeData;

    proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);
    proto$2.lang = lang;

    // Side effect imports

    // FORMATTING

    addFormatToken('X', 0, 0, 'unix');
    addFormatToken('x', 0, 0, 'valueOf');

    // PARSING

    addRegexToken('x', matchSigned);
    addRegexToken('X', matchTimestamp);
    addParseToken('X', function (input, array, config) {
        config._d = new Date(parseFloat(input, 10) * 1000);
    });
    addParseToken('x', function (input, array, config) {
        config._d = new Date(toInt(input));
    });

    // Side effect imports


    hooks.version = '2.24.0';

    setHookCallback(createLocal);

    hooks.fn                    = proto;
    hooks.min                   = min;
    hooks.max                   = max;
    hooks.now                   = now;
    hooks.utc                   = createUTC;
    hooks.unix                  = createUnix;
    hooks.months                = listMonths;
    hooks.isDate                = isDate;
    hooks.locale                = getSetGlobalLocale;
    hooks.invalid               = createInvalid;
    hooks.duration              = createDuration;
    hooks.isMoment              = isMoment;
    hooks.weekdays              = listWeekdays;
    hooks.parseZone             = createInZone;
    hooks.localeData            = getLocale;
    hooks.isDuration            = isDuration;
    hooks.monthsShort           = listMonthsShort;
    hooks.weekdaysMin           = listWeekdaysMin;
    hooks.defineLocale          = defineLocale;
    hooks.updateLocale          = updateLocale;
    hooks.locales               = listLocales;
    hooks.weekdaysShort         = listWeekdaysShort;
    hooks.normalizeUnits        = normalizeUnits;
    hooks.relativeTimeRounding  = getSetRelativeTimeRounding;
    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
    hooks.calendarFormat        = getCalendarFormat;
    hooks.prototype             = proto;

    // currently HTML5 input type only supports 24-hour formats
    hooks.HTML5_FMT = {
        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',             // <input type="datetime-local" />
        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',  // <input type="datetime-local" step="1" />
        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',   // <input type="datetime-local" step="0.001" />
        DATE: 'YYYY-MM-DD',                             // <input type="date" />
        TIME: 'HH:mm',                                  // <input type="time" />
        TIME_SECONDS: 'HH:mm:ss',                       // <input type="time" step="1" />
        TIME_MS: 'HH:mm:ss.SSS',                        // <input type="time" step="0.001" />
        WEEK: 'GGGG-[W]WW',                             // <input type="week" />
        MONTH: 'YYYY-MM'                                // <input type="month" />
    };

    return hooks;

})));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(292)(module)))

/***/ }),
/* 1 */
/***/ (function(module, exports) {

var core = module.exports = { version: '2.6.5' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),
/* 2 */
/***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__(44)('wks');
var uid = __webpack_require__(31);
var Symbol = __webpack_require__(2).Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2);
var core = __webpack_require__(1);
var ctx = __webpack_require__(19);
var hide = __webpack_require__(11);
var has = __webpack_require__(12);
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var IS_WRAP = type & $export.W;
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE];
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
  var key, own, out;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    if (own && has(exports, key)) continue;
    // export native or passed
    out = own ? target[key] : source[key];
    // prevent global pollution for namespaces
    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
    // bind timers to global for call from export context
    : IS_BIND && own ? ctx(out, global)
    // wrap global constructors for prevent change them in library
    : IS_WRAP && target[key] == out ? (function (C) {
      var F = function (a, b, c) {
        if (this instanceof C) {
          switch (arguments.length) {
            case 0: return new C();
            case 1: return new C(a);
            case 2: return new C(a, b);
          } return new C(a, b, c);
        } return C.apply(this, arguments);
      };
      F[PROTOTYPE] = C[PROTOTYPE];
      return F;
    // make static versions for prototype methods
    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
    if (IS_PROTO) {
      (exports.virtual || (exports.virtual = {}))[key] = out;
      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
    }
  }
};
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(9);
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};


/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

exports.default = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _defineProperty = __webpack_require__(236);

var _defineProperty2 = _interopRequireDefault(_defineProperty);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      (0, _defineProperty2.default)(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(5);
var IE8_DOM_DEFINE = __webpack_require__(58);
var toPrimitive = __webpack_require__(40);
var dP = Object.defineProperty;

exports.f = __webpack_require__(10) ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),
/* 9 */
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__(24)(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(8);
var createDesc = __webpack_require__(25);
module.exports = __webpack_require__(10) ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),
/* 12 */
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = __webpack_require__(217);
var defined = __webpack_require__(38);
module.exports = function (it) {
  return IObject(defined(it));
};


/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(234), __esModule: true };

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _typeof2 = __webpack_require__(72);

var _typeof3 = _interopRequireDefault(_typeof2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && ((typeof call === "undefined" ? "undefined" : (0, _typeof3.default)(call)) === "object" || typeof call === "function") ? call : self;
};

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _setPrototypeOf = __webpack_require__(250);

var _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);

var _create = __webpack_require__(254);

var _create2 = _interopRequireDefault(_create);

var _typeof2 = __webpack_require__(72);

var _typeof3 = _interopRequireDefault(_typeof2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : (0, _typeof3.default)(superClass)));
  }

  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;
};

/***/ }),
/* 17 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass__);



var DomComponent = function () {
  function DomComponent(props) {
    __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck___default()(this, DomComponent);

    // Add your DOM references to this.refs
    this.refs = {};
    this.subcomponents = [];
    this.didInit(props);
  }

  // Add subComponent to this component


  __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass___default()(DomComponent, [{
    key: 'registerComponent',
    value: function registerComponent(Component) {
      for (var _len = arguments.length, props = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        props[_key - 1] = arguments[_key];
      }

      var c = new (Function.prototype.bind.apply(Component, [null].concat(props)))();
      this.subcomponents.push(c);
      return c;
    }

    // Use it if you want to create DOM from the JS and use mount instead of hydrate

  }, {
    key: 'render',
    value: function render() {}

    // Called after the component is instantiated

  }, {
    key: 'didInit',
    value: function didInit() {}

    // Called just before the component is mounted to the DOM

  }, {
    key: 'willMount',
    value: function willMount() {}

    // Called just after the component is mounted to the DOM

  }, {
    key: 'didMount',
    value: function didMount() {}

    // Called just before the component is removed from the DOM

  }, {
    key: 'willUnmount',
    value: function willUnmount() {}
  }, {
    key: 'callWillMount',
    value: function callWillMount() {
      if (!this.refs.base) return;
      this.willMount(this.refs.base);
      this.subcomponents.forEach(function (c) {
        return c.callWillMount();
      });
    }
  }, {
    key: 'callDidMount',
    value: function callDidMount() {
      if (!this.refs.base) return;
      this.mounted = true;
      this.didMount(this.refs.base);
      this.subcomponents.forEach(function (c) {
        return c.callDidMount();
      });
    }

    // Replace existing DOM element by the component

  }, {
    key: 'replace',
    value: function replace(el) {
      if (!el || this.mounted) return;
      this.mount(el.parentNode, el);
      el.remove();
    }

    // Use a already existing DOM element as base for the component

  }, {
    key: 'hydrate',
    value: function hydrate(el) {
      if (!el || this.mounted) return;
      this.callWillMount(el);
      this.refs.base = el;
      this.mounted = true;
      this.callDidMount();
    }

    // Render DOM from the render() function into an existing DOM element
    // If you specify a sibling, the element will be inserted before it

  }, {
    key: 'mount',
    value: function mount(parent) {
      var sibling = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

      if (!parent || this.mounted) return;
      var el = this.render();
      if (!el) return;
      this.callWillMount(el);
      sibling ? parent.insertBefore(el, sibling) : parent.appendChild(el);
      this.refs.base = el;
      this.mounted = true;
      this.callDidMount();
    }

    // Render DOM from the render() function and return the raw object

  }, {
    key: 'raw',
    value: function raw() {
      if (this.mounted || this.refs.base) return this.refs.base;
      var el = this.render();
      this.refs.base = el;
      return el;
    }
  }, {
    key: 'bindFuncs',
    value: function bindFuncs(funcs) {
      var _this = this;

      funcs.forEach(function (func) {
        if (!_this[func]) {
          throw new ReferenceError('Binding fail: ' + _this.constructor.name + ' does not have a method called \'' + func + '\'');
        }
        _this[func] = _this[func].bind(_this);
      });
    }

    // Remove the DOM and destroy the component

  }, {
    key: 'destroy',
    value: function destroy() {
      if (!this.mounted) return;
      this.willUnmount(this.refs.base);
      this.subcomponents.forEach(function (c) {
        return c.destroy();
      });
      this.refs.base && this.refs.base.parentNode && this.refs.base.parentNode.removeChild(this.refs.base);
      for (var k in this.refs) {
        delete this.refs[k];
      }this.refs = undefined;
      this.mounted = false;
    }
  }, {
    key: 'addClass',
    value: function addClass(className) {
      if (this.refs.base && this.refs.base.classList) {
        this.refs.base.classList.add(className);
      }
    }
  }, {
    key: 'removeClass',
    value: function removeClass(className) {
      if (this.refs.base && this.refs.base.classList) {
        this.refs.base.classList.contains(className) && this.refs.base.classList.remove(className);
      }
    }
  }, {
    key: 'repaint',
    value: function repaint() {
      if (this.refs.base) {
        void this.refs.base.offsetHeight;
      }
    }
  }, {
    key: 'show',
    value: function show() {
      this.hidden = false;
      if (this.refs.base) this.refs.base.style.display = '';
    }
  }, {
    key: 'hide',
    value: function hide() {
      this.hidden = true;
      if (this.refs.base) this.refs.base.style.display = 'none';
    }
  }, {
    key: 'enable',
    value: function enable() {
      this.disabled = false;
      this.removeClass('is-disabled');
    }
  }, {
    key: 'disable',
    value: function disable() {
      this.disabled = true;
      this.addClass('is-disabled');
    }
  }]);

  return DomComponent;
}();

/* harmony default export */ __webpack_exports__["a"] = (DomComponent);

/***/ }),
/* 18 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tiny_emitter__ = __webpack_require__(79);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tiny_emitter___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_tiny_emitter__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_utils_noop__ = __webpack_require__(272);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_controllers_websocket__ = __webpack_require__(273);




var NS = '__STORE.';
var events = new __WEBPACK_IMPORTED_MODULE_0_tiny_emitter___default.a();
var stored = {};
if (!window.isProduction) window.store = stored;

var store = {
  watch: function watch(k, cb) {
    var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
        _ref$immediate = _ref.immediate,
        immediate = _ref$immediate === undefined ? false : _ref$immediate;

    events.on(NS + k, cb);
    if (immediate) cb(stored[k]);
  },
  watchOnce: function watchOnce(k, cb) {
    var _ref2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
        _ref2$immediate = _ref2.immediate,
        immediate = _ref2$immediate === undefined ? false : _ref2$immediate;

    events.once(NS + k, cb);
    if (immediate) cb(stored[k]);
  },
  unwatch: function unwatch(k, cb) {
    return events.off(NS + k, cb);
  },

  get: function get(k) {
    return stored[k];
  },
  set: function set(k, val) {
    var _ref3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
        _ref3$silent = _ref3.silent,
        silent = _ref3$silent === undefined ? false : _ref3$silent,
        _ref3$doNotSync = _ref3.doNotSync,
        doNotSync = _ref3$doNotSync === undefined ? false : _ref3$doNotSync;

    if (!k) return;
    stored[k] = val;
    if (!silent) events.emit(NS + k, val);
    if (!doNotSync) events.emit(NS + k + 'sync', val);
    return val;
  },

  transform: function transform(k) {
    var transformation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : __WEBPACK_IMPORTED_MODULE_1_utils_noop__["a" /* default */];

    stored[k] = transformation(stored[k]);
    events.emit(NS + k, stored[k]);
    return stored[k];
  },
  increment: function increment(k) {
    return store.transform(k, function (k) {
      return (k || 0) + 1;
    });
  },
  decrement: function decrement(k) {
    return store.transform(k, function (k) {
      return (k || 0) - 1;
    });
  },

  websocketSync: function websocketSync(keys) {
    return keys.forEach(function (key) {
      events.on(NS + key + 'sync', function (value) {
        __WEBPACK_IMPORTED_MODULE_2_controllers_websocket__["a" /* default */].send(NS + 'sync', { key: key, value: value });
      });
    });
  }
};

/* harmony default export */ __webpack_exports__["a"] = (store);

__WEBPACK_IMPORTED_MODULE_2_controllers_websocket__["a" /* default */].on(NS + 'sync', function (data) {
  if (!data) return;
  if (store.get(data.key) === data.value) return;

  store.set(data.key, data.value, { doNotSync: true });
});

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

// optional / simple context binding
var aFunction = __webpack_require__(30);
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),
/* 20 */
/***/ (function(module, exports) {

module.exports = {};


/***/ }),
/* 21 */
/***/ (function(module, exports) {

module.exports = function yoyoifyAppendChild (el, childs) {
  for (var i = 0; i < childs.length; i++) {
    var node = childs[i]
    if (Array.isArray(node)) {
      yoyoifyAppendChild(el, node)
      continue
    }
    if (typeof node === 'number' ||
      typeof node === 'boolean' ||
      node instanceof Date ||
      node instanceof RegExp) {
      node = node.toString()
    }
    if (typeof node === 'string') {
      if (/^[\n\r\s]+$/.test(node)) continue
      if (el.lastChild && el.lastChild.nodeName === '#text') {
        el.lastChild.nodeValue += node
        continue
      }
      node = document.createTextNode(node)
    }
    if (node && node.nodeType) {
      el.appendChild(node)
    }
  }
}


/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $at = __webpack_require__(214)(true);

// 21.1.3.27 String.prototype[@@iterator]()
__webpack_require__(57)(String, 'String', function (iterated) {
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return { value: undefined, done: true };
  point = $at(O, index);
  this._i += point.length;
  return { value: point, done: false };
});


/***/ }),
/* 23 */
/***/ (function(module, exports) {

module.exports = true;


/***/ }),
/* 24 */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};


/***/ }),
/* 25 */
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = __webpack_require__(60);
var enumBugKeys = __webpack_require__(45);

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};


/***/ }),
/* 27 */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(265), __esModule: true };

/***/ }),
/* 29 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export headers */
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_src_dataset__ = __webpack_require__(271);


var table = __WEBPACK_IMPORTED_MODULE_0_src_dataset__["a" /* default */].split('\n');
var headers = table.shift().split(';');

var isDatetime = function isDatetime(value) {
  return ~value.indexOf('/') || ~value.indexOf(':');
};

var datas = {};
table.forEach(function (row) {
  var data = row.split(';');

  var o = {};
  headers.forEach(function (header, index) {
    var value = data[index].replace(',', '.');
    o[header] = isDatetime(value) ? value : parseFloat(value);
  });

  var date = data[0];
  if (!datas[date]) datas[date] = [];
  datas[date].push(o);
});

/* harmony default export */ __webpack_exports__["a"] = (datas);

/***/ }),
/* 30 */
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};


/***/ }),
/* 31 */
/***/ (function(module, exports) {

var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};


/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

var def = __webpack_require__(8).f;
var has = __webpack_require__(12);
var TAG = __webpack_require__(3)('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};


/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.13 ToObject(argument)
var defined = __webpack_require__(38);
module.exports = function (it) {
  return Object(defined(it));
};


/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(220);
var global = __webpack_require__(2);
var hide = __webpack_require__(11);
var Iterators = __webpack_require__(20);
var TO_STRING_TAG = __webpack_require__(3)('toStringTag');

var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +
  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +
  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +
  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +
  'TextTrackList,TouchList').split(',');

for (var i = 0; i < DOMIterables.length; i++) {
  var NAME = DOMIterables[i];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
  Iterators[NAME] = Iterators.Array;
}


/***/ }),
/* 35 */
/***/ (function(module, exports) {

exports.f = {}.propertyIsEnumerable;


/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const noise = __webpack_require__(291).noise

const clamp = (a, min, max) => Math.max(min, Math.min(a, max))
const normalize = (a, min, max) => map(a, min, max, 0, 1)
const map = (a, in_min, in_max, out_min, out_max) => (a - in_min) * (out_max - out_min) / (in_max - in_min) + out_min
const lerp = (a, b, t) => a + t * (b - a)
const random = (a, b) => {
  if (b !== undefined) return lerp(a, b, Math.random())
  return lerp(0, a, Math.random())
}

function perlin (x, y, z) {
  if (arguments.length === 3) return noise.perlin3(x, y, z)
  if (arguments.length === 2) return noise.perlin2(x, y)
  if (arguments.length === 1) return noise.perlin2(x, null)
  return null
}

module.exports = {
  clamp,
  constrain: clamp,
  degrees: rad => rad * 180 / Math.PI,
  radians: deg => deg * Math.PI / 180,
  lerp,
  normalize,
  norm: normalize,
  map,
  random,
  rnd: random,
  perlin,
  noise: perlin
}


/***/ }),
/* 37 */
/***/ (function(module, exports) {

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};


/***/ }),
/* 38 */
/***/ (function(module, exports) {

// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};


/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(9);
var document = __webpack_require__(2).document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};


/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__(9);
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = __webpack_require__(5);
var dPs = __webpack_require__(216);
var enumBugKeys = __webpack_require__(45);
var IE_PROTO = __webpack_require__(43)('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = __webpack_require__(39)('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  __webpack_require__(61).appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};


/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.15 ToLength
var toInteger = __webpack_require__(37);
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};


/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__(44)('keys');
var uid = __webpack_require__(31);
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};


/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

var core = __webpack_require__(1);
var global = __webpack_require__(2);
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: __webpack_require__(23) ? 'pure' : 'global',
  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'
});


/***/ }),
/* 45 */
/***/ (function(module, exports) {

// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');


/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = __webpack_require__(27);
var TAG = __webpack_require__(3)('toStringTag');
// ES3 wrong here
var ARG = cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (e) { /* empty */ }
};

module.exports = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};


/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__(46);
var ITERATOR = __webpack_require__(3)('iterator');
var Iterators = __webpack_require__(20);
module.exports = __webpack_require__(1).getIteratorMethod = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};


/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 25.4.1.5 NewPromiseCapability(C)
var aFunction = __webpack_require__(30);

function PromiseCapability(C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aFunction(resolve);
  this.reject = aFunction(reject);
}

module.exports.f = function (C) {
  return new PromiseCapability(C);
};


/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

exports.f = __webpack_require__(3);


/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2);
var core = __webpack_require__(1);
var LIBRARY = __webpack_require__(23);
var wksExt = __webpack_require__(49);
var defineProperty = __webpack_require__(8).f;
module.exports = function (name) {
  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
};


/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _isIterable2 = __webpack_require__(276);

var _isIterable3 = _interopRequireDefault(_isIterable2);

var _getIterator2 = __webpack_require__(279);

var _getIterator3 = _interopRequireDefault(_getIterator2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  function sliceIterator(arr, i) {
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;

    try {
      for (var _i = (0, _getIterator3.default)(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"]) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  return function (arr, i) {
    if (Array.isArray(arr)) {
      return arr;
    } else if ((0, _isIterable3.default)(Object(arr))) {
      return sliceIterator(arr, i);
    } else {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }
  };
}();

/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _from = __webpack_require__(287);

var _from2 = _interopRequireDefault(_from);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  } else {
    return (0, _from2.default)(arr);
  }
};

/***/ }),
/* 53 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(210);


/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _promise = __webpack_require__(212);

var _promise2 = _interopRequireDefault(_promise);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (fn) {
  return function () {
    var gen = fn.apply(this, arguments);
    return new _promise2.default(function (resolve, reject) {
      function step(key, arg) {
        try {
          var info = gen[key](arg);
          var value = info.value;
        } catch (error) {
          reject(error);
          return;
        }

        if (info.done) {
          resolve(value);
        } else {
          return _promise2.default.resolve(value).then(function (value) {
            step("next", value);
          }, function (err) {
            step("throw", err);
          });
        }
      }

      return step("next");
    });
  };
};

/***/ }),
/* 56 */
/***/ (function(module, exports) {



/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__(23);
var $export = __webpack_require__(4);
var redefine = __webpack_require__(59);
var hide = __webpack_require__(11);
var Iterators = __webpack_require__(20);
var $iterCreate = __webpack_require__(215);
var setToStringTag = __webpack_require__(32);
var getPrototypeOf = __webpack_require__(62);
var ITERATOR = __webpack_require__(3)('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};


/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = !__webpack_require__(10) && !__webpack_require__(24)(function () {
  return Object.defineProperty(__webpack_require__(39)('div'), 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(11);


/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__(12);
var toIObject = __webpack_require__(13);
var arrayIndexOf = __webpack_require__(218)(false);
var IE_PROTO = __webpack_require__(43)('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

var document = __webpack_require__(2).document;
module.exports = document && document.documentElement;


/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = __webpack_require__(12);
var toObject = __webpack_require__(33);
var IE_PROTO = __webpack_require__(43)('IE_PROTO');
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};


/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

// call something on iterator step with safe closing on error
var anObject = __webpack_require__(5);
module.exports = function (iterator, fn, value, entries) {
  try {
    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch (e) {
    var ret = iterator['return'];
    if (ret !== undefined) anObject(ret.call(iterator));
    throw e;
  }
};


/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

// check on default Array iterator
var Iterators = __webpack_require__(20);
var ITERATOR = __webpack_require__(3)('iterator');
var ArrayProto = Array.prototype;

module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
};


/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

// 7.3.20 SpeciesConstructor(O, defaultConstructor)
var anObject = __webpack_require__(5);
var aFunction = __webpack_require__(30);
var SPECIES = __webpack_require__(3)('species');
module.exports = function (O, D) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
};


/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

var ctx = __webpack_require__(19);
var invoke = __webpack_require__(226);
var html = __webpack_require__(61);
var cel = __webpack_require__(39);
var global = __webpack_require__(2);
var process = global.process;
var setTask = global.setImmediate;
var clearTask = global.clearImmediate;
var MessageChannel = global.MessageChannel;
var Dispatch = global.Dispatch;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var defer, channel, port;
var run = function () {
  var id = +this;
  // eslint-disable-next-line no-prototype-builtins
  if (queue.hasOwnProperty(id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};
var listener = function (event) {
  run.call(event.data);
};
// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!setTask || !clearTask) {
  setTask = function setImmediate(fn) {
    var args = [];
    var i = 1;
    while (arguments.length > i) args.push(arguments[i++]);
    queue[++counter] = function () {
      // eslint-disable-next-line no-new-func
      invoke(typeof fn == 'function' ? fn : Function(fn), args);
    };
    defer(counter);
    return counter;
  };
  clearTask = function clearImmediate(id) {
    delete queue[id];
  };
  // Node.js 0.8-
  if (__webpack_require__(27)(process) == 'process') {
    defer = function (id) {
      process.nextTick(ctx(run, id, 1));
    };
  // Sphere (JS game engine) Dispatch API
  } else if (Dispatch && Dispatch.now) {
    defer = function (id) {
      Dispatch.now(ctx(run, id, 1));
    };
  // Browsers with MessageChannel, includes WebWorkers
  } else if (MessageChannel) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = listener;
    defer = ctx(port.postMessage, port, 1);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {
    defer = function (id) {
      global.postMessage(id + '', '*');
    };
    global.addEventListener('message', listener, false);
  // IE8-
  } else if (ONREADYSTATECHANGE in cel('script')) {
    defer = function (id) {
      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run.call(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function (id) {
      setTimeout(ctx(run, id, 1), 0);
    };
  }
}
module.exports = {
  set: setTask,
  clear: clearTask
};


/***/ }),
/* 67 */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return { e: false, v: exec() };
  } catch (e) {
    return { e: true, v: e };
  }
};


/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(5);
var isObject = __webpack_require__(9);
var newPromiseCapability = __webpack_require__(48);

module.exports = function (C, x) {
  anObject(C);
  if (isObject(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};


/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

var ITERATOR = __webpack_require__(3)('iterator');
var SAFE_CLOSING = false;

try {
  var riter = [7][ITERATOR]();
  riter['return'] = function () { SAFE_CLOSING = true; };
  // eslint-disable-next-line no-throw-literal
  Array.from(riter, function () { throw 2; });
} catch (e) { /* empty */ }

module.exports = function (exec, skipClosing) {
  if (!skipClosing && !SAFE_CLOSING) return false;
  var safe = false;
  try {
    var arr = [7];
    var iter = arr[ITERATOR]();
    iter.next = function () { return { done: safe = true }; };
    arr[ITERATOR] = function () { return iter; };
    exec(arr);
  } catch (e) { /* empty */ }
  return safe;
};


/***/ }),
/* 70 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits__ = __webpack_require__(16);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_yo_yoify_lib_appendChild__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_yo_yoify_lib_appendChild___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_yo_yoify_lib_appendChild__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_abstractions_DomComponent__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_utils_string_html_encode__ = __webpack_require__(257);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_nanohtml_raw__ = __webpack_require__(258);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_nanohtml_raw___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_nanohtml_raw__);











var LogScreen = function (_DomComponent) {
  __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits___default()(LogScreen, _DomComponent);

  function LogScreen() {
    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        _ref$title = _ref.title,
        title = _ref$title === undefined ? '' : _ref$title,
        _ref$message = _ref.message,
        message = _ref$message === undefined ? '' : _ref$message,
        _ref$state = _ref.state,
        state = _ref$state === undefined ? 'log' : _ref$state,
        _ref$className = _ref.className,
        className = _ref$className === undefined ? undefined : _ref$className;

    __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default()(this, LogScreen);

    var _this = __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn___default()(this, (LogScreen.__proto__ || __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default()(LogScreen)).call(this));

    _this.title = title;
    _this.message = message;
    _this.state = state;
    _this.className = className;
    return _this;
  }

  __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default()(LogScreen, [{
    key: 'render',
    value: function render() {
      var _logScreenMessage, _logScreenTitle, _logScreenContent, _section;

      this.refs.message = (_logScreenMessage = document.createElement('div'), _logScreenMessage.setAttribute('class', 'log-screen__message'), __WEBPACK_IMPORTED_MODULE_5_yo_yoify_lib_appendChild___default()(_logScreenMessage, [__WEBPACK_IMPORTED_MODULE_8_nanohtml_raw___default()(Object(__WEBPACK_IMPORTED_MODULE_7_utils_string_html_encode__["a" /* default */])(this.message).replace(/\n/g, '<br>'))]), _logScreenMessage);
      return _section = document.createElement('section'), _section.setAttribute('data-state', '' + String(this.state) + ''), _section.setAttribute('class', 'log-screen ' + String(this.className) + ''), __WEBPACK_IMPORTED_MODULE_5_yo_yoify_lib_appendChild___default()(_section, [' ', (_logScreenContent = document.createElement('div'), _logScreenContent.setAttribute('class', 'log-screen__content'), __WEBPACK_IMPORTED_MODULE_5_yo_yoify_lib_appendChild___default()(_logScreenContent, [' ', (_logScreenTitle = document.createElement('h1'), _logScreenTitle.setAttribute('class', 'log-screen__title'), __WEBPACK_IMPORTED_MODULE_5_yo_yoify_lib_appendChild___default()(_logScreenTitle, [__WEBPACK_IMPORTED_MODULE_8_nanohtml_raw___default()(this.title)]), _logScreenTitle), ' ', this.refs.message, ' ']), _logScreenContent), ' ']), _section;
    }
  }, {
    key: 'update',
    value: function update() {
      var _this2 = this;

      window.requestAnimationFrame(function () {
        if (!_this2.mounted) return;
        _this2.refs.message.innerHTML = _this2.message;
        _this2.refs.base.setAttribute('data-state', _this2.state);
      });
    }
  }, {
    key: 'setMessage',
    value: function setMessage(message) {
      var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
          _ref2$state = _ref2.state,
          state = _ref2$state === undefined ? this.state : _ref2$state,
          _ref2$progress = _ref2.progress,
          progress = _ref2$progress === undefined ? 0 : _ref2$progress;

      this.message = message;
      this.state = state;
      this.refs.base.style.setProperty('--progress', progress);
      this.update();
    }
  }, {
    key: 'log',
    value: function log(message) {
      this.setMessage(message, { state: 'log' });
    }
  }, {
    key: 'success',
    value: function success(message) {
      this.setMessage(message, { state: 'success' });
    }
  }, {
    key: 'warning',
    value: function warning(message) {
      this.setMessage(message, { state: 'warning' });
    }
  }, {
    key: 'error',
    value: function error(message) {
      this.setMessage(message, { state: 'error' });
    }
  }]);

  return LogScreen;
}(__WEBPACK_IMPORTED_MODULE_6_abstractions_DomComponent__["a" /* default */]);

/* harmony default export */ __webpack_exports__["a"] = (LogScreen);

/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

// most Object methods by ES6 should accept primitives
var $export = __webpack_require__(4);
var core = __webpack_require__(1);
var fails = __webpack_require__(24);
module.exports = function (KEY, exec) {
  var fn = (core.Object || {})[KEY] || Object[KEY];
  var exp = {};
  exp[KEY] = exec(fn);
  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);
};


/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _iterator = __webpack_require__(239);

var _iterator2 = _interopRequireDefault(_iterator);

var _symbol = __webpack_require__(241);

var _symbol2 = _interopRequireDefault(_symbol);

var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
  return typeof obj === "undefined" ? "undefined" : _typeof(obj);
} : function (obj) {
  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
};

/***/ }),
/* 73 */
/***/ (function(module, exports) {

exports.f = Object.getOwnPropertySymbols;


/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var $keys = __webpack_require__(60);
var hiddenKeys = __webpack_require__(45).concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return $keys(O, hiddenKeys);
};


/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

var pIE = __webpack_require__(35);
var createDesc = __webpack_require__(25);
var toIObject = __webpack_require__(13);
var toPrimitive = __webpack_require__(40);
var has = __webpack_require__(12);
var IE8_DOM_DEFINE = __webpack_require__(58);
var gOPD = Object.getOwnPropertyDescriptor;

exports.f = __webpack_require__(10) ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = toIObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return gOPD(O, P);
  } catch (e) { /* empty */ }
  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
};


/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(260), __esModule: true };

/***/ }),
/* 77 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var hostname = window.configuration.debug['overrideHostname'] || window.location.hostname;
/* harmony default export */ __webpack_exports__["a"] = (window.location.protocol + '//' + hostname + ':' + window.configuration['host'].port);

/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

var getKeys = __webpack_require__(26);
var toIObject = __webpack_require__(13);
var isEnum = __webpack_require__(35).f;
module.exports = function (isEntries) {
  return function (it) {
    var O = toIObject(it);
    var keys = getKeys(O);
    var length = keys.length;
    var i = 0;
    var result = [];
    var key;
    while (length > i) if (isEnum.call(O, key = keys[i++])) {
      result.push(isEntries ? [key, O[key]] : O[key]);
    } return result;
  };
};


/***/ }),
/* 79 */
/***/ (function(module, exports) {

function E () {
  // Keep this empty so it's easier to inherit from
  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)
}

E.prototype = {
  on: function (name, callback, ctx) {
    var e = this.e || (this.e = {});

    (e[name] || (e[name] = [])).push({
      fn: callback,
      ctx: ctx
    });

    return this;
  },

  once: function (name, callback, ctx) {
    var self = this;
    function listener () {
      self.off(name, listener);
      callback.apply(ctx, arguments);
    };

    listener._ = callback
    return this.on(name, listener, ctx);
  },

  emit: function (name) {
    var data = [].slice.call(arguments, 1);
    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();
    var i = 0;
    var len = evtArr.length;

    for (i; i < len; i++) {
      evtArr[i].fn.apply(evtArr[i].ctx, data);
    }

    return this;
  },

  off: function (name, callback) {
    var e = this.e || (this.e = {});
    var evts = e[name];
    var liveEvents = [];

    if (evts && callback) {
      for (var i = 0, len = evts.length; i < len; i++) {
        if (evts[i].fn !== callback && evts[i].fn._ !== callback)
          liveEvents.push(evts[i]);
      }
    }

    // Remove event from queue to prevent memory leak
    // Suggested by https://github.com/lazd
    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910

    (liveEvents.length)
      ? e[name] = liveEvents
      : delete e[name];

    return this;
  }
};

module.exports = E;
module.exports.TinyEmitter = E;


/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var af = moment.defineLocale('af', {
        months : 'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split('_'),
        monthsShort : 'Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split('_'),
        weekdays : 'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split('_'),
        weekdaysShort : 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),
        weekdaysMin : 'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'),
        meridiemParse: /vm|nm/i,
        isPM : function (input) {
            return /^nm$/i.test(input);
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours < 12) {
                return isLower ? 'vm' : 'VM';
            } else {
                return isLower ? 'nm' : 'NM';
            }
        },
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Vandag om] LT',
            nextDay : '[Môre om] LT',
            nextWeek : 'dddd [om] LT',
            lastDay : '[Gister om] LT',
            lastWeek : '[Laas] dddd [om] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'oor %s',
            past : '%s gelede',
            s : '\'n paar sekondes',
            ss : '%d sekondes',
            m : '\'n minuut',
            mm : '%d minute',
            h : '\'n uur',
            hh : '%d ure',
            d : '\'n dag',
            dd : '%d dae',
            M : '\'n maand',
            MM : '%d maande',
            y : '\'n jaar',
            yy : '%d jaar'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
        ordinal : function (number) {
            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de'); // Thanks to Joris Röling : https://github.com/jjupiter
        },
        week : {
            dow : 1, // Maandag is die eerste dag van die week.
            doy : 4  // Die week wat die 4de Januarie bevat is die eerste week van die jaar.
        }
    });

    return af;

})));


/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '١',
        '2': '٢',
        '3': '٣',
        '4': '٤',
        '5': '٥',
        '6': '٦',
        '7': '٧',
        '8': '٨',
        '9': '٩',
        '0': '٠'
    }, numberMap = {
        '١': '1',
        '٢': '2',
        '٣': '3',
        '٤': '4',
        '٥': '5',
        '٦': '6',
        '٧': '7',
        '٨': '8',
        '٩': '9',
        '٠': '0'
    }, pluralForm = function (n) {
        return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;
    }, plurals = {
        s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],
        m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],
        h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],
        d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],
        M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],
        y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']
    }, pluralize = function (u) {
        return function (number, withoutSuffix, string, isFuture) {
            var f = pluralForm(number),
                str = plurals[u][pluralForm(number)];
            if (f === 2) {
                str = str[withoutSuffix ? 0 : 1];
            }
            return str.replace(/%d/i, number);
        };
    }, months = [
        'يناير',
        'فبراير',
        'مارس',
        'أبريل',
        'مايو',
        'يونيو',
        'يوليو',
        'أغسطس',
        'سبتمبر',
        'أكتوبر',
        'نوفمبر',
        'ديسمبر'
    ];

    var ar = moment.defineLocale('ar', {
        months : months,
        monthsShort : months,
        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'D/\u200FM/\u200FYYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        meridiemParse: /ص|م/,
        isPM : function (input) {
            return 'م' === input;
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ص';
            } else {
                return 'م';
            }
        },
        calendar : {
            sameDay: '[اليوم عند الساعة] LT',
            nextDay: '[غدًا عند الساعة] LT',
            nextWeek: 'dddd [عند الساعة] LT',
            lastDay: '[أمس عند الساعة] LT',
            lastWeek: 'dddd [عند الساعة] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'بعد %s',
            past : 'منذ %s',
            s : pluralize('s'),
            ss : pluralize('s'),
            m : pluralize('m'),
            mm : pluralize('m'),
            h : pluralize('h'),
            hh : pluralize('h'),
            d : pluralize('d'),
            dd : pluralize('d'),
            M : pluralize('M'),
            MM : pluralize('M'),
            y : pluralize('y'),
            yy : pluralize('y')
        },
        preparse: function (string) {
            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
                return numberMap[match];
            }).replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            }).replace(/,/g, '،');
        },
        week : {
            dow : 6, // Saturday is the first day of the week.
            doy : 12  // The week that contains Jan 12th is the first week of the year.
        }
    });

    return ar;

})));


/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var arDz = moment.defineLocale('ar-dz', {
        months : 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
        monthsShort : 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort : 'احد_اثنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin : 'أح_إث_ثلا_أر_خم_جم_سب'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'في %s',
            past : 'منذ %s',
            s : 'ثوان',
            ss : '%d ثانية',
            m : 'دقيقة',
            mm : '%d دقائق',
            h : 'ساعة',
            hh : '%d ساعات',
            d : 'يوم',
            dd : '%d أيام',
            M : 'شهر',
            MM : '%d أشهر',
            y : 'سنة',
            yy : '%d سنوات'
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return arDz;

})));


/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var arKw = moment.defineLocale('ar-kw', {
        months : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
        monthsShort : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
        weekdays : 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort : 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'في %s',
            past : 'منذ %s',
            s : 'ثوان',
            ss : '%d ثانية',
            m : 'دقيقة',
            mm : '%d دقائق',
            h : 'ساعة',
            hh : '%d ساعات',
            d : 'يوم',
            dd : '%d أيام',
            M : 'شهر',
            MM : '%d أشهر',
            y : 'سنة',
            yy : '%d سنوات'
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 12  // The week that contains Jan 12th is the first week of the year.
        }
    });

    return arKw;

})));


/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '1',
        '2': '2',
        '3': '3',
        '4': '4',
        '5': '5',
        '6': '6',
        '7': '7',
        '8': '8',
        '9': '9',
        '0': '0'
    }, pluralForm = function (n) {
        return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;
    }, plurals = {
        s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],
        m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],
        h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],
        d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],
        M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],
        y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']
    }, pluralize = function (u) {
        return function (number, withoutSuffix, string, isFuture) {
            var f = pluralForm(number),
                str = plurals[u][pluralForm(number)];
            if (f === 2) {
                str = str[withoutSuffix ? 0 : 1];
            }
            return str.replace(/%d/i, number);
        };
    }, months = [
        'يناير',
        'فبراير',
        'مارس',
        'أبريل',
        'مايو',
        'يونيو',
        'يوليو',
        'أغسطس',
        'سبتمبر',
        'أكتوبر',
        'نوفمبر',
        'ديسمبر'
    ];

    var arLy = moment.defineLocale('ar-ly', {
        months : months,
        monthsShort : months,
        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'D/\u200FM/\u200FYYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        meridiemParse: /ص|م/,
        isPM : function (input) {
            return 'م' === input;
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ص';
            } else {
                return 'م';
            }
        },
        calendar : {
            sameDay: '[اليوم عند الساعة] LT',
            nextDay: '[غدًا عند الساعة] LT',
            nextWeek: 'dddd [عند الساعة] LT',
            lastDay: '[أمس عند الساعة] LT',
            lastWeek: 'dddd [عند الساعة] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'بعد %s',
            past : 'منذ %s',
            s : pluralize('s'),
            ss : pluralize('s'),
            m : pluralize('m'),
            mm : pluralize('m'),
            h : pluralize('h'),
            hh : pluralize('h'),
            d : pluralize('d'),
            dd : pluralize('d'),
            M : pluralize('M'),
            MM : pluralize('M'),
            y : pluralize('y'),
            yy : pluralize('y')
        },
        preparse: function (string) {
            return string.replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            }).replace(/,/g, '،');
        },
        week : {
            dow : 6, // Saturday is the first day of the week.
            doy : 12  // The week that contains Jan 12th is the first week of the year.
        }
    });

    return arLy;

})));


/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var arMa = moment.defineLocale('ar-ma', {
        months : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
        monthsShort : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
        weekdays : 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort : 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'في %s',
            past : 'منذ %s',
            s : 'ثوان',
            ss : '%d ثانية',
            m : 'دقيقة',
            mm : '%d دقائق',
            h : 'ساعة',
            hh : '%d ساعات',
            d : 'يوم',
            dd : '%d أيام',
            M : 'شهر',
            MM : '%d أشهر',
            y : 'سنة',
            yy : '%d سنوات'
        },
        week : {
            dow : 6, // Saturday is the first day of the week.
            doy : 12  // The week that contains Jan 12th is the first week of the year.
        }
    });

    return arMa;

})));


/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '١',
        '2': '٢',
        '3': '٣',
        '4': '٤',
        '5': '٥',
        '6': '٦',
        '7': '٧',
        '8': '٨',
        '9': '٩',
        '0': '٠'
    }, numberMap = {
        '١': '1',
        '٢': '2',
        '٣': '3',
        '٤': '4',
        '٥': '5',
        '٦': '6',
        '٧': '7',
        '٨': '8',
        '٩': '9',
        '٠': '0'
    };

    var arSa = moment.defineLocale('ar-sa', {
        months : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
        monthsShort : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        meridiemParse: /ص|م/,
        isPM : function (input) {
            return 'م' === input;
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ص';
            } else {
                return 'م';
            }
        },
        calendar : {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'في %s',
            past : 'منذ %s',
            s : 'ثوان',
            ss : '%d ثانية',
            m : 'دقيقة',
            mm : '%d دقائق',
            h : 'ساعة',
            hh : '%d ساعات',
            d : 'يوم',
            dd : '%d أيام',
            M : 'شهر',
            MM : '%d أشهر',
            y : 'سنة',
            yy : '%d سنوات'
        },
        preparse: function (string) {
            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
                return numberMap[match];
            }).replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            }).replace(/,/g, '،');
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 6th is the first week of the year.
        }
    });

    return arSa;

})));


/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var arTn = moment.defineLocale('ar-tn', {
        months: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
        monthsShort: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact : true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'في %s',
            past: 'منذ %s',
            s: 'ثوان',
            ss : '%d ثانية',
            m: 'دقيقة',
            mm: '%d دقائق',
            h: 'ساعة',
            hh: '%d ساعات',
            d: 'يوم',
            dd: '%d أيام',
            M: 'شهر',
            MM: '%d أشهر',
            y: 'سنة',
            yy: '%d سنوات'
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
        }
    });

    return arTn;

})));


/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var suffixes = {
        1: '-inci',
        5: '-inci',
        8: '-inci',
        70: '-inci',
        80: '-inci',
        2: '-nci',
        7: '-nci',
        20: '-nci',
        50: '-nci',
        3: '-üncü',
        4: '-üncü',
        100: '-üncü',
        6: '-ncı',
        9: '-uncu',
        10: '-uncu',
        30: '-uncu',
        60: '-ıncı',
        90: '-ıncı'
    };

    var az = moment.defineLocale('az', {
        months : 'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split('_'),
        monthsShort : 'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'),
        weekdays : 'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split('_'),
        weekdaysShort : 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),
        weekdaysMin : 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[bugün saat] LT',
            nextDay : '[sabah saat] LT',
            nextWeek : '[gələn həftə] dddd [saat] LT',
            lastDay : '[dünən] LT',
            lastWeek : '[keçən həftə] dddd [saat] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s sonra',
            past : '%s əvvəl',
            s : 'birneçə saniyə',
            ss : '%d saniyə',
            m : 'bir dəqiqə',
            mm : '%d dəqiqə',
            h : 'bir saat',
            hh : '%d saat',
            d : 'bir gün',
            dd : '%d gün',
            M : 'bir ay',
            MM : '%d ay',
            y : 'bir il',
            yy : '%d il'
        },
        meridiemParse: /gecə|səhər|gündüz|axşam/,
        isPM : function (input) {
            return /^(gündüz|axşam)$/.test(input);
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'gecə';
            } else if (hour < 12) {
                return 'səhər';
            } else if (hour < 17) {
                return 'gündüz';
            } else {
                return 'axşam';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,
        ordinal : function (number) {
            if (number === 0) {  // special case for zero
                return number + '-ıncı';
            }
            var a = number % 10,
                b = number % 100 - a,
                c = number >= 100 ? 100 : null;
            return number + (suffixes[a] || suffixes[b] || suffixes[c]);
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return az;

})));


/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function plural(word, num) {
        var forms = word.split('_');
        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
    }
    function relativeTimeWithPlural(number, withoutSuffix, key) {
        var format = {
            'ss': withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',
            'mm': withoutSuffix ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін',
            'hh': withoutSuffix ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін',
            'dd': 'дзень_дні_дзён',
            'MM': 'месяц_месяцы_месяцаў',
            'yy': 'год_гады_гадоў'
        };
        if (key === 'm') {
            return withoutSuffix ? 'хвіліна' : 'хвіліну';
        }
        else if (key === 'h') {
            return withoutSuffix ? 'гадзіна' : 'гадзіну';
        }
        else {
            return number + ' ' + plural(format[key], +number);
        }
    }

    var be = moment.defineLocale('be', {
        months : {
            format: 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split('_'),
            standalone: 'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split('_')
        },
        monthsShort : 'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split('_'),
        weekdays : {
            format: 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split('_'),
            standalone: 'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split('_'),
            isFormat: /\[ ?[Ууў] ?(?:мінулую|наступную)? ?\] ?dddd/
        },
        weekdaysShort : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
        weekdaysMin : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY г.',
            LLL : 'D MMMM YYYY г., HH:mm',
            LLLL : 'dddd, D MMMM YYYY г., HH:mm'
        },
        calendar : {
            sameDay: '[Сёння ў] LT',
            nextDay: '[Заўтра ў] LT',
            lastDay: '[Учора ў] LT',
            nextWeek: function () {
                return '[У] dddd [ў] LT';
            },
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                    case 3:
                    case 5:
                    case 6:
                        return '[У мінулую] dddd [ў] LT';
                    case 1:
                    case 2:
                    case 4:
                        return '[У мінулы] dddd [ў] LT';
                }
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : 'праз %s',
            past : '%s таму',
            s : 'некалькі секунд',
            m : relativeTimeWithPlural,
            mm : relativeTimeWithPlural,
            h : relativeTimeWithPlural,
            hh : relativeTimeWithPlural,
            d : 'дзень',
            dd : relativeTimeWithPlural,
            M : 'месяц',
            MM : relativeTimeWithPlural,
            y : 'год',
            yy : relativeTimeWithPlural
        },
        meridiemParse: /ночы|раніцы|дня|вечара/,
        isPM : function (input) {
            return /^(дня|вечара)$/.test(input);
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'ночы';
            } else if (hour < 12) {
                return 'раніцы';
            } else if (hour < 17) {
                return 'дня';
            } else {
                return 'вечара';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(і|ы|га)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'M':
                case 'd':
                case 'DDD':
                case 'w':
                case 'W':
                    return (number % 10 === 2 || number % 10 === 3) && (number % 100 !== 12 && number % 100 !== 13) ? number + '-і' : number + '-ы';
                case 'D':
                    return number + '-га';
                default:
                    return number;
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return be;

})));


/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var bg = moment.defineLocale('bg', {
        months : 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),
        monthsShort : 'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),
        weekdays : 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),
        weekdaysShort : 'нед_пон_вто_сря_чет_пет_съб'.split('_'),
        weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'D.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY H:mm',
            LLLL : 'dddd, D MMMM YYYY H:mm'
        },
        calendar : {
            sameDay : '[Днес в] LT',
            nextDay : '[Утре в] LT',
            nextWeek : 'dddd [в] LT',
            lastDay : '[Вчера в] LT',
            lastWeek : function () {
                switch (this.day()) {
                    case 0:
                    case 3:
                    case 6:
                        return '[В изминалата] dddd [в] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[В изминалия] dddd [в] LT';
                }
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'след %s',
            past : 'преди %s',
            s : 'няколко секунди',
            ss : '%d секунди',
            m : 'минута',
            mm : '%d минути',
            h : 'час',
            hh : '%d часа',
            d : 'ден',
            dd : '%d дни',
            M : 'месец',
            MM : '%d месеца',
            y : 'година',
            yy : '%d години'
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
        ordinal : function (number) {
            var lastDigit = number % 10,
                last2Digits = number % 100;
            if (number === 0) {
                return number + '-ев';
            } else if (last2Digits === 0) {
                return number + '-ен';
            } else if (last2Digits > 10 && last2Digits < 20) {
                return number + '-ти';
            } else if (lastDigit === 1) {
                return number + '-ви';
            } else if (lastDigit === 2) {
                return number + '-ри';
            } else if (lastDigit === 7 || lastDigit === 8) {
                return number + '-ми';
            } else {
                return number + '-ти';
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return bg;

})));


/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var bm = moment.defineLocale('bm', {
        months : 'Zanwuyekalo_Fewuruyekalo_Marisikalo_Awirilikalo_Mɛkalo_Zuwɛnkalo_Zuluyekalo_Utikalo_Sɛtanburukalo_ɔkutɔburukalo_Nowanburukalo_Desanburukalo'.split('_'),
        monthsShort : 'Zan_Few_Mar_Awi_Mɛ_Zuw_Zul_Uti_Sɛt_ɔku_Now_Des'.split('_'),
        weekdays : 'Kari_Ntɛnɛn_Tarata_Araba_Alamisa_Juma_Sibiri'.split('_'),
        weekdaysShort : 'Kar_Ntɛ_Tar_Ara_Ala_Jum_Sib'.split('_'),
        weekdaysMin : 'Ka_Nt_Ta_Ar_Al_Ju_Si'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'MMMM [tile] D [san] YYYY',
            LLL : 'MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm',
            LLLL : 'dddd MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm'
        },
        calendar : {
            sameDay : '[Bi lɛrɛ] LT',
            nextDay : '[Sini lɛrɛ] LT',
            nextWeek : 'dddd [don lɛrɛ] LT',
            lastDay : '[Kunu lɛrɛ] LT',
            lastWeek : 'dddd [tɛmɛnen lɛrɛ] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s kɔnɔ',
            past : 'a bɛ %s bɔ',
            s : 'sanga dama dama',
            ss : 'sekondi %d',
            m : 'miniti kelen',
            mm : 'miniti %d',
            h : 'lɛrɛ kelen',
            hh : 'lɛrɛ %d',
            d : 'tile kelen',
            dd : 'tile %d',
            M : 'kalo kelen',
            MM : 'kalo %d',
            y : 'san kelen',
            yy : 'san %d'
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return bm;

})));


/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '১',
        '2': '২',
        '3': '৩',
        '4': '৪',
        '5': '৫',
        '6': '৬',
        '7': '৭',
        '8': '৮',
        '9': '৯',
        '0': '০'
    },
    numberMap = {
        '১': '1',
        '২': '2',
        '৩': '3',
        '৪': '4',
        '৫': '5',
        '৬': '6',
        '৭': '7',
        '৮': '8',
        '৯': '9',
        '০': '0'
    };

    var bn = moment.defineLocale('bn', {
        months : 'জানুয়ারী_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split('_'),
        monthsShort : 'জানু_ফেব_মার্চ_এপ্র_মে_জুন_জুল_আগ_সেপ্ট_অক্টো_নভে_ডিসে'.split('_'),
        weekdays : 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split('_'),
        weekdaysShort : 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),
        weekdaysMin : 'রবি_সোম_মঙ্গ_বুধ_বৃহঃ_শুক্র_শনি'.split('_'),
        longDateFormat : {
            LT : 'A h:mm সময়',
            LTS : 'A h:mm:ss সময়',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, A h:mm সময়',
            LLLL : 'dddd, D MMMM YYYY, A h:mm সময়'
        },
        calendar : {
            sameDay : '[আজ] LT',
            nextDay : '[আগামীকাল] LT',
            nextWeek : 'dddd, LT',
            lastDay : '[গতকাল] LT',
            lastWeek : '[গত] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s পরে',
            past : '%s আগে',
            s : 'কয়েক সেকেন্ড',
            ss : '%d সেকেন্ড',
            m : 'এক মিনিট',
            mm : '%d মিনিট',
            h : 'এক ঘন্টা',
            hh : '%d ঘন্টা',
            d : 'এক দিন',
            dd : '%d দিন',
            M : 'এক মাস',
            MM : '%d মাস',
            y : 'এক বছর',
            yy : '%d বছর'
        },
        preparse: function (string) {
            return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        meridiemParse: /রাত|সকাল|দুপুর|বিকাল|রাত/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if ((meridiem === 'রাত' && hour >= 4) ||
                    (meridiem === 'দুপুর' && hour < 5) ||
                    meridiem === 'বিকাল') {
                return hour + 12;
            } else {
                return hour;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'রাত';
            } else if (hour < 10) {
                return 'সকাল';
            } else if (hour < 17) {
                return 'দুপুর';
            } else if (hour < 20) {
                return 'বিকাল';
            } else {
                return 'রাত';
            }
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 6th is the first week of the year.
        }
    });

    return bn;

})));


/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '༡',
        '2': '༢',
        '3': '༣',
        '4': '༤',
        '5': '༥',
        '6': '༦',
        '7': '༧',
        '8': '༨',
        '9': '༩',
        '0': '༠'
    },
    numberMap = {
        '༡': '1',
        '༢': '2',
        '༣': '3',
        '༤': '4',
        '༥': '5',
        '༦': '6',
        '༧': '7',
        '༨': '8',
        '༩': '9',
        '༠': '0'
    };

    var bo = moment.defineLocale('bo', {
        months : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
        monthsShort : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
        weekdays : 'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split('_'),
        weekdaysShort : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
        weekdaysMin : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
        longDateFormat : {
            LT : 'A h:mm',
            LTS : 'A h:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, A h:mm',
            LLLL : 'dddd, D MMMM YYYY, A h:mm'
        },
        calendar : {
            sameDay : '[དི་རིང] LT',
            nextDay : '[སང་ཉིན] LT',
            nextWeek : '[བདུན་ཕྲག་རྗེས་མ], LT',
            lastDay : '[ཁ་སང] LT',
            lastWeek : '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s ལ་',
            past : '%s སྔན་ལ',
            s : 'ལམ་སང',
            ss : '%d སྐར་ཆ།',
            m : 'སྐར་མ་གཅིག',
            mm : '%d སྐར་མ',
            h : 'ཆུ་ཚོད་གཅིག',
            hh : '%d ཆུ་ཚོད',
            d : 'ཉིན་གཅིག',
            dd : '%d ཉིན་',
            M : 'ཟླ་བ་གཅིག',
            MM : '%d ཟླ་བ',
            y : 'ལོ་གཅིག',
            yy : '%d ལོ'
        },
        preparse: function (string) {
            return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if ((meridiem === 'མཚན་མོ' && hour >= 4) ||
                    (meridiem === 'ཉིན་གུང' && hour < 5) ||
                    meridiem === 'དགོང་དག') {
                return hour + 12;
            } else {
                return hour;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'མཚན་མོ';
            } else if (hour < 10) {
                return 'ཞོགས་ཀས';
            } else if (hour < 17) {
                return 'ཉིན་གུང';
            } else if (hour < 20) {
                return 'དགོང་དག';
            } else {
                return 'མཚན་མོ';
            }
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 6th is the first week of the year.
        }
    });

    return bo;

})));


/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function relativeTimeWithMutation(number, withoutSuffix, key) {
        var format = {
            'mm': 'munutenn',
            'MM': 'miz',
            'dd': 'devezh'
        };
        return number + ' ' + mutation(format[key], number);
    }
    function specialMutationForYears(number) {
        switch (lastNumber(number)) {
            case 1:
            case 3:
            case 4:
            case 5:
            case 9:
                return number + ' bloaz';
            default:
                return number + ' vloaz';
        }
    }
    function lastNumber(number) {
        if (number > 9) {
            return lastNumber(number % 10);
        }
        return number;
    }
    function mutation(text, number) {
        if (number === 2) {
            return softMutation(text);
        }
        return text;
    }
    function softMutation(text) {
        var mutationTable = {
            'm': 'v',
            'b': 'v',
            'd': 'z'
        };
        if (mutationTable[text.charAt(0)] === undefined) {
            return text;
        }
        return mutationTable[text.charAt(0)] + text.substring(1);
    }

    var br = moment.defineLocale('br', {
        months : 'Genver_C\'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split('_'),
        monthsShort : 'Gen_C\'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),
        weekdays : 'Sul_Lun_Meurzh_Merc\'her_Yaou_Gwener_Sadorn'.split('_'),
        weekdaysShort : 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),
        weekdaysMin : 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'h[e]mm A',
            LTS : 'h[e]mm:ss A',
            L : 'DD/MM/YYYY',
            LL : 'D [a viz] MMMM YYYY',
            LLL : 'D [a viz] MMMM YYYY h[e]mm A',
            LLLL : 'dddd, D [a viz] MMMM YYYY h[e]mm A'
        },
        calendar : {
            sameDay : '[Hiziv da] LT',
            nextDay : '[Warc\'hoazh da] LT',
            nextWeek : 'dddd [da] LT',
            lastDay : '[Dec\'h da] LT',
            lastWeek : 'dddd [paset da] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'a-benn %s',
            past : '%s \'zo',
            s : 'un nebeud segondennoù',
            ss : '%d eilenn',
            m : 'ur vunutenn',
            mm : relativeTimeWithMutation,
            h : 'un eur',
            hh : '%d eur',
            d : 'un devezh',
            dd : relativeTimeWithMutation,
            M : 'ur miz',
            MM : relativeTimeWithMutation,
            y : 'ur bloaz',
            yy : specialMutationForYears
        },
        dayOfMonthOrdinalParse: /\d{1,2}(añ|vet)/,
        ordinal : function (number) {
            var output = (number === 1) ? 'añ' : 'vet';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return br;

})));


/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function translate(number, withoutSuffix, key) {
        var result = number + ' ';
        switch (key) {
            case 'ss':
                if (number === 1) {
                    result += 'sekunda';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'sekunde';
                } else {
                    result += 'sekundi';
                }
                return result;
            case 'm':
                return withoutSuffix ? 'jedna minuta' : 'jedne minute';
            case 'mm':
                if (number === 1) {
                    result += 'minuta';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'minute';
                } else {
                    result += 'minuta';
                }
                return result;
            case 'h':
                return withoutSuffix ? 'jedan sat' : 'jednog sata';
            case 'hh':
                if (number === 1) {
                    result += 'sat';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'sata';
                } else {
                    result += 'sati';
                }
                return result;
            case 'dd':
                if (number === 1) {
                    result += 'dan';
                } else {
                    result += 'dana';
                }
                return result;
            case 'MM':
                if (number === 1) {
                    result += 'mjesec';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'mjeseca';
                } else {
                    result += 'mjeseci';
                }
                return result;
            case 'yy':
                if (number === 1) {
                    result += 'godina';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'godine';
                } else {
                    result += 'godina';
                }
                return result;
        }
    }

    var bs = moment.defineLocale('bs', {
        months : 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split('_'),
        monthsShort : 'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split('_'),
        monthsParseExact: true,
        weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
        weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
        weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY H:mm',
            LLLL : 'dddd, D. MMMM YYYY H:mm'
        },
        calendar : {
            sameDay  : '[danas u] LT',
            nextDay  : '[sutra u] LT',
            nextWeek : function () {
                switch (this.day()) {
                    case 0:
                        return '[u] [nedjelju] [u] LT';
                    case 3:
                        return '[u] [srijedu] [u] LT';
                    case 6:
                        return '[u] [subotu] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[u] dddd [u] LT';
                }
            },
            lastDay  : '[jučer u] LT',
            lastWeek : function () {
                switch (this.day()) {
                    case 0:
                    case 3:
                        return '[prošlu] dddd [u] LT';
                    case 6:
                        return '[prošle] [subote] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[prošli] dddd [u] LT';
                }
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'za %s',
            past   : 'prije %s',
            s      : 'par sekundi',
            ss     : translate,
            m      : translate,
            mm     : translate,
            h      : translate,
            hh     : translate,
            d      : 'dan',
            dd     : translate,
            M      : 'mjesec',
            MM     : translate,
            y      : 'godinu',
            yy     : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return bs;

})));


/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var ca = moment.defineLocale('ca', {
        months : {
            standalone: 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),
            format: 'de gener_de febrer_de març_d\'abril_de maig_de juny_de juliol_d\'agost_de setembre_d\'octubre_de novembre_de desembre'.split('_'),
            isFormat: /D[oD]?(\s)+MMMM/
        },
        monthsShort : 'gen._febr._març_abr._maig_juny_jul._ag._set._oct._nov._des.'.split('_'),
        monthsParseExact : true,
        weekdays : 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),
        weekdaysShort : 'dg._dl._dt._dc._dj._dv._ds.'.split('_'),
        weekdaysMin : 'dg_dl_dt_dc_dj_dv_ds'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM [de] YYYY',
            ll : 'D MMM YYYY',
            LLL : 'D MMMM [de] YYYY [a les] H:mm',
            lll : 'D MMM YYYY, H:mm',
            LLLL : 'dddd D MMMM [de] YYYY [a les] H:mm',
            llll : 'ddd D MMM YYYY, H:mm'
        },
        calendar : {
            sameDay : function () {
                return '[avui a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
            },
            nextDay : function () {
                return '[demà a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
            },
            nextWeek : function () {
                return 'dddd [a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
            },
            lastDay : function () {
                return '[ahir a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
            },
            lastWeek : function () {
                return '[el] dddd [passat a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'd\'aquí %s',
            past : 'fa %s',
            s : 'uns segons',
            ss : '%d segons',
            m : 'un minut',
            mm : '%d minuts',
            h : 'una hora',
            hh : '%d hores',
            d : 'un dia',
            dd : '%d dies',
            M : 'un mes',
            MM : '%d mesos',
            y : 'un any',
            yy : '%d anys'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(r|n|t|è|a)/,
        ordinal : function (number, period) {
            var output = (number === 1) ? 'r' :
                (number === 2) ? 'n' :
                (number === 3) ? 'r' :
                (number === 4) ? 't' : 'è';
            if (period === 'w' || period === 'W') {
                output = 'a';
            }
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return ca;

})));


/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var months = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_'),
        monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_');

    var monthsParse = [/^led/i, /^úno/i, /^bře/i, /^dub/i, /^kvě/i, /^(čvn|červen$|června)/i, /^(čvc|červenec|července)/i, /^srp/i, /^zář/i, /^říj/i, /^lis/i, /^pro/i];
    // NOTE: 'červen' is substring of 'červenec'; therefore 'červenec' must precede 'červen' in the regex to be fully matched.
    // Otherwise parser matches '1. červenec' as '1. červen' + 'ec'.
    var monthsRegex = /^(leden|únor|březen|duben|květen|červenec|července|červen|června|srpen|září|říjen|listopad|prosinec|led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i;

    function plural(n) {
        return (n > 1) && (n < 5) && (~~(n / 10) !== 1);
    }
    function translate(number, withoutSuffix, key, isFuture) {
        var result = number + ' ';
        switch (key) {
            case 's':  // a few seconds / in a few seconds / a few seconds ago
                return (withoutSuffix || isFuture) ? 'pár sekund' : 'pár sekundami';
            case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'sekundy' : 'sekund');
                } else {
                    return result + 'sekundami';
                }
                break;
            case 'm':  // a minute / in a minute / a minute ago
                return withoutSuffix ? 'minuta' : (isFuture ? 'minutu' : 'minutou');
            case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'minuty' : 'minut');
                } else {
                    return result + 'minutami';
                }
                break;
            case 'h':  // an hour / in an hour / an hour ago
                return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');
            case 'hh': // 9 hours / in 9 hours / 9 hours ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'hodiny' : 'hodin');
                } else {
                    return result + 'hodinami';
                }
                break;
            case 'd':  // a day / in a day / a day ago
                return (withoutSuffix || isFuture) ? 'den' : 'dnem';
            case 'dd': // 9 days / in 9 days / 9 days ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'dny' : 'dní');
                } else {
                    return result + 'dny';
                }
                break;
            case 'M':  // a month / in a month / a month ago
                return (withoutSuffix || isFuture) ? 'měsíc' : 'měsícem';
            case 'MM': // 9 months / in 9 months / 9 months ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'měsíce' : 'měsíců');
                } else {
                    return result + 'měsíci';
                }
                break;
            case 'y':  // a year / in a year / a year ago
                return (withoutSuffix || isFuture) ? 'rok' : 'rokem';
            case 'yy': // 9 years / in 9 years / 9 years ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'roky' : 'let');
                } else {
                    return result + 'lety';
                }
                break;
        }
    }

    var cs = moment.defineLocale('cs', {
        months : months,
        monthsShort : monthsShort,
        monthsRegex : monthsRegex,
        monthsShortRegex : monthsRegex,
        // NOTE: 'červen' is substring of 'červenec'; therefore 'červenec' must precede 'červen' in the regex to be fully matched.
        // Otherwise parser matches '1. červenec' as '1. červen' + 'ec'.
        monthsStrictRegex : /^(leden|ledna|února|únor|březen|března|duben|dubna|květen|května|červenec|července|červen|června|srpen|srpna|září|říjen|října|listopadu|listopad|prosinec|prosince)/i,
        monthsShortStrictRegex : /^(led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i,
        monthsParse : monthsParse,
        longMonthsParse : monthsParse,
        shortMonthsParse : monthsParse,
        weekdays : 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),
        weekdaysShort : 'ne_po_út_st_čt_pá_so'.split('_'),
        weekdaysMin : 'ne_po_út_st_čt_pá_so'.split('_'),
        longDateFormat : {
            LT: 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY H:mm',
            LLLL : 'dddd D. MMMM YYYY H:mm',
            l : 'D. M. YYYY'
        },
        calendar : {
            sameDay: '[dnes v] LT',
            nextDay: '[zítra v] LT',
            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[v neděli v] LT';
                    case 1:
                    case 2:
                        return '[v] dddd [v] LT';
                    case 3:
                        return '[ve středu v] LT';
                    case 4:
                        return '[ve čtvrtek v] LT';
                    case 5:
                        return '[v pátek v] LT';
                    case 6:
                        return '[v sobotu v] LT';
                }
            },
            lastDay: '[včera v] LT',
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[minulou neděli v] LT';
                    case 1:
                    case 2:
                        return '[minulé] dddd [v] LT';
                    case 3:
                        return '[minulou středu v] LT';
                    case 4:
                    case 5:
                        return '[minulý] dddd [v] LT';
                    case 6:
                        return '[minulou sobotu v] LT';
                }
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : 'za %s',
            past : 'před %s',
            s : translate,
            ss : translate,
            m : translate,
            mm : translate,
            h : translate,
            hh : translate,
            d : translate,
            dd : translate,
            M : translate,
            MM : translate,
            y : translate,
            yy : translate
        },
        dayOfMonthOrdinalParse : /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return cs;

})));


/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var cv = moment.defineLocale('cv', {
        months : 'кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав'.split('_'),
        monthsShort : 'кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш'.split('_'),
        weekdays : 'вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун'.split('_'),
        weekdaysShort : 'выр_тун_ытл_юн_кӗҫ_эрн_шӑм'.split('_'),
        weekdaysMin : 'вр_тн_ыт_юн_кҫ_эр_шм'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD-MM-YYYY',
            LL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]',
            LLL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',
            LLLL : 'dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm'
        },
        calendar : {
            sameDay: '[Паян] LT [сехетре]',
            nextDay: '[Ыран] LT [сехетре]',
            lastDay: '[Ӗнер] LT [сехетре]',
            nextWeek: '[Ҫитес] dddd LT [сехетре]',
            lastWeek: '[Иртнӗ] dddd LT [сехетре]',
            sameElse: 'L'
        },
        relativeTime : {
            future : function (output) {
                var affix = /сехет$/i.exec(output) ? 'рен' : /ҫул$/i.exec(output) ? 'тан' : 'ран';
                return output + affix;
            },
            past : '%s каялла',
            s : 'пӗр-ик ҫеккунт',
            ss : '%d ҫеккунт',
            m : 'пӗр минут',
            mm : '%d минут',
            h : 'пӗр сехет',
            hh : '%d сехет',
            d : 'пӗр кун',
            dd : '%d кун',
            M : 'пӗр уйӑх',
            MM : '%d уйӑх',
            y : 'пӗр ҫул',
            yy : '%d ҫул'
        },
        dayOfMonthOrdinalParse: /\d{1,2}-мӗш/,
        ordinal : '%d-мӗш',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return cv;

})));


/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var cy = moment.defineLocale('cy', {
        months: 'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split('_'),
        monthsShort: 'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split('_'),
        weekdays: 'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split('_'),
        weekdaysShort: 'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'),
        weekdaysMin: 'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'),
        weekdaysParseExact : true,
        // time formats are the same as en-gb
        longDateFormat: {
            LT: 'HH:mm',
            LTS : 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[Heddiw am] LT',
            nextDay: '[Yfory am] LT',
            nextWeek: 'dddd [am] LT',
            lastDay: '[Ddoe am] LT',
            lastWeek: 'dddd [diwethaf am] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'mewn %s',
            past: '%s yn ôl',
            s: 'ychydig eiliadau',
            ss: '%d eiliad',
            m: 'munud',
            mm: '%d munud',
            h: 'awr',
            hh: '%d awr',
            d: 'diwrnod',
            dd: '%d diwrnod',
            M: 'mis',
            MM: '%d mis',
            y: 'blwyddyn',
            yy: '%d flynedd'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,
        // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh
        ordinal: function (number) {
            var b = number,
                output = '',
                lookup = [
                    '', 'af', 'il', 'ydd', 'ydd', 'ed', 'ed', 'ed', 'fed', 'fed', 'fed', // 1af to 10fed
                    'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'fed' // 11eg to 20fed
                ];
            if (b > 20) {
                if (b === 40 || b === 50 || b === 60 || b === 80 || b === 100) {
                    output = 'fed'; // not 30ain, 70ain or 90ain
                } else {
                    output = 'ain';
                }
            } else if (b > 0) {
                output = lookup[b];
            }
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return cy;

})));


/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var da = moment.defineLocale('da', {
        months : 'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split('_'),
        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
        weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
        weekdaysShort : 'søn_man_tir_ons_tor_fre_lør'.split('_'),
        weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY HH:mm',
            LLLL : 'dddd [d.] D. MMMM YYYY [kl.] HH:mm'
        },
        calendar : {
            sameDay : '[i dag kl.] LT',
            nextDay : '[i morgen kl.] LT',
            nextWeek : 'på dddd [kl.] LT',
            lastDay : '[i går kl.] LT',
            lastWeek : '[i] dddd[s kl.] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'om %s',
            past : '%s siden',
            s : 'få sekunder',
            ss : '%d sekunder',
            m : 'et minut',
            mm : '%d minutter',
            h : 'en time',
            hh : '%d timer',
            d : 'en dag',
            dd : '%d dage',
            M : 'en måned',
            MM : '%d måneder',
            y : 'et år',
            yy : '%d år'
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return da;

})));


/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            'm': ['eine Minute', 'einer Minute'],
            'h': ['eine Stunde', 'einer Stunde'],
            'd': ['ein Tag', 'einem Tag'],
            'dd': [number + ' Tage', number + ' Tagen'],
            'M': ['ein Monat', 'einem Monat'],
            'MM': [number + ' Monate', number + ' Monaten'],
            'y': ['ein Jahr', 'einem Jahr'],
            'yy': [number + ' Jahre', number + ' Jahren']
        };
        return withoutSuffix ? format[key][0] : format[key][1];
    }

    var de = moment.defineLocale('de', {
        months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
        monthsShort : 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
        monthsParseExact : true,
        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY HH:mm',
            LLLL : 'dddd, D. MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[heute um] LT [Uhr]',
            sameElse: 'L',
            nextDay: '[morgen um] LT [Uhr]',
            nextWeek: 'dddd [um] LT [Uhr]',
            lastDay: '[gestern um] LT [Uhr]',
            lastWeek: '[letzten] dddd [um] LT [Uhr]'
        },
        relativeTime : {
            future : 'in %s',
            past : 'vor %s',
            s : 'ein paar Sekunden',
            ss : '%d Sekunden',
            m : processRelativeTime,
            mm : '%d Minuten',
            h : processRelativeTime,
            hh : '%d Stunden',
            d : processRelativeTime,
            dd : processRelativeTime,
            M : processRelativeTime,
            MM : processRelativeTime,
            y : processRelativeTime,
            yy : processRelativeTime
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return de;

})));


/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            'm': ['eine Minute', 'einer Minute'],
            'h': ['eine Stunde', 'einer Stunde'],
            'd': ['ein Tag', 'einem Tag'],
            'dd': [number + ' Tage', number + ' Tagen'],
            'M': ['ein Monat', 'einem Monat'],
            'MM': [number + ' Monate', number + ' Monaten'],
            'y': ['ein Jahr', 'einem Jahr'],
            'yy': [number + ' Jahre', number + ' Jahren']
        };
        return withoutSuffix ? format[key][0] : format[key][1];
    }

    var deAt = moment.defineLocale('de-at', {
        months : 'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
        monthsShort : 'Jän._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
        monthsParseExact : true,
        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY HH:mm',
            LLLL : 'dddd, D. MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[heute um] LT [Uhr]',
            sameElse: 'L',
            nextDay: '[morgen um] LT [Uhr]',
            nextWeek: 'dddd [um] LT [Uhr]',
            lastDay: '[gestern um] LT [Uhr]',
            lastWeek: '[letzten] dddd [um] LT [Uhr]'
        },
        relativeTime : {
            future : 'in %s',
            past : 'vor %s',
            s : 'ein paar Sekunden',
            ss : '%d Sekunden',
            m : processRelativeTime,
            mm : '%d Minuten',
            h : processRelativeTime,
            hh : '%d Stunden',
            d : processRelativeTime,
            dd : processRelativeTime,
            M : processRelativeTime,
            MM : processRelativeTime,
            y : processRelativeTime,
            yy : processRelativeTime
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return deAt;

})));


/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            'm': ['eine Minute', 'einer Minute'],
            'h': ['eine Stunde', 'einer Stunde'],
            'd': ['ein Tag', 'einem Tag'],
            'dd': [number + ' Tage', number + ' Tagen'],
            'M': ['ein Monat', 'einem Monat'],
            'MM': [number + ' Monate', number + ' Monaten'],
            'y': ['ein Jahr', 'einem Jahr'],
            'yy': [number + ' Jahre', number + ' Jahren']
        };
        return withoutSuffix ? format[key][0] : format[key][1];
    }

    var deCh = moment.defineLocale('de-ch', {
        months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
        monthsShort : 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
        monthsParseExact : true,
        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
        weekdaysShort : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY HH:mm',
            LLLL : 'dddd, D. MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[heute um] LT [Uhr]',
            sameElse: 'L',
            nextDay: '[morgen um] LT [Uhr]',
            nextWeek: 'dddd [um] LT [Uhr]',
            lastDay: '[gestern um] LT [Uhr]',
            lastWeek: '[letzten] dddd [um] LT [Uhr]'
        },
        relativeTime : {
            future : 'in %s',
            past : 'vor %s',
            s : 'ein paar Sekunden',
            ss : '%d Sekunden',
            m : processRelativeTime,
            mm : '%d Minuten',
            h : processRelativeTime,
            hh : '%d Stunden',
            d : processRelativeTime,
            dd : processRelativeTime,
            M : processRelativeTime,
            MM : processRelativeTime,
            y : processRelativeTime,
            yy : processRelativeTime
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return deCh;

})));


/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var months = [
        'ޖެނުއަރީ',
        'ފެބްރުއަރީ',
        'މާރިޗު',
        'އޭޕްރީލު',
        'މޭ',
        'ޖޫން',
        'ޖުލައި',
        'އޯގަސްޓު',
        'ސެޕްޓެމްބަރު',
        'އޮކްޓޯބަރު',
        'ނޮވެމްބަރު',
        'ޑިސެމްބަރު'
    ], weekdays = [
        'އާދިއްތަ',
        'ހޯމަ',
        'އަންގާރަ',
        'ބުދަ',
        'ބުރާސްފަތި',
        'ހުކުރު',
        'ހޮނިހިރު'
    ];

    var dv = moment.defineLocale('dv', {
        months : months,
        monthsShort : months,
        weekdays : weekdays,
        weekdaysShort : weekdays,
        weekdaysMin : 'އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި'.split('_'),
        longDateFormat : {

            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'D/M/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        meridiemParse: /މކ|މފ/,
        isPM : function (input) {
            return 'މފ' === input;
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'މކ';
            } else {
                return 'މފ';
            }
        },
        calendar : {
            sameDay : '[މިއަދު] LT',
            nextDay : '[މާދަމާ] LT',
            nextWeek : 'dddd LT',
            lastDay : '[އިއްޔެ] LT',
            lastWeek : '[ފާއިތުވި] dddd LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'ތެރޭގައި %s',
            past : 'ކުރިން %s',
            s : 'ސިކުންތުކޮޅެއް',
            ss : 'd% ސިކުންތު',
            m : 'މިނިޓެއް',
            mm : 'މިނިޓު %d',
            h : 'ގަޑިއިރެއް',
            hh : 'ގަޑިއިރު %d',
            d : 'ދުވަހެއް',
            dd : 'ދުވަސް %d',
            M : 'މަހެއް',
            MM : 'މަސް %d',
            y : 'އަހަރެއް',
            yy : 'އަހަރު %d'
        },
        preparse: function (string) {
            return string.replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/,/g, '،');
        },
        week : {
            dow : 7,  // Sunday is the first day of the week.
            doy : 12  // The week that contains Jan 12th is the first week of the year.
        }
    });

    return dv;

})));


/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    function isFunction(input) {
        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
    }


    var el = moment.defineLocale('el', {
        monthsNominativeEl : 'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split('_'),
        monthsGenitiveEl : 'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split('_'),
        months : function (momentToFormat, format) {
            if (!momentToFormat) {
                return this._monthsNominativeEl;
            } else if (typeof format === 'string' && /D/.test(format.substring(0, format.indexOf('MMMM')))) { // if there is a day number before 'MMMM'
                return this._monthsGenitiveEl[momentToFormat.month()];
            } else {
                return this._monthsNominativeEl[momentToFormat.month()];
            }
        },
        monthsShort : 'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split('_'),
        weekdays : 'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split('_'),
        weekdaysShort : 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),
        weekdaysMin : 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),
        meridiem : function (hours, minutes, isLower) {
            if (hours > 11) {
                return isLower ? 'μμ' : 'ΜΜ';
            } else {
                return isLower ? 'πμ' : 'ΠΜ';
            }
        },
        isPM : function (input) {
            return ((input + '').toLowerCase()[0] === 'μ');
        },
        meridiemParse : /[ΠΜ]\.?Μ?\.?/i,
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY h:mm A',
            LLLL : 'dddd, D MMMM YYYY h:mm A'
        },
        calendarEl : {
            sameDay : '[Σήμερα {}] LT',
            nextDay : '[Αύριο {}] LT',
            nextWeek : 'dddd [{}] LT',
            lastDay : '[Χθες {}] LT',
            lastWeek : function () {
                switch (this.day()) {
                    case 6:
                        return '[το προηγούμενο] dddd [{}] LT';
                    default:
                        return '[την προηγούμενη] dddd [{}] LT';
                }
            },
            sameElse : 'L'
        },
        calendar : function (key, mom) {
            var output = this._calendarEl[key],
                hours = mom && mom.hours();
            if (isFunction(output)) {
                output = output.apply(mom);
            }
            return output.replace('{}', (hours % 12 === 1 ? 'στη' : 'στις'));
        },
        relativeTime : {
            future : 'σε %s',
            past : '%s πριν',
            s : 'λίγα δευτερόλεπτα',
            ss : '%d δευτερόλεπτα',
            m : 'ένα λεπτό',
            mm : '%d λεπτά',
            h : 'μία ώρα',
            hh : '%d ώρες',
            d : 'μία μέρα',
            dd : '%d μέρες',
            M : 'ένας μήνας',
            MM : '%d μήνες',
            y : 'ένας χρόνος',
            yy : '%d χρόνια'
        },
        dayOfMonthOrdinalParse: /\d{1,2}η/,
        ordinal: '%dη',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4st is the first week of the year.
        }
    });

    return el;

})));


/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var enSG = moment.defineLocale('en-SG', {
        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Today at] LT',
            nextDay : '[Tomorrow at] LT',
            nextWeek : 'dddd [at] LT',
            lastDay : '[Yesterday at] LT',
            lastWeek : '[Last] dddd [at] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'in %s',
            past : '%s ago',
            s : 'a few seconds',
            ss : '%d seconds',
            m : 'a minute',
            mm : '%d minutes',
            h : 'an hour',
            hh : '%d hours',
            d : 'a day',
            dd : '%d days',
            M : 'a month',
            MM : '%d months',
            y : 'a year',
            yy : '%d years'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return enSG;

})));


/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var enAu = moment.defineLocale('en-au', {
        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY h:mm A',
            LLLL : 'dddd, D MMMM YYYY h:mm A'
        },
        calendar : {
            sameDay : '[Today at] LT',
            nextDay : '[Tomorrow at] LT',
            nextWeek : 'dddd [at] LT',
            lastDay : '[Yesterday at] LT',
            lastWeek : '[Last] dddd [at] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'in %s',
            past : '%s ago',
            s : 'a few seconds',
            ss : '%d seconds',
            m : 'a minute',
            mm : '%d minutes',
            h : 'an hour',
            hh : '%d hours',
            d : 'a day',
            dd : '%d days',
            M : 'a month',
            MM : '%d months',
            y : 'a year',
            yy : '%d years'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return enAu;

})));


/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var enCa = moment.defineLocale('en-ca', {
        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'YYYY-MM-DD',
            LL : 'MMMM D, YYYY',
            LLL : 'MMMM D, YYYY h:mm A',
            LLLL : 'dddd, MMMM D, YYYY h:mm A'
        },
        calendar : {
            sameDay : '[Today at] LT',
            nextDay : '[Tomorrow at] LT',
            nextWeek : 'dddd [at] LT',
            lastDay : '[Yesterday at] LT',
            lastWeek : '[Last] dddd [at] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'in %s',
            past : '%s ago',
            s : 'a few seconds',
            ss : '%d seconds',
            m : 'a minute',
            mm : '%d minutes',
            h : 'an hour',
            hh : '%d hours',
            d : 'a day',
            dd : '%d days',
            M : 'a month',
            MM : '%d months',
            y : 'a year',
            yy : '%d years'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        }
    });

    return enCa;

})));


/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var enGb = moment.defineLocale('en-gb', {
        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Today at] LT',
            nextDay : '[Tomorrow at] LT',
            nextWeek : 'dddd [at] LT',
            lastDay : '[Yesterday at] LT',
            lastWeek : '[Last] dddd [at] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'in %s',
            past : '%s ago',
            s : 'a few seconds',
            ss : '%d seconds',
            m : 'a minute',
            mm : '%d minutes',
            h : 'an hour',
            hh : '%d hours',
            d : 'a day',
            dd : '%d days',
            M : 'a month',
            MM : '%d months',
            y : 'a year',
            yy : '%d years'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return enGb;

})));


/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var enIe = moment.defineLocale('en-ie', {
        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Today at] LT',
            nextDay : '[Tomorrow at] LT',
            nextWeek : 'dddd [at] LT',
            lastDay : '[Yesterday at] LT',
            lastWeek : '[Last] dddd [at] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'in %s',
            past : '%s ago',
            s : 'a few seconds',
            ss : '%d seconds',
            m : 'a minute',
            mm : '%d minutes',
            h : 'an hour',
            hh : '%d hours',
            d : 'a day',
            dd : '%d days',
            M : 'a month',
            MM : '%d months',
            y : 'a year',
            yy : '%d years'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return enIe;

})));


/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var enIl = moment.defineLocale('en-il', {
        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Today at] LT',
            nextDay : '[Tomorrow at] LT',
            nextWeek : 'dddd [at] LT',
            lastDay : '[Yesterday at] LT',
            lastWeek : '[Last] dddd [at] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'in %s',
            past : '%s ago',
            s : 'a few seconds',
            m : 'a minute',
            mm : '%d minutes',
            h : 'an hour',
            hh : '%d hours',
            d : 'a day',
            dd : '%d days',
            M : 'a month',
            MM : '%d months',
            y : 'a year',
            yy : '%d years'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        }
    });

    return enIl;

})));


/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var enNz = moment.defineLocale('en-nz', {
        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY h:mm A',
            LLLL : 'dddd, D MMMM YYYY h:mm A'
        },
        calendar : {
            sameDay : '[Today at] LT',
            nextDay : '[Tomorrow at] LT',
            nextWeek : 'dddd [at] LT',
            lastDay : '[Yesterday at] LT',
            lastWeek : '[Last] dddd [at] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'in %s',
            past : '%s ago',
            s : 'a few seconds',
            ss : '%d seconds',
            m : 'a minute',
            mm : '%d minutes',
            h : 'an hour',
            hh : '%d hours',
            d : 'a day',
            dd : '%d days',
            M : 'a month',
            MM : '%d months',
            y : 'a year',
            yy : '%d years'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return enNz;

})));


/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var eo = moment.defineLocale('eo', {
        months : 'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split('_'),
        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aŭg_sep_okt_nov_dec'.split('_'),
        weekdays : 'dimanĉo_lundo_mardo_merkredo_ĵaŭdo_vendredo_sabato'.split('_'),
        weekdaysShort : 'dim_lun_mard_merk_ĵaŭ_ven_sab'.split('_'),
        weekdaysMin : 'di_lu_ma_me_ĵa_ve_sa'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY-MM-DD',
            LL : 'D[-a de] MMMM, YYYY',
            LLL : 'D[-a de] MMMM, YYYY HH:mm',
            LLLL : 'dddd, [la] D[-a de] MMMM, YYYY HH:mm'
        },
        meridiemParse: /[ap]\.t\.m/i,
        isPM: function (input) {
            return input.charAt(0).toLowerCase() === 'p';
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours > 11) {
                return isLower ? 'p.t.m.' : 'P.T.M.';
            } else {
                return isLower ? 'a.t.m.' : 'A.T.M.';
            }
        },
        calendar : {
            sameDay : '[Hodiaŭ je] LT',
            nextDay : '[Morgaŭ je] LT',
            nextWeek : 'dddd [je] LT',
            lastDay : '[Hieraŭ je] LT',
            lastWeek : '[pasinta] dddd [je] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'post %s',
            past : 'antaŭ %s',
            s : 'sekundoj',
            ss : '%d sekundoj',
            m : 'minuto',
            mm : '%d minutoj',
            h : 'horo',
            hh : '%d horoj',
            d : 'tago',//ne 'diurno', ĉar estas uzita por proksimumo
            dd : '%d tagoj',
            M : 'monato',
            MM : '%d monatoj',
            y : 'jaro',
            yy : '%d jaroj'
        },
        dayOfMonthOrdinalParse: /\d{1,2}a/,
        ordinal : '%da',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return eo;

})));


/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),
        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');

    var monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];
    var monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;

    var es = moment.defineLocale('es', {
        months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
        monthsShort : function (m, format) {
            if (!m) {
                return monthsShortDot;
            } else if (/-MMM-/.test(format)) {
                return monthsShort[m.month()];
            } else {
                return monthsShortDot[m.month()];
            }
        },
        monthsRegex : monthsRegex,
        monthsShortRegex : monthsRegex,
        monthsStrictRegex : /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
        monthsShortStrictRegex : /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
        monthsParse : monthsParse,
        longMonthsParse : monthsParse,
        shortMonthsParse : monthsParse,
        weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
        weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
        weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D [de] MMMM [de] YYYY',
            LLL : 'D [de] MMMM [de] YYYY H:mm',
            LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'
        },
        calendar : {
            sameDay : function () {
                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            nextDay : function () {
                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            nextWeek : function () {
                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            lastDay : function () {
                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            lastWeek : function () {
                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'en %s',
            past : 'hace %s',
            s : 'unos segundos',
            ss : '%d segundos',
            m : 'un minuto',
            mm : '%d minutos',
            h : 'una hora',
            hh : '%d horas',
            d : 'un día',
            dd : '%d días',
            M : 'un mes',
            MM : '%d meses',
            y : 'un año',
            yy : '%d años'
        },
        dayOfMonthOrdinalParse : /\d{1,2}º/,
        ordinal : '%dº',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return es;

})));


/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),
        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');

    var monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];
    var monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;

    var esDo = moment.defineLocale('es-do', {
        months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
        monthsShort : function (m, format) {
            if (!m) {
                return monthsShortDot;
            } else if (/-MMM-/.test(format)) {
                return monthsShort[m.month()];
            } else {
                return monthsShortDot[m.month()];
            }
        },
        monthsRegex: monthsRegex,
        monthsShortRegex: monthsRegex,
        monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
        monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
        monthsParse: monthsParse,
        longMonthsParse: monthsParse,
        shortMonthsParse: monthsParse,
        weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
        weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
        weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'DD/MM/YYYY',
            LL : 'D [de] MMMM [de] YYYY',
            LLL : 'D [de] MMMM [de] YYYY h:mm A',
            LLLL : 'dddd, D [de] MMMM [de] YYYY h:mm A'
        },
        calendar : {
            sameDay : function () {
                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            nextDay : function () {
                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            nextWeek : function () {
                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            lastDay : function () {
                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            lastWeek : function () {
                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'en %s',
            past : 'hace %s',
            s : 'unos segundos',
            ss : '%d segundos',
            m : 'un minuto',
            mm : '%d minutos',
            h : 'una hora',
            hh : '%d horas',
            d : 'un día',
            dd : '%d días',
            M : 'un mes',
            MM : '%d meses',
            y : 'un año',
            yy : '%d años'
        },
        dayOfMonthOrdinalParse : /\d{1,2}º/,
        ordinal : '%dº',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return esDo;

})));


/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),
        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');

    var monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];
    var monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;

    var esUs = moment.defineLocale('es-us', {
        months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
        monthsShort : function (m, format) {
            if (!m) {
                return monthsShortDot;
            } else if (/-MMM-/.test(format)) {
                return monthsShort[m.month()];
            } else {
                return monthsShortDot[m.month()];
            }
        },
        monthsRegex: monthsRegex,
        monthsShortRegex: monthsRegex,
        monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
        monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
        monthsParse: monthsParse,
        longMonthsParse: monthsParse,
        shortMonthsParse: monthsParse,
        weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
        weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
        weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'MM/DD/YYYY',
            LL : 'D [de] MMMM [de] YYYY',
            LLL : 'D [de] MMMM [de] YYYY h:mm A',
            LLLL : 'dddd, D [de] MMMM [de] YYYY h:mm A'
        },
        calendar : {
            sameDay : function () {
                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            nextDay : function () {
                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            nextWeek : function () {
                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            lastDay : function () {
                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            lastWeek : function () {
                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'en %s',
            past : 'hace %s',
            s : 'unos segundos',
            ss : '%d segundos',
            m : 'un minuto',
            mm : '%d minutos',
            h : 'una hora',
            hh : '%d horas',
            d : 'un día',
            dd : '%d días',
            M : 'un mes',
            MM : '%d meses',
            y : 'un año',
            yy : '%d años'
        },
        dayOfMonthOrdinalParse : /\d{1,2}º/,
        ordinal : '%dº',
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 6th is the first week of the year.
        }
    });

    return esUs;

})));


/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            's' : ['mõne sekundi', 'mõni sekund', 'paar sekundit'],
            'ss': [number + 'sekundi', number + 'sekundit'],
            'm' : ['ühe minuti', 'üks minut'],
            'mm': [number + ' minuti', number + ' minutit'],
            'h' : ['ühe tunni', 'tund aega', 'üks tund'],
            'hh': [number + ' tunni', number + ' tundi'],
            'd' : ['ühe päeva', 'üks päev'],
            'M' : ['kuu aja', 'kuu aega', 'üks kuu'],
            'MM': [number + ' kuu', number + ' kuud'],
            'y' : ['ühe aasta', 'aasta', 'üks aasta'],
            'yy': [number + ' aasta', number + ' aastat']
        };
        if (withoutSuffix) {
            return format[key][2] ? format[key][2] : format[key][1];
        }
        return isFuture ? format[key][0] : format[key][1];
    }

    var et = moment.defineLocale('et', {
        months        : 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),
        monthsShort   : 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),
        weekdays      : 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),
        weekdaysShort : 'P_E_T_K_N_R_L'.split('_'),
        weekdaysMin   : 'P_E_T_K_N_R_L'.split('_'),
        longDateFormat : {
            LT   : 'H:mm',
            LTS : 'H:mm:ss',
            L    : 'DD.MM.YYYY',
            LL   : 'D. MMMM YYYY',
            LLL  : 'D. MMMM YYYY H:mm',
            LLLL : 'dddd, D. MMMM YYYY H:mm'
        },
        calendar : {
            sameDay  : '[Täna,] LT',
            nextDay  : '[Homme,] LT',
            nextWeek : '[Järgmine] dddd LT',
            lastDay  : '[Eile,] LT',
            lastWeek : '[Eelmine] dddd LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s pärast',
            past   : '%s tagasi',
            s      : processRelativeTime,
            ss     : processRelativeTime,
            m      : processRelativeTime,
            mm     : processRelativeTime,
            h      : processRelativeTime,
            hh     : processRelativeTime,
            d      : processRelativeTime,
            dd     : '%d päeva',
            M      : processRelativeTime,
            MM     : processRelativeTime,
            y      : processRelativeTime,
            yy     : processRelativeTime
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return et;

})));


/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var eu = moment.defineLocale('eu', {
        months : 'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split('_'),
        monthsShort : 'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split('_'),
        monthsParseExact : true,
        weekdays : 'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split('_'),
        weekdaysShort : 'ig._al._ar._az._og._ol._lr.'.split('_'),
        weekdaysMin : 'ig_al_ar_az_og_ol_lr'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY-MM-DD',
            LL : 'YYYY[ko] MMMM[ren] D[a]',
            LLL : 'YYYY[ko] MMMM[ren] D[a] HH:mm',
            LLLL : 'dddd, YYYY[ko] MMMM[ren] D[a] HH:mm',
            l : 'YYYY-M-D',
            ll : 'YYYY[ko] MMM D[a]',
            lll : 'YYYY[ko] MMM D[a] HH:mm',
            llll : 'ddd, YYYY[ko] MMM D[a] HH:mm'
        },
        calendar : {
            sameDay : '[gaur] LT[etan]',
            nextDay : '[bihar] LT[etan]',
            nextWeek : 'dddd LT[etan]',
            lastDay : '[atzo] LT[etan]',
            lastWeek : '[aurreko] dddd LT[etan]',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s barru',
            past : 'duela %s',
            s : 'segundo batzuk',
            ss : '%d segundo',
            m : 'minutu bat',
            mm : '%d minutu',
            h : 'ordu bat',
            hh : '%d ordu',
            d : 'egun bat',
            dd : '%d egun',
            M : 'hilabete bat',
            MM : '%d hilabete',
            y : 'urte bat',
            yy : '%d urte'
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return eu;

})));


/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '۱',
        '2': '۲',
        '3': '۳',
        '4': '۴',
        '5': '۵',
        '6': '۶',
        '7': '۷',
        '8': '۸',
        '9': '۹',
        '0': '۰'
    }, numberMap = {
        '۱': '1',
        '۲': '2',
        '۳': '3',
        '۴': '4',
        '۵': '5',
        '۶': '6',
        '۷': '7',
        '۸': '8',
        '۹': '9',
        '۰': '0'
    };

    var fa = moment.defineLocale('fa', {
        months : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
        monthsShort : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
        weekdays : 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split('_'),
        weekdaysShort : 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split('_'),
        weekdaysMin : 'ی_د_س_چ_پ_ج_ش'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        meridiemParse: /قبل از ظهر|بعد از ظهر/,
        isPM: function (input) {
            return /بعد از ظهر/.test(input);
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'قبل از ظهر';
            } else {
                return 'بعد از ظهر';
            }
        },
        calendar : {
            sameDay : '[امروز ساعت] LT',
            nextDay : '[فردا ساعت] LT',
            nextWeek : 'dddd [ساعت] LT',
            lastDay : '[دیروز ساعت] LT',
            lastWeek : 'dddd [پیش] [ساعت] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'در %s',
            past : '%s پیش',
            s : 'چند ثانیه',
            ss : 'ثانیه d%',
            m : 'یک دقیقه',
            mm : '%d دقیقه',
            h : 'یک ساعت',
            hh : '%d ساعت',
            d : 'یک روز',
            dd : '%d روز',
            M : 'یک ماه',
            MM : '%d ماه',
            y : 'یک سال',
            yy : '%d سال'
        },
        preparse: function (string) {
            return string.replace(/[۰-۹]/g, function (match) {
                return numberMap[match];
            }).replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            }).replace(/,/g, '،');
        },
        dayOfMonthOrdinalParse: /\d{1,2}م/,
        ordinal : '%dم',
        week : {
            dow : 6, // Saturday is the first day of the week.
            doy : 12 // The week that contains Jan 12th is the first week of the year.
        }
    });

    return fa;

})));


/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' '),
        numbersFuture = [
            'nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden',
            numbersPast[7], numbersPast[8], numbersPast[9]
        ];
    function translate(number, withoutSuffix, key, isFuture) {
        var result = '';
        switch (key) {
            case 's':
                return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';
            case 'ss':
                return isFuture ? 'sekunnin' : 'sekuntia';
            case 'm':
                return isFuture ? 'minuutin' : 'minuutti';
            case 'mm':
                result = isFuture ? 'minuutin' : 'minuuttia';
                break;
            case 'h':
                return isFuture ? 'tunnin' : 'tunti';
            case 'hh':
                result = isFuture ? 'tunnin' : 'tuntia';
                break;
            case 'd':
                return isFuture ? 'päivän' : 'päivä';
            case 'dd':
                result = isFuture ? 'päivän' : 'päivää';
                break;
            case 'M':
                return isFuture ? 'kuukauden' : 'kuukausi';
            case 'MM':
                result = isFuture ? 'kuukauden' : 'kuukautta';
                break;
            case 'y':
                return isFuture ? 'vuoden' : 'vuosi';
            case 'yy':
                result = isFuture ? 'vuoden' : 'vuotta';
                break;
        }
        result = verbalNumber(number, isFuture) + ' ' + result;
        return result;
    }
    function verbalNumber(number, isFuture) {
        return number < 10 ? (isFuture ? numbersFuture[number] : numbersPast[number]) : number;
    }

    var fi = moment.defineLocale('fi', {
        months : 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),
        monthsShort : 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),
        weekdays : 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),
        weekdaysShort : 'su_ma_ti_ke_to_pe_la'.split('_'),
        weekdaysMin : 'su_ma_ti_ke_to_pe_la'.split('_'),
        longDateFormat : {
            LT : 'HH.mm',
            LTS : 'HH.mm.ss',
            L : 'DD.MM.YYYY',
            LL : 'Do MMMM[ta] YYYY',
            LLL : 'Do MMMM[ta] YYYY, [klo] HH.mm',
            LLLL : 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',
            l : 'D.M.YYYY',
            ll : 'Do MMM YYYY',
            lll : 'Do MMM YYYY, [klo] HH.mm',
            llll : 'ddd, Do MMM YYYY, [klo] HH.mm'
        },
        calendar : {
            sameDay : '[tänään] [klo] LT',
            nextDay : '[huomenna] [klo] LT',
            nextWeek : 'dddd [klo] LT',
            lastDay : '[eilen] [klo] LT',
            lastWeek : '[viime] dddd[na] [klo] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s päästä',
            past : '%s sitten',
            s : translate,
            ss : translate,
            m : translate,
            mm : translate,
            h : translate,
            hh : translate,
            d : translate,
            dd : translate,
            M : translate,
            MM : translate,
            y : translate,
            yy : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return fi;

})));


/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var fo = moment.defineLocale('fo', {
        months : 'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
        weekdays : 'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split('_'),
        weekdaysShort : 'sun_mán_týs_mik_hós_frí_ley'.split('_'),
        weekdaysMin : 'su_má_tý_mi_hó_fr_le'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D. MMMM, YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Í dag kl.] LT',
            nextDay : '[Í morgin kl.] LT',
            nextWeek : 'dddd [kl.] LT',
            lastDay : '[Í gjár kl.] LT',
            lastWeek : '[síðstu] dddd [kl] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'um %s',
            past : '%s síðani',
            s : 'fá sekund',
            ss : '%d sekundir',
            m : 'ein minuttur',
            mm : '%d minuttir',
            h : 'ein tími',
            hh : '%d tímar',
            d : 'ein dagur',
            dd : '%d dagar',
            M : 'ein mánaður',
            MM : '%d mánaðir',
            y : 'eitt ár',
            yy : '%d ár'
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return fo;

})));


/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var fr = moment.defineLocale('fr', {
        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
        monthsParseExact : true,
        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
        weekdaysMin : 'di_lu_ma_me_je_ve_sa'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Aujourd’hui à] LT',
            nextDay : '[Demain à] LT',
            nextWeek : 'dddd [à] LT',
            lastDay : '[Hier à] LT',
            lastWeek : 'dddd [dernier à] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'dans %s',
            past : 'il y a %s',
            s : 'quelques secondes',
            ss : '%d secondes',
            m : 'une minute',
            mm : '%d minutes',
            h : 'une heure',
            hh : '%d heures',
            d : 'un jour',
            dd : '%d jours',
            M : 'un mois',
            MM : '%d mois',
            y : 'un an',
            yy : '%d ans'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(er|)/,
        ordinal : function (number, period) {
            switch (period) {
                // TODO: Return 'e' when day of month > 1. Move this case inside
                // block for masculine words below.
                // See https://github.com/moment/moment/issues/3375
                case 'D':
                    return number + (number === 1 ? 'er' : '');

                // Words with masculine grammatical gender: mois, trimestre, jour
                default:
                case 'M':
                case 'Q':
                case 'DDD':
                case 'd':
                    return number + (number === 1 ? 'er' : 'e');

                // Words with feminine grammatical gender: semaine
                case 'w':
                case 'W':
                    return number + (number === 1 ? 're' : 'e');
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return fr;

})));


/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var frCa = moment.defineLocale('fr-ca', {
        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
        monthsParseExact : true,
        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
        weekdaysMin : 'di_lu_ma_me_je_ve_sa'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY-MM-DD',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Aujourd’hui à] LT',
            nextDay : '[Demain à] LT',
            nextWeek : 'dddd [à] LT',
            lastDay : '[Hier à] LT',
            lastWeek : 'dddd [dernier à] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'dans %s',
            past : 'il y a %s',
            s : 'quelques secondes',
            ss : '%d secondes',
            m : 'une minute',
            mm : '%d minutes',
            h : 'une heure',
            hh : '%d heures',
            d : 'un jour',
            dd : '%d jours',
            M : 'un mois',
            MM : '%d mois',
            y : 'un an',
            yy : '%d ans'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
        ordinal : function (number, period) {
            switch (period) {
                // Words with masculine grammatical gender: mois, trimestre, jour
                default:
                case 'M':
                case 'Q':
                case 'D':
                case 'DDD':
                case 'd':
                    return number + (number === 1 ? 'er' : 'e');

                // Words with feminine grammatical gender: semaine
                case 'w':
                case 'W':
                    return number + (number === 1 ? 're' : 'e');
            }
        }
    });

    return frCa;

})));


/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var frCh = moment.defineLocale('fr-ch', {
        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
        monthsParseExact : true,
        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
        weekdaysMin : 'di_lu_ma_me_je_ve_sa'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Aujourd’hui à] LT',
            nextDay : '[Demain à] LT',
            nextWeek : 'dddd [à] LT',
            lastDay : '[Hier à] LT',
            lastWeek : 'dddd [dernier à] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'dans %s',
            past : 'il y a %s',
            s : 'quelques secondes',
            ss : '%d secondes',
            m : 'une minute',
            mm : '%d minutes',
            h : 'une heure',
            hh : '%d heures',
            d : 'un jour',
            dd : '%d jours',
            M : 'un mois',
            MM : '%d mois',
            y : 'un an',
            yy : '%d ans'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
        ordinal : function (number, period) {
            switch (period) {
                // Words with masculine grammatical gender: mois, trimestre, jour
                default:
                case 'M':
                case 'Q':
                case 'D':
                case 'DDD':
                case 'd':
                    return number + (number === 1 ? 'er' : 'e');

                // Words with feminine grammatical gender: semaine
                case 'w':
                case 'W':
                    return number + (number === 1 ? 're' : 'e');
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return frCh;

})));


/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var monthsShortWithDots = 'jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.'.split('_'),
        monthsShortWithoutDots = 'jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_');

    var fy = moment.defineLocale('fy', {
        months : 'jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber'.split('_'),
        monthsShort : function (m, format) {
            if (!m) {
                return monthsShortWithDots;
            } else if (/-MMM-/.test(format)) {
                return monthsShortWithoutDots[m.month()];
            } else {
                return monthsShortWithDots[m.month()];
            }
        },
        monthsParseExact : true,
        weekdays : 'snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon'.split('_'),
        weekdaysShort : 'si._mo._ti._wo._to._fr._so.'.split('_'),
        weekdaysMin : 'Si_Mo_Ti_Wo_To_Fr_So'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD-MM-YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[hjoed om] LT',
            nextDay: '[moarn om] LT',
            nextWeek: 'dddd [om] LT',
            lastDay: '[juster om] LT',
            lastWeek: '[ôfrûne] dddd [om] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'oer %s',
            past : '%s lyn',
            s : 'in pear sekonden',
            ss : '%d sekonden',
            m : 'ien minút',
            mm : '%d minuten',
            h : 'ien oere',
            hh : '%d oeren',
            d : 'ien dei',
            dd : '%d dagen',
            M : 'ien moanne',
            MM : '%d moannen',
            y : 'ien jier',
            yy : '%d jierren'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
        ordinal : function (number) {
            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return fy;

})));


/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';



    var months = [
        'Eanáir', 'Feabhra', 'Márta', 'Aibreán', 'Bealtaine', 'Méitheamh', 'Iúil', 'Lúnasa', 'Meán Fómhair', 'Deaireadh Fómhair', 'Samhain', 'Nollaig'
    ];

    var monthsShort = ['Eaná', 'Feab', 'Márt', 'Aibr', 'Beal', 'Méit', 'Iúil', 'Lúna', 'Meán', 'Deai', 'Samh', 'Noll'];

    var weekdays = ['Dé Domhnaigh', 'Dé Luain', 'Dé Máirt', 'Dé Céadaoin', 'Déardaoin', 'Dé hAoine', 'Dé Satharn'];

    var weekdaysShort = ['Dom', 'Lua', 'Mái', 'Céa', 'Déa', 'hAo', 'Sat'];

    var weekdaysMin = ['Do', 'Lu', 'Má', 'Ce', 'Dé', 'hA', 'Sa'];

    var ga = moment.defineLocale('ga', {
        months: months,
        monthsShort: monthsShort,
        monthsParseExact: true,
        weekdays: weekdays,
        weekdaysShort: weekdaysShort,
        weekdaysMin: weekdaysMin,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[Inniu ag] LT',
            nextDay: '[Amárach ag] LT',
            nextWeek: 'dddd [ag] LT',
            lastDay: '[Inné aig] LT',
            lastWeek: 'dddd [seo caite] [ag] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'i %s',
            past: '%s ó shin',
            s: 'cúpla soicind',
            ss: '%d soicind',
            m: 'nóiméad',
            mm: '%d nóiméad',
            h: 'uair an chloig',
            hh: '%d uair an chloig',
            d: 'lá',
            dd: '%d lá',
            M: 'mí',
            MM: '%d mí',
            y: 'bliain',
            yy: '%d bliain'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(d|na|mh)/,
        ordinal: function (number) {
            var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';
            return number + output;
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return ga;

})));


/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var months = [
        'Am Faoilleach', 'An Gearran', 'Am Màrt', 'An Giblean', 'An Cèitean', 'An t-Ògmhios', 'An t-Iuchar', 'An Lùnastal', 'An t-Sultain', 'An Dàmhair', 'An t-Samhain', 'An Dùbhlachd'
    ];

    var monthsShort = ['Faoi', 'Gear', 'Màrt', 'Gibl', 'Cèit', 'Ògmh', 'Iuch', 'Lùn', 'Sult', 'Dàmh', 'Samh', 'Dùbh'];

    var weekdays = ['Didòmhnaich', 'Diluain', 'Dimàirt', 'Diciadain', 'Diardaoin', 'Dihaoine', 'Disathairne'];

    var weekdaysShort = ['Did', 'Dil', 'Dim', 'Dic', 'Dia', 'Dih', 'Dis'];

    var weekdaysMin = ['Dò', 'Lu', 'Mà', 'Ci', 'Ar', 'Ha', 'Sa'];

    var gd = moment.defineLocale('gd', {
        months : months,
        monthsShort : monthsShort,
        monthsParseExact : true,
        weekdays : weekdays,
        weekdaysShort : weekdaysShort,
        weekdaysMin : weekdaysMin,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[An-diugh aig] LT',
            nextDay : '[A-màireach aig] LT',
            nextWeek : 'dddd [aig] LT',
            lastDay : '[An-dè aig] LT',
            lastWeek : 'dddd [seo chaidh] [aig] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'ann an %s',
            past : 'bho chionn %s',
            s : 'beagan diogan',
            ss : '%d diogan',
            m : 'mionaid',
            mm : '%d mionaidean',
            h : 'uair',
            hh : '%d uairean',
            d : 'latha',
            dd : '%d latha',
            M : 'mìos',
            MM : '%d mìosan',
            y : 'bliadhna',
            yy : '%d bliadhna'
        },
        dayOfMonthOrdinalParse : /\d{1,2}(d|na|mh)/,
        ordinal : function (number) {
            var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return gd;

})));


/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var gl = moment.defineLocale('gl', {
        months : 'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split('_'),
        monthsShort : 'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split('_'),
        monthsParseExact: true,
        weekdays : 'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'),
        weekdaysShort : 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),
        weekdaysMin : 'do_lu_ma_mé_xo_ve_sá'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D [de] MMMM [de] YYYY',
            LLL : 'D [de] MMMM [de] YYYY H:mm',
            LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'
        },
        calendar : {
            sameDay : function () {
                return '[hoxe ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';
            },
            nextDay : function () {
                return '[mañá ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';
            },
            nextWeek : function () {
                return 'dddd [' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';
            },
            lastDay : function () {
                return '[onte ' + ((this.hours() !== 1) ? 'á' : 'a') + '] LT';
            },
            lastWeek : function () {
                return '[o] dddd [pasado ' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : function (str) {
                if (str.indexOf('un') === 0) {
                    return 'n' + str;
                }
                return 'en ' + str;
            },
            past : 'hai %s',
            s : 'uns segundos',
            ss : '%d segundos',
            m : 'un minuto',
            mm : '%d minutos',
            h : 'unha hora',
            hh : '%d horas',
            d : 'un día',
            dd : '%d días',
            M : 'un mes',
            MM : '%d meses',
            y : 'un ano',
            yy : '%d anos'
        },
        dayOfMonthOrdinalParse : /\d{1,2}º/,
        ordinal : '%dº',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return gl;

})));


/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            's': ['thodde secondanim', 'thodde second'],
            'ss': [number + ' secondanim', number + ' second'],
            'm': ['eka mintan', 'ek minute'],
            'mm': [number + ' mintanim', number + ' mintam'],
            'h': ['eka voran', 'ek vor'],
            'hh': [number + ' voranim', number + ' voram'],
            'd': ['eka disan', 'ek dis'],
            'dd': [number + ' disanim', number + ' dis'],
            'M': ['eka mhoinean', 'ek mhoino'],
            'MM': [number + ' mhoineanim', number + ' mhoine'],
            'y': ['eka vorsan', 'ek voros'],
            'yy': [number + ' vorsanim', number + ' vorsam']
        };
        return withoutSuffix ? format[key][0] : format[key][1];
    }

    var gomLatn = moment.defineLocale('gom-latn', {
        months : 'Janer_Febrer_Mars_Abril_Mai_Jun_Julai_Agost_Setembr_Otubr_Novembr_Dezembr'.split('_'),
        monthsShort : 'Jan._Feb._Mars_Abr._Mai_Jun_Jul._Ago._Set._Otu._Nov._Dez.'.split('_'),
        monthsParseExact : true,
        weekdays : 'Aitar_Somar_Mongllar_Budvar_Brestar_Sukrar_Son\'var'.split('_'),
        weekdaysShort : 'Ait._Som._Mon._Bud._Bre._Suk._Son.'.split('_'),
        weekdaysMin : 'Ai_Sm_Mo_Bu_Br_Su_Sn'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'A h:mm [vazta]',
            LTS : 'A h:mm:ss [vazta]',
            L : 'DD-MM-YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY A h:mm [vazta]',
            LLLL : 'dddd, MMMM[achea] Do, YYYY, A h:mm [vazta]',
            llll: 'ddd, D MMM YYYY, A h:mm [vazta]'
        },
        calendar : {
            sameDay: '[Aiz] LT',
            nextDay: '[Faleam] LT',
            nextWeek: '[Ieta to] dddd[,] LT',
            lastDay: '[Kal] LT',
            lastWeek: '[Fatlo] dddd[,] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : '%s',
            past : '%s adim',
            s : processRelativeTime,
            ss : processRelativeTime,
            m : processRelativeTime,
            mm : processRelativeTime,
            h : processRelativeTime,
            hh : processRelativeTime,
            d : processRelativeTime,
            dd : processRelativeTime,
            M : processRelativeTime,
            MM : processRelativeTime,
            y : processRelativeTime,
            yy : processRelativeTime
        },
        dayOfMonthOrdinalParse : /\d{1,2}(er)/,
        ordinal : function (number, period) {
            switch (period) {
                // the ordinal 'er' only applies to day of the month
                case 'D':
                    return number + 'er';
                default:
                case 'M':
                case 'Q':
                case 'DDD':
                case 'd':
                case 'w':
                case 'W':
                    return number;
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        },
        meridiemParse: /rati|sokalli|donparam|sanje/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'rati') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'sokalli') {
                return hour;
            } else if (meridiem === 'donparam') {
                return hour > 12 ? hour : hour + 12;
            } else if (meridiem === 'sanje') {
                return hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'rati';
            } else if (hour < 12) {
                return 'sokalli';
            } else if (hour < 16) {
                return 'donparam';
            } else if (hour < 20) {
                return 'sanje';
            } else {
                return 'rati';
            }
        }
    });

    return gomLatn;

})));


/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
            '1': '૧',
            '2': '૨',
            '3': '૩',
            '4': '૪',
            '5': '૫',
            '6': '૬',
            '7': '૭',
            '8': '૮',
            '9': '૯',
            '0': '૦'
        },
        numberMap = {
            '૧': '1',
            '૨': '2',
            '૩': '3',
            '૪': '4',
            '૫': '5',
            '૬': '6',
            '૭': '7',
            '૮': '8',
            '૯': '9',
            '૦': '0'
        };

    var gu = moment.defineLocale('gu', {
        months: 'જાન્યુઆરી_ફેબ્રુઆરી_માર્ચ_એપ્રિલ_મે_જૂન_જુલાઈ_ઑગસ્ટ_સપ્ટેમ્બર_ઑક્ટ્બર_નવેમ્બર_ડિસેમ્બર'.split('_'),
        monthsShort: 'જાન્યુ._ફેબ્રુ._માર્ચ_એપ્રિ._મે_જૂન_જુલા._ઑગ._સપ્ટે._ઑક્ટ્._નવે._ડિસે.'.split('_'),
        monthsParseExact: true,
        weekdays: 'રવિવાર_સોમવાર_મંગળવાર_બુધ્વાર_ગુરુવાર_શુક્રવાર_શનિવાર'.split('_'),
        weekdaysShort: 'રવિ_સોમ_મંગળ_બુધ્_ગુરુ_શુક્ર_શનિ'.split('_'),
        weekdaysMin: 'ર_સો_મં_બુ_ગુ_શુ_શ'.split('_'),
        longDateFormat: {
            LT: 'A h:mm વાગ્યે',
            LTS: 'A h:mm:ss વાગ્યે',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm વાગ્યે',
            LLLL: 'dddd, D MMMM YYYY, A h:mm વાગ્યે'
        },
        calendar: {
            sameDay: '[આજ] LT',
            nextDay: '[કાલે] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[ગઇકાલે] LT',
            lastWeek: '[પાછલા] dddd, LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: '%s મા',
            past: '%s પેહલા',
            s: 'અમુક પળો',
            ss: '%d સેકંડ',
            m: 'એક મિનિટ',
            mm: '%d મિનિટ',
            h: 'એક કલાક',
            hh: '%d કલાક',
            d: 'એક દિવસ',
            dd: '%d દિવસ',
            M: 'એક મહિનો',
            MM: '%d મહિનો',
            y: 'એક વર્ષ',
            yy: '%d વર્ષ'
        },
        preparse: function (string) {
            return string.replace(/[૧૨૩૪૫૬૭૮૯૦]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        // Gujarati notation for meridiems are quite fuzzy in practice. While there exists
        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Gujarati.
        meridiemParse: /રાત|બપોર|સવાર|સાંજ/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'રાત') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'સવાર') {
                return hour;
            } else if (meridiem === 'બપોર') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'સાંજ') {
                return hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
                return 'રાત';
            } else if (hour < 10) {
                return 'સવાર';
            } else if (hour < 17) {
                return 'બપોર';
            } else if (hour < 20) {
                return 'સાંજ';
            } else {
                return 'રાત';
            }
        },
        week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6 // The week that contains Jan 6th is the first week of the year.
        }
    });

    return gu;

})));


/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var he = moment.defineLocale('he', {
        months : 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),
        monthsShort : 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),
        weekdays : 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),
        weekdaysShort : 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),
        weekdaysMin : 'א_ב_ג_ד_ה_ו_ש'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D [ב]MMMM YYYY',
            LLL : 'D [ב]MMMM YYYY HH:mm',
            LLLL : 'dddd, D [ב]MMMM YYYY HH:mm',
            l : 'D/M/YYYY',
            ll : 'D MMM YYYY',
            lll : 'D MMM YYYY HH:mm',
            llll : 'ddd, D MMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[היום ב־]LT',
            nextDay : '[מחר ב־]LT',
            nextWeek : 'dddd [בשעה] LT',
            lastDay : '[אתמול ב־]LT',
            lastWeek : '[ביום] dddd [האחרון בשעה] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'בעוד %s',
            past : 'לפני %s',
            s : 'מספר שניות',
            ss : '%d שניות',
            m : 'דקה',
            mm : '%d דקות',
            h : 'שעה',
            hh : function (number) {
                if (number === 2) {
                    return 'שעתיים';
                }
                return number + ' שעות';
            },
            d : 'יום',
            dd : function (number) {
                if (number === 2) {
                    return 'יומיים';
                }
                return number + ' ימים';
            },
            M : 'חודש',
            MM : function (number) {
                if (number === 2) {
                    return 'חודשיים';
                }
                return number + ' חודשים';
            },
            y : 'שנה',
            yy : function (number) {
                if (number === 2) {
                    return 'שנתיים';
                } else if (number % 10 === 0 && number !== 10) {
                    return number + ' שנה';
                }
                return number + ' שנים';
            }
        },
        meridiemParse: /אחה"צ|לפנה"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,
        isPM : function (input) {
            return /^(אחה"צ|אחרי הצהריים|בערב)$/.test(input);
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 5) {
                return 'לפנות בוקר';
            } else if (hour < 10) {
                return 'בבוקר';
            } else if (hour < 12) {
                return isLower ? 'לפנה"צ' : 'לפני הצהריים';
            } else if (hour < 18) {
                return isLower ? 'אחה"צ' : 'אחרי הצהריים';
            } else {
                return 'בערב';
            }
        }
    });

    return he;

})));


/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '१',
        '2': '२',
        '3': '३',
        '4': '४',
        '5': '५',
        '6': '६',
        '7': '७',
        '8': '८',
        '9': '९',
        '0': '०'
    },
    numberMap = {
        '१': '1',
        '२': '2',
        '३': '3',
        '४': '4',
        '५': '5',
        '६': '6',
        '७': '7',
        '८': '8',
        '९': '9',
        '०': '0'
    };

    var hi = moment.defineLocale('hi', {
        months : 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),
        monthsShort : 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),
        monthsParseExact: true,
        weekdays : 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
        weekdaysShort : 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),
        weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),
        longDateFormat : {
            LT : 'A h:mm बजे',
            LTS : 'A h:mm:ss बजे',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, A h:mm बजे',
            LLLL : 'dddd, D MMMM YYYY, A h:mm बजे'
        },
        calendar : {
            sameDay : '[आज] LT',
            nextDay : '[कल] LT',
            nextWeek : 'dddd, LT',
            lastDay : '[कल] LT',
            lastWeek : '[पिछले] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s में',
            past : '%s पहले',
            s : 'कुछ ही क्षण',
            ss : '%d सेकंड',
            m : 'एक मिनट',
            mm : '%d मिनट',
            h : 'एक घंटा',
            hh : '%d घंटे',
            d : 'एक दिन',
            dd : '%d दिन',
            M : 'एक महीने',
            MM : '%d महीने',
            y : 'एक वर्ष',
            yy : '%d वर्ष'
        },
        preparse: function (string) {
            return string.replace(/[१२३४५६७८९०]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        // Hindi notation for meridiems are quite fuzzy in practice. While there exists
        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.
        meridiemParse: /रात|सुबह|दोपहर|शाम/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'रात') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'सुबह') {
                return hour;
            } else if (meridiem === 'दोपहर') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'शाम') {
                return hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'रात';
            } else if (hour < 10) {
                return 'सुबह';
            } else if (hour < 17) {
                return 'दोपहर';
            } else if (hour < 20) {
                return 'शाम';
            } else {
                return 'रात';
            }
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 6th is the first week of the year.
        }
    });

    return hi;

})));


/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function translate(number, withoutSuffix, key) {
        var result = number + ' ';
        switch (key) {
            case 'ss':
                if (number === 1) {
                    result += 'sekunda';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'sekunde';
                } else {
                    result += 'sekundi';
                }
                return result;
            case 'm':
                return withoutSuffix ? 'jedna minuta' : 'jedne minute';
            case 'mm':
                if (number === 1) {
                    result += 'minuta';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'minute';
                } else {
                    result += 'minuta';
                }
                return result;
            case 'h':
                return withoutSuffix ? 'jedan sat' : 'jednog sata';
            case 'hh':
                if (number === 1) {
                    result += 'sat';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'sata';
                } else {
                    result += 'sati';
                }
                return result;
            case 'dd':
                if (number === 1) {
                    result += 'dan';
                } else {
                    result += 'dana';
                }
                return result;
            case 'MM':
                if (number === 1) {
                    result += 'mjesec';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'mjeseca';
                } else {
                    result += 'mjeseci';
                }
                return result;
            case 'yy':
                if (number === 1) {
                    result += 'godina';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'godine';
                } else {
                    result += 'godina';
                }
                return result;
        }
    }

    var hr = moment.defineLocale('hr', {
        months : {
            format: 'siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca'.split('_'),
            standalone: 'siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split('_')
        },
        monthsShort : 'sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split('_'),
        monthsParseExact: true,
        weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
        weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
        weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY H:mm',
            LLLL : 'dddd, D. MMMM YYYY H:mm'
        },
        calendar : {
            sameDay  : '[danas u] LT',
            nextDay  : '[sutra u] LT',
            nextWeek : function () {
                switch (this.day()) {
                    case 0:
                        return '[u] [nedjelju] [u] LT';
                    case 3:
                        return '[u] [srijedu] [u] LT';
                    case 6:
                        return '[u] [subotu] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[u] dddd [u] LT';
                }
            },
            lastDay  : '[jučer u] LT',
            lastWeek : function () {
                switch (this.day()) {
                    case 0:
                    case 3:
                        return '[prošlu] dddd [u] LT';
                    case 6:
                        return '[prošle] [subote] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[prošli] dddd [u] LT';
                }
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'za %s',
            past   : 'prije %s',
            s      : 'par sekundi',
            ss     : translate,
            m      : translate,
            mm     : translate,
            h      : translate,
            hh     : translate,
            d      : 'dan',
            dd     : translate,
            M      : 'mjesec',
            MM     : translate,
            y      : 'godinu',
            yy     : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return hr;

})));


/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');
    function translate(number, withoutSuffix, key, isFuture) {
        var num = number;
        switch (key) {
            case 's':
                return (isFuture || withoutSuffix) ? 'néhány másodperc' : 'néhány másodperce';
            case 'ss':
                return num + (isFuture || withoutSuffix) ? ' másodperc' : ' másodperce';
            case 'm':
                return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');
            case 'mm':
                return num + (isFuture || withoutSuffix ? ' perc' : ' perce');
            case 'h':
                return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');
            case 'hh':
                return num + (isFuture || withoutSuffix ? ' óra' : ' órája');
            case 'd':
                return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');
            case 'dd':
                return num + (isFuture || withoutSuffix ? ' nap' : ' napja');
            case 'M':
                return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
            case 'MM':
                return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
            case 'y':
                return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');
            case 'yy':
                return num + (isFuture || withoutSuffix ? ' év' : ' éve');
        }
        return '';
    }
    function week(isFuture) {
        return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[this.day()] + '] LT[-kor]';
    }

    var hu = moment.defineLocale('hu', {
        months : 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),
        monthsShort : 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'),
        weekdays : 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),
        weekdaysShort : 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),
        weekdaysMin : 'v_h_k_sze_cs_p_szo'.split('_'),
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'YYYY.MM.DD.',
            LL : 'YYYY. MMMM D.',
            LLL : 'YYYY. MMMM D. H:mm',
            LLLL : 'YYYY. MMMM D., dddd H:mm'
        },
        meridiemParse: /de|du/i,
        isPM: function (input) {
            return input.charAt(1).toLowerCase() === 'u';
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours < 12) {
                return isLower === true ? 'de' : 'DE';
            } else {
                return isLower === true ? 'du' : 'DU';
            }
        },
        calendar : {
            sameDay : '[ma] LT[-kor]',
            nextDay : '[holnap] LT[-kor]',
            nextWeek : function () {
                return week.call(this, true);
            },
            lastDay : '[tegnap] LT[-kor]',
            lastWeek : function () {
                return week.call(this, false);
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s múlva',
            past : '%s',
            s : translate,
            ss : translate,
            m : translate,
            mm : translate,
            h : translate,
            hh : translate,
            d : translate,
            dd : translate,
            M : translate,
            MM : translate,
            y : translate,
            yy : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return hu;

})));


/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var hyAm = moment.defineLocale('hy-am', {
        months : {
            format: 'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split('_'),
            standalone: 'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split('_')
        },
        monthsShort : 'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_'),
        weekdays : 'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split('_'),
        weekdaysShort : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
        weekdaysMin : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY թ.',
            LLL : 'D MMMM YYYY թ., HH:mm',
            LLLL : 'dddd, D MMMM YYYY թ., HH:mm'
        },
        calendar : {
            sameDay: '[այսօր] LT',
            nextDay: '[վաղը] LT',
            lastDay: '[երեկ] LT',
            nextWeek: function () {
                return 'dddd [օրը ժամը] LT';
            },
            lastWeek: function () {
                return '[անցած] dddd [օրը ժամը] LT';
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : '%s հետո',
            past : '%s առաջ',
            s : 'մի քանի վայրկյան',
            ss : '%d վայրկյան',
            m : 'րոպե',
            mm : '%d րոպե',
            h : 'ժամ',
            hh : '%d ժամ',
            d : 'օր',
            dd : '%d օր',
            M : 'ամիս',
            MM : '%d ամիս',
            y : 'տարի',
            yy : '%d տարի'
        },
        meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,
        isPM: function (input) {
            return /^(ցերեկվա|երեկոյան)$/.test(input);
        },
        meridiem : function (hour) {
            if (hour < 4) {
                return 'գիշերվա';
            } else if (hour < 12) {
                return 'առավոտվա';
            } else if (hour < 17) {
                return 'ցերեկվա';
            } else {
                return 'երեկոյան';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}|\d{1,2}-(ին|րդ)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'DDD':
                case 'w':
                case 'W':
                case 'DDDo':
                    if (number === 1) {
                        return number + '-ին';
                    }
                    return number + '-րդ';
                default:
                    return number;
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return hyAm;

})));


/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var id = moment.defineLocale('id', {
        months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Agt_Sep_Okt_Nov_Des'.split('_'),
        weekdays : 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),
        weekdaysShort : 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),
        weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),
        longDateFormat : {
            LT : 'HH.mm',
            LTS : 'HH.mm.ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY [pukul] HH.mm',
            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
        },
        meridiemParse: /pagi|siang|sore|malam/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'pagi') {
                return hour;
            } else if (meridiem === 'siang') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'sore' || meridiem === 'malam') {
                return hour + 12;
            }
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours < 11) {
                return 'pagi';
            } else if (hours < 15) {
                return 'siang';
            } else if (hours < 19) {
                return 'sore';
            } else {
                return 'malam';
            }
        },
        calendar : {
            sameDay : '[Hari ini pukul] LT',
            nextDay : '[Besok pukul] LT',
            nextWeek : 'dddd [pukul] LT',
            lastDay : '[Kemarin pukul] LT',
            lastWeek : 'dddd [lalu pukul] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'dalam %s',
            past : '%s yang lalu',
            s : 'beberapa detik',
            ss : '%d detik',
            m : 'semenit',
            mm : '%d menit',
            h : 'sejam',
            hh : '%d jam',
            d : 'sehari',
            dd : '%d hari',
            M : 'sebulan',
            MM : '%d bulan',
            y : 'setahun',
            yy : '%d tahun'
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return id;

})));


/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function plural(n) {
        if (n % 100 === 11) {
            return true;
        } else if (n % 10 === 1) {
            return false;
        }
        return true;
    }
    function translate(number, withoutSuffix, key, isFuture) {
        var result = number + ' ';
        switch (key) {
            case 's':
                return withoutSuffix || isFuture ? 'nokkrar sekúndur' : 'nokkrum sekúndum';
            case 'ss':
                if (plural(number)) {
                    return result + (withoutSuffix || isFuture ? 'sekúndur' : 'sekúndum');
                }
                return result + 'sekúnda';
            case 'm':
                return withoutSuffix ? 'mínúta' : 'mínútu';
            case 'mm':
                if (plural(number)) {
                    return result + (withoutSuffix || isFuture ? 'mínútur' : 'mínútum');
                } else if (withoutSuffix) {
                    return result + 'mínúta';
                }
                return result + 'mínútu';
            case 'hh':
                if (plural(number)) {
                    return result + (withoutSuffix || isFuture ? 'klukkustundir' : 'klukkustundum');
                }
                return result + 'klukkustund';
            case 'd':
                if (withoutSuffix) {
                    return 'dagur';
                }
                return isFuture ? 'dag' : 'degi';
            case 'dd':
                if (plural(number)) {
                    if (withoutSuffix) {
                        return result + 'dagar';
                    }
                    return result + (isFuture ? 'daga' : 'dögum');
                } else if (withoutSuffix) {
                    return result + 'dagur';
                }
                return result + (isFuture ? 'dag' : 'degi');
            case 'M':
                if (withoutSuffix) {
                    return 'mánuður';
                }
                return isFuture ? 'mánuð' : 'mánuði';
            case 'MM':
                if (plural(number)) {
                    if (withoutSuffix) {
                        return result + 'mánuðir';
                    }
                    return result + (isFuture ? 'mánuði' : 'mánuðum');
                } else if (withoutSuffix) {
                    return result + 'mánuður';
                }
                return result + (isFuture ? 'mánuð' : 'mánuði');
            case 'y':
                return withoutSuffix || isFuture ? 'ár' : 'ári';
            case 'yy':
                if (plural(number)) {
                    return result + (withoutSuffix || isFuture ? 'ár' : 'árum');
                }
                return result + (withoutSuffix || isFuture ? 'ár' : 'ári');
        }
    }

    var is = moment.defineLocale('is', {
        months : 'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split('_'),
        monthsShort : 'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split('_'),
        weekdays : 'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split('_'),
        weekdaysShort : 'sun_mán_þri_mið_fim_fös_lau'.split('_'),
        weekdaysMin : 'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'),
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY [kl.] H:mm',
            LLLL : 'dddd, D. MMMM YYYY [kl.] H:mm'
        },
        calendar : {
            sameDay : '[í dag kl.] LT',
            nextDay : '[á morgun kl.] LT',
            nextWeek : 'dddd [kl.] LT',
            lastDay : '[í gær kl.] LT',
            lastWeek : '[síðasta] dddd [kl.] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'eftir %s',
            past : 'fyrir %s síðan',
            s : translate,
            ss : translate,
            m : translate,
            mm : translate,
            h : 'klukkustund',
            hh : translate,
            d : translate,
            dd : translate,
            M : translate,
            MM : translate,
            y : translate,
            yy : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return is;

})));


/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var it = moment.defineLocale('it', {
        months : 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),
        monthsShort : 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),
        weekdays : 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),
        weekdaysShort : 'dom_lun_mar_mer_gio_ven_sab'.split('_'),
        weekdaysMin : 'do_lu_ma_me_gi_ve_sa'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[Oggi alle] LT',
            nextDay: '[Domani alle] LT',
            nextWeek: 'dddd [alle] LT',
            lastDay: '[Ieri alle] LT',
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[la scorsa] dddd [alle] LT';
                    default:
                        return '[lo scorso] dddd [alle] LT';
                }
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : function (s) {
                return ((/^[0-9].+$/).test(s) ? 'tra' : 'in') + ' ' + s;
            },
            past : '%s fa',
            s : 'alcuni secondi',
            ss : '%d secondi',
            m : 'un minuto',
            mm : '%d minuti',
            h : 'un\'ora',
            hh : '%d ore',
            d : 'un giorno',
            dd : '%d giorni',
            M : 'un mese',
            MM : '%d mesi',
            y : 'un anno',
            yy : '%d anni'
        },
        dayOfMonthOrdinalParse : /\d{1,2}º/,
        ordinal: '%dº',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return it;

})));


/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var itCh = moment.defineLocale('it-ch', {
        months : 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),
        monthsShort : 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),
        weekdays : 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),
        weekdaysShort : 'dom_lun_mar_mer_gio_ven_sab'.split('_'),
        weekdaysMin : 'do_lu_ma_me_gi_ve_sa'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[Oggi alle] LT',
            nextDay: '[Domani alle] LT',
            nextWeek: 'dddd [alle] LT',
            lastDay: '[Ieri alle] LT',
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[la scorsa] dddd [alle] LT';
                    default:
                        return '[lo scorso] dddd [alle] LT';
                }
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : function (s) {
                return ((/^[0-9].+$/).test(s) ? 'tra' : 'in') + ' ' + s;
            },
            past : '%s fa',
            s : 'alcuni secondi',
            ss : '%d secondi',
            m : 'un minuto',
            mm : '%d minuti',
            h : 'un\'ora',
            hh : '%d ore',
            d : 'un giorno',
            dd : '%d giorni',
            M : 'un mese',
            MM : '%d mesi',
            y : 'un anno',
            yy : '%d anni'
        },
        dayOfMonthOrdinalParse : /\d{1,2}º/,
        ordinal: '%dº',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return itCh;

})));


/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var ja = moment.defineLocale('ja', {
        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
        weekdays : '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),
        weekdaysShort : '日_月_火_水_木_金_土'.split('_'),
        weekdaysMin : '日_月_火_水_木_金_土'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY/MM/DD',
            LL : 'YYYY年M月D日',
            LLL : 'YYYY年M月D日 HH:mm',
            LLLL : 'YYYY年M月D日 dddd HH:mm',
            l : 'YYYY/MM/DD',
            ll : 'YYYY年M月D日',
            lll : 'YYYY年M月D日 HH:mm',
            llll : 'YYYY年M月D日(ddd) HH:mm'
        },
        meridiemParse: /午前|午後/i,
        isPM : function (input) {
            return input === '午後';
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return '午前';
            } else {
                return '午後';
            }
        },
        calendar : {
            sameDay : '[今日] LT',
            nextDay : '[明日] LT',
            nextWeek : function (now) {
                if (now.week() < this.week()) {
                    return '[来週]dddd LT';
                } else {
                    return 'dddd LT';
                }
            },
            lastDay : '[昨日] LT',
            lastWeek : function (now) {
                if (this.week() < now.week()) {
                    return '[先週]dddd LT';
                } else {
                    return 'dddd LT';
                }
            },
            sameElse : 'L'
        },
        dayOfMonthOrdinalParse : /\d{1,2}日/,
        ordinal : function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                    return number + '日';
                default:
                    return number;
            }
        },
        relativeTime : {
            future : '%s後',
            past : '%s前',
            s : '数秒',
            ss : '%d秒',
            m : '1分',
            mm : '%d分',
            h : '1時間',
            hh : '%d時間',
            d : '1日',
            dd : '%d日',
            M : '1ヶ月',
            MM : '%dヶ月',
            y : '1年',
            yy : '%d年'
        }
    });

    return ja;

})));


/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var jv = moment.defineLocale('jv', {
        months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember'.split('_'),
        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des'.split('_'),
        weekdays : 'Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu'.split('_'),
        weekdaysShort : 'Min_Sen_Sel_Reb_Kem_Jem_Sep'.split('_'),
        weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sp'.split('_'),
        longDateFormat : {
            LT : 'HH.mm',
            LTS : 'HH.mm.ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY [pukul] HH.mm',
            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
        },
        meridiemParse: /enjing|siyang|sonten|ndalu/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'enjing') {
                return hour;
            } else if (meridiem === 'siyang') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'sonten' || meridiem === 'ndalu') {
                return hour + 12;
            }
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours < 11) {
                return 'enjing';
            } else if (hours < 15) {
                return 'siyang';
            } else if (hours < 19) {
                return 'sonten';
            } else {
                return 'ndalu';
            }
        },
        calendar : {
            sameDay : '[Dinten puniko pukul] LT',
            nextDay : '[Mbenjang pukul] LT',
            nextWeek : 'dddd [pukul] LT',
            lastDay : '[Kala wingi pukul] LT',
            lastWeek : 'dddd [kepengker pukul] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'wonten ing %s',
            past : '%s ingkang kepengker',
            s : 'sawetawis detik',
            ss : '%d detik',
            m : 'setunggal menit',
            mm : '%d menit',
            h : 'setunggal jam',
            hh : '%d jam',
            d : 'sedinten',
            dd : '%d dinten',
            M : 'sewulan',
            MM : '%d wulan',
            y : 'setaun',
            yy : '%d taun'
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return jv;

})));


/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var ka = moment.defineLocale('ka', {
        months : {
            standalone: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_'),
            format: 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_')
        },
        monthsShort : 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),
        weekdays : {
            standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),
            format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_'),
            isFormat: /(წინა|შემდეგ)/
        },
        weekdaysShort : 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),
        weekdaysMin : 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY h:mm A',
            LLLL : 'dddd, D MMMM YYYY h:mm A'
        },
        calendar : {
            sameDay : '[დღეს] LT[-ზე]',
            nextDay : '[ხვალ] LT[-ზე]',
            lastDay : '[გუშინ] LT[-ზე]',
            nextWeek : '[შემდეგ] dddd LT[-ზე]',
            lastWeek : '[წინა] dddd LT-ზე',
            sameElse : 'L'
        },
        relativeTime : {
            future : function (s) {
                return (/(წამი|წუთი|საათი|წელი)/).test(s) ?
                    s.replace(/ი$/, 'ში') :
                    s + 'ში';
            },
            past : function (s) {
                if ((/(წამი|წუთი|საათი|დღე|თვე)/).test(s)) {
                    return s.replace(/(ი|ე)$/, 'ის წინ');
                }
                if ((/წელი/).test(s)) {
                    return s.replace(/წელი$/, 'წლის წინ');
                }
            },
            s : 'რამდენიმე წამი',
            ss : '%d წამი',
            m : 'წუთი',
            mm : '%d წუთი',
            h : 'საათი',
            hh : '%d საათი',
            d : 'დღე',
            dd : '%d დღე',
            M : 'თვე',
            MM : '%d თვე',
            y : 'წელი',
            yy : '%d წელი'
        },
        dayOfMonthOrdinalParse: /0|1-ლი|მე-\d{1,2}|\d{1,2}-ე/,
        ordinal : function (number) {
            if (number === 0) {
                return number;
            }
            if (number === 1) {
                return number + '-ლი';
            }
            if ((number < 20) || (number <= 100 && (number % 20 === 0)) || (number % 100 === 0)) {
                return 'მე-' + number;
            }
            return number + '-ე';
        },
        week : {
            dow : 1,
            doy : 7
        }
    });

    return ka;

})));


/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var suffixes = {
        0: '-ші',
        1: '-ші',
        2: '-ші',
        3: '-ші',
        4: '-ші',
        5: '-ші',
        6: '-шы',
        7: '-ші',
        8: '-ші',
        9: '-шы',
        10: '-шы',
        20: '-шы',
        30: '-шы',
        40: '-шы',
        50: '-ші',
        60: '-шы',
        70: '-ші',
        80: '-ші',
        90: '-шы',
        100: '-ші'
    };

    var kk = moment.defineLocale('kk', {
        months : 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split('_'),
        monthsShort : 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),
        weekdays : 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split('_'),
        weekdaysShort : 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),
        weekdaysMin : 'жк_дй_сй_ср_бй_жм_сн'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Бүгін сағат] LT',
            nextDay : '[Ертең сағат] LT',
            nextWeek : 'dddd [сағат] LT',
            lastDay : '[Кеше сағат] LT',
            lastWeek : '[Өткен аптаның] dddd [сағат] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s ішінде',
            past : '%s бұрын',
            s : 'бірнеше секунд',
            ss : '%d секунд',
            m : 'бір минут',
            mm : '%d минут',
            h : 'бір сағат',
            hh : '%d сағат',
            d : 'бір күн',
            dd : '%d күн',
            M : 'бір ай',
            MM : '%d ай',
            y : 'бір жыл',
            yy : '%d жыл'
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(ші|шы)/,
        ordinal : function (number) {
            var a = number % 10,
                b = number >= 100 ? 100 : null;
            return number + (suffixes[number] || suffixes[a] || suffixes[b]);
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return kk;

})));


/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '១',
        '2': '២',
        '3': '៣',
        '4': '៤',
        '5': '៥',
        '6': '៦',
        '7': '៧',
        '8': '៨',
        '9': '៩',
        '0': '០'
    }, numberMap = {
        '១': '1',
        '២': '2',
        '៣': '3',
        '៤': '4',
        '៥': '5',
        '៦': '6',
        '៧': '7',
        '៨': '8',
        '៩': '9',
        '០': '0'
    };

    var km = moment.defineLocale('km', {
        months: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split(
            '_'
        ),
        monthsShort: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split(
            '_'
        ),
        weekdays: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
        weekdaysShort: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),
        weekdaysMin: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm'
        },
        meridiemParse: /ព្រឹក|ល្ងាច/,
        isPM: function (input) {
            return input === 'ល្ងាច';
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ព្រឹក';
            } else {
                return 'ល្ងាច';
            }
        },
        calendar: {
            sameDay: '[ថ្ងៃនេះ ម៉ោង] LT',
            nextDay: '[ស្អែក ម៉ោង] LT',
            nextWeek: 'dddd [ម៉ោង] LT',
            lastDay: '[ម្សិលមិញ ម៉ោង] LT',
            lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: '%sទៀត',
            past: '%sមុន',
            s: 'ប៉ុន្មានវិនាទី',
            ss: '%d វិនាទី',
            m: 'មួយនាទី',
            mm: '%d នាទី',
            h: 'មួយម៉ោង',
            hh: '%d ម៉ោង',
            d: 'មួយថ្ងៃ',
            dd: '%d ថ្ងៃ',
            M: 'មួយខែ',
            MM: '%d ខែ',
            y: 'មួយឆ្នាំ',
            yy: '%d ឆ្នាំ'
        },
        dayOfMonthOrdinalParse : /ទី\d{1,2}/,
        ordinal : 'ទី%d',
        preparse: function (string) {
            return string.replace(/[១២៣៤៥៦៧៨៩០]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
        }
    });

    return km;

})));


/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '೧',
        '2': '೨',
        '3': '೩',
        '4': '೪',
        '5': '೫',
        '6': '೬',
        '7': '೭',
        '8': '೮',
        '9': '೯',
        '0': '೦'
    },
    numberMap = {
        '೧': '1',
        '೨': '2',
        '೩': '3',
        '೪': '4',
        '೫': '5',
        '೬': '6',
        '೭': '7',
        '೮': '8',
        '೯': '9',
        '೦': '0'
    };

    var kn = moment.defineLocale('kn', {
        months : 'ಜನವರಿ_ಫೆಬ್ರವರಿ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬರ್_ಅಕ್ಟೋಬರ್_ನವೆಂಬರ್_ಡಿಸೆಂಬರ್'.split('_'),
        monthsShort : 'ಜನ_ಫೆಬ್ರ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂ_ಅಕ್ಟೋ_ನವೆಂ_ಡಿಸೆಂ'.split('_'),
        monthsParseExact: true,
        weekdays : 'ಭಾನುವಾರ_ಸೋಮವಾರ_ಮಂಗಳವಾರ_ಬುಧವಾರ_ಗುರುವಾರ_ಶುಕ್ರವಾರ_ಶನಿವಾರ'.split('_'),
        weekdaysShort : 'ಭಾನು_ಸೋಮ_ಮಂಗಳ_ಬುಧ_ಗುರು_ಶುಕ್ರ_ಶನಿ'.split('_'),
        weekdaysMin : 'ಭಾ_ಸೋ_ಮಂ_ಬು_ಗು_ಶು_ಶ'.split('_'),
        longDateFormat : {
            LT : 'A h:mm',
            LTS : 'A h:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, A h:mm',
            LLLL : 'dddd, D MMMM YYYY, A h:mm'
        },
        calendar : {
            sameDay : '[ಇಂದು] LT',
            nextDay : '[ನಾಳೆ] LT',
            nextWeek : 'dddd, LT',
            lastDay : '[ನಿನ್ನೆ] LT',
            lastWeek : '[ಕೊನೆಯ] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s ನಂತರ',
            past : '%s ಹಿಂದೆ',
            s : 'ಕೆಲವು ಕ್ಷಣಗಳು',
            ss : '%d ಸೆಕೆಂಡುಗಳು',
            m : 'ಒಂದು ನಿಮಿಷ',
            mm : '%d ನಿಮಿಷ',
            h : 'ಒಂದು ಗಂಟೆ',
            hh : '%d ಗಂಟೆ',
            d : 'ಒಂದು ದಿನ',
            dd : '%d ದಿನ',
            M : 'ಒಂದು ತಿಂಗಳು',
            MM : '%d ತಿಂಗಳು',
            y : 'ಒಂದು ವರ್ಷ',
            yy : '%d ವರ್ಷ'
        },
        preparse: function (string) {
            return string.replace(/[೧೨೩೪೫೬೭೮೯೦]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        meridiemParse: /ರಾತ್ರಿ|ಬೆಳಿಗ್ಗೆ|ಮಧ್ಯಾಹ್ನ|ಸಂಜೆ/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'ರಾತ್ರಿ') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'ಬೆಳಿಗ್ಗೆ') {
                return hour;
            } else if (meridiem === 'ಮಧ್ಯಾಹ್ನ') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'ಸಂಜೆ') {
                return hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'ರಾತ್ರಿ';
            } else if (hour < 10) {
                return 'ಬೆಳಿಗ್ಗೆ';
            } else if (hour < 17) {
                return 'ಮಧ್ಯಾಹ್ನ';
            } else if (hour < 20) {
                return 'ಸಂಜೆ';
            } else {
                return 'ರಾತ್ರಿ';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}(ನೇ)/,
        ordinal : function (number) {
            return number + 'ನೇ';
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 6th is the first week of the year.
        }
    });

    return kn;

})));


/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var ko = moment.defineLocale('ko', {
        months : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
        monthsShort : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
        weekdays : '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),
        weekdaysShort : '일_월_화_수_목_금_토'.split('_'),
        weekdaysMin : '일_월_화_수_목_금_토'.split('_'),
        longDateFormat : {
            LT : 'A h:mm',
            LTS : 'A h:mm:ss',
            L : 'YYYY.MM.DD.',
            LL : 'YYYY년 MMMM D일',
            LLL : 'YYYY년 MMMM D일 A h:mm',
            LLLL : 'YYYY년 MMMM D일 dddd A h:mm',
            l : 'YYYY.MM.DD.',
            ll : 'YYYY년 MMMM D일',
            lll : 'YYYY년 MMMM D일 A h:mm',
            llll : 'YYYY년 MMMM D일 dddd A h:mm'
        },
        calendar : {
            sameDay : '오늘 LT',
            nextDay : '내일 LT',
            nextWeek : 'dddd LT',
            lastDay : '어제 LT',
            lastWeek : '지난주 dddd LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s 후',
            past : '%s 전',
            s : '몇 초',
            ss : '%d초',
            m : '1분',
            mm : '%d분',
            h : '한 시간',
            hh : '%d시간',
            d : '하루',
            dd : '%d일',
            M : '한 달',
            MM : '%d달',
            y : '일 년',
            yy : '%d년'
        },
        dayOfMonthOrdinalParse : /\d{1,2}(일|월|주)/,
        ordinal : function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                    return number + '일';
                case 'M':
                    return number + '월';
                case 'w':
                case 'W':
                    return number + '주';
                default:
                    return number;
            }
        },
        meridiemParse : /오전|오후/,
        isPM : function (token) {
            return token === '오후';
        },
        meridiem : function (hour, minute, isUpper) {
            return hour < 12 ? '오전' : '오후';
        }
    });

    return ko;

})));


/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '١',
        '2': '٢',
        '3': '٣',
        '4': '٤',
        '5': '٥',
        '6': '٦',
        '7': '٧',
        '8': '٨',
        '9': '٩',
        '0': '٠'
    }, numberMap = {
        '١': '1',
        '٢': '2',
        '٣': '3',
        '٤': '4',
        '٥': '5',
        '٦': '6',
        '٧': '7',
        '٨': '8',
        '٩': '9',
        '٠': '0'
    },
    months = [
        'کانونی دووەم',
        'شوبات',
        'ئازار',
        'نیسان',
        'ئایار',
        'حوزەیران',
        'تەمموز',
        'ئاب',
        'ئەیلوول',
        'تشرینی یەكەم',
        'تشرینی دووەم',
        'كانونی یەکەم'
    ];


    var ku = moment.defineLocale('ku', {
        months : months,
        monthsShort : months,
        weekdays : 'یه‌كشه‌ممه‌_دووشه‌ممه‌_سێشه‌ممه‌_چوارشه‌ممه‌_پێنجشه‌ممه‌_هه‌ینی_شه‌ممه‌'.split('_'),
        weekdaysShort : 'یه‌كشه‌م_دووشه‌م_سێشه‌م_چوارشه‌م_پێنجشه‌م_هه‌ینی_شه‌ممه‌'.split('_'),
        weekdaysMin : 'ی_د_س_چ_پ_ه_ش'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        meridiemParse: /ئێواره‌|به‌یانی/,
        isPM: function (input) {
            return /ئێواره‌/.test(input);
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'به‌یانی';
            } else {
                return 'ئێواره‌';
            }
        },
        calendar : {
            sameDay : '[ئه‌مرۆ كاتژمێر] LT',
            nextDay : '[به‌یانی كاتژمێر] LT',
            nextWeek : 'dddd [كاتژمێر] LT',
            lastDay : '[دوێنێ كاتژمێر] LT',
            lastWeek : 'dddd [كاتژمێر] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'له‌ %s',
            past : '%s',
            s : 'چه‌ند چركه‌یه‌ك',
            ss : 'چركه‌ %d',
            m : 'یه‌ك خوله‌ك',
            mm : '%d خوله‌ك',
            h : 'یه‌ك كاتژمێر',
            hh : '%d كاتژمێر',
            d : 'یه‌ك ڕۆژ',
            dd : '%d ڕۆژ',
            M : 'یه‌ك مانگ',
            MM : '%d مانگ',
            y : 'یه‌ك ساڵ',
            yy : '%d ساڵ'
        },
        preparse: function (string) {
            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
                return numberMap[match];
            }).replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            }).replace(/,/g, '،');
        },
        week : {
            dow : 6, // Saturday is the first day of the week.
            doy : 12 // The week that contains Jan 12th is the first week of the year.
        }
    });

    return ku;

})));


/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var suffixes = {
        0: '-чү',
        1: '-чи',
        2: '-чи',
        3: '-чү',
        4: '-чү',
        5: '-чи',
        6: '-чы',
        7: '-чи',
        8: '-чи',
        9: '-чу',
        10: '-чу',
        20: '-чы',
        30: '-чу',
        40: '-чы',
        50: '-чү',
        60: '-чы',
        70: '-чи',
        80: '-чи',
        90: '-чу',
        100: '-чү'
    };

    var ky = moment.defineLocale('ky', {
        months : 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),
        monthsShort : 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'),
        weekdays : 'Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби'.split('_'),
        weekdaysShort : 'Жек_Дүй_Шей_Шар_Бей_Жум_Ише'.split('_'),
        weekdaysMin : 'Жк_Дй_Шй_Шр_Бй_Жм_Иш'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Бүгүн саат] LT',
            nextDay : '[Эртең саат] LT',
            nextWeek : 'dddd [саат] LT',
            lastDay : '[Кечээ саат] LT',
            lastWeek : '[Өткөн аптанын] dddd [күнү] [саат] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s ичинде',
            past : '%s мурун',
            s : 'бирнече секунд',
            ss : '%d секунд',
            m : 'бир мүнөт',
            mm : '%d мүнөт',
            h : 'бир саат',
            hh : '%d саат',
            d : 'бир күн',
            dd : '%d күн',
            M : 'бир ай',
            MM : '%d ай',
            y : 'бир жыл',
            yy : '%d жыл'
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(чи|чы|чү|чу)/,
        ordinal : function (number) {
            var a = number % 10,
                b = number >= 100 ? 100 : null;
            return number + (suffixes[number] || suffixes[a] || suffixes[b]);
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return ky;

})));


/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            'm': ['eng Minutt', 'enger Minutt'],
            'h': ['eng Stonn', 'enger Stonn'],
            'd': ['een Dag', 'engem Dag'],
            'M': ['ee Mount', 'engem Mount'],
            'y': ['ee Joer', 'engem Joer']
        };
        return withoutSuffix ? format[key][0] : format[key][1];
    }
    function processFutureTime(string) {
        var number = string.substr(0, string.indexOf(' '));
        if (eifelerRegelAppliesToNumber(number)) {
            return 'a ' + string;
        }
        return 'an ' + string;
    }
    function processPastTime(string) {
        var number = string.substr(0, string.indexOf(' '));
        if (eifelerRegelAppliesToNumber(number)) {
            return 'viru ' + string;
        }
        return 'virun ' + string;
    }
    /**
     * Returns true if the word before the given number loses the '-n' ending.
     * e.g. 'an 10 Deeg' but 'a 5 Deeg'
     *
     * @param number {integer}
     * @returns {boolean}
     */
    function eifelerRegelAppliesToNumber(number) {
        number = parseInt(number, 10);
        if (isNaN(number)) {
            return false;
        }
        if (number < 0) {
            // Negative Number --> always true
            return true;
        } else if (number < 10) {
            // Only 1 digit
            if (4 <= number && number <= 7) {
                return true;
            }
            return false;
        } else if (number < 100) {
            // 2 digits
            var lastDigit = number % 10, firstDigit = number / 10;
            if (lastDigit === 0) {
                return eifelerRegelAppliesToNumber(firstDigit);
            }
            return eifelerRegelAppliesToNumber(lastDigit);
        } else if (number < 10000) {
            // 3 or 4 digits --> recursively check first digit
            while (number >= 10) {
                number = number / 10;
            }
            return eifelerRegelAppliesToNumber(number);
        } else {
            // Anything larger than 4 digits: recursively check first n-3 digits
            number = number / 1000;
            return eifelerRegelAppliesToNumber(number);
        }
    }

    var lb = moment.defineLocale('lb', {
        months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
        monthsShort: 'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
        monthsParseExact : true,
        weekdays: 'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split('_'),
        weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),
        weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),
        weekdaysParseExact : true,
        longDateFormat: {
            LT: 'H:mm [Auer]',
            LTS: 'H:mm:ss [Auer]',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm [Auer]',
            LLLL: 'dddd, D. MMMM YYYY H:mm [Auer]'
        },
        calendar: {
            sameDay: '[Haut um] LT',
            sameElse: 'L',
            nextDay: '[Muer um] LT',
            nextWeek: 'dddd [um] LT',
            lastDay: '[Gëschter um] LT',
            lastWeek: function () {
                // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule
                switch (this.day()) {
                    case 2:
                    case 4:
                        return '[Leschten] dddd [um] LT';
                    default:
                        return '[Leschte] dddd [um] LT';
                }
            }
        },
        relativeTime : {
            future : processFutureTime,
            past : processPastTime,
            s : 'e puer Sekonnen',
            ss : '%d Sekonnen',
            m : processRelativeTime,
            mm : '%d Minutten',
            h : processRelativeTime,
            hh : '%d Stonnen',
            d : processRelativeTime,
            dd : '%d Deeg',
            M : processRelativeTime,
            MM : '%d Méint',
            y : processRelativeTime,
            yy : '%d Joer'
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return lb;

})));


/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var lo = moment.defineLocale('lo', {
        months : 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),
        monthsShort : 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),
        weekdays : 'ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
        weekdaysShort : 'ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
        weekdaysMin : 'ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'ວັນdddd D MMMM YYYY HH:mm'
        },
        meridiemParse: /ຕອນເຊົ້າ|ຕອນແລງ/,
        isPM: function (input) {
            return input === 'ຕອນແລງ';
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ຕອນເຊົ້າ';
            } else {
                return 'ຕອນແລງ';
            }
        },
        calendar : {
            sameDay : '[ມື້ນີ້ເວລາ] LT',
            nextDay : '[ມື້ອື່ນເວລາ] LT',
            nextWeek : '[ວັນ]dddd[ໜ້າເວລາ] LT',
            lastDay : '[ມື້ວານນີ້ເວລາ] LT',
            lastWeek : '[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'ອີກ %s',
            past : '%sຜ່ານມາ',
            s : 'ບໍ່ເທົ່າໃດວິນາທີ',
            ss : '%d ວິນາທີ' ,
            m : '1 ນາທີ',
            mm : '%d ນາທີ',
            h : '1 ຊົ່ວໂມງ',
            hh : '%d ຊົ່ວໂມງ',
            d : '1 ມື້',
            dd : '%d ມື້',
            M : '1 ເດືອນ',
            MM : '%d ເດືອນ',
            y : '1 ປີ',
            yy : '%d ປີ'
        },
        dayOfMonthOrdinalParse: /(ທີ່)\d{1,2}/,
        ordinal : function (number) {
            return 'ທີ່' + number;
        }
    });

    return lo;

})));


/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var units = {
        'ss' : 'sekundė_sekundžių_sekundes',
        'm' : 'minutė_minutės_minutę',
        'mm': 'minutės_minučių_minutes',
        'h' : 'valanda_valandos_valandą',
        'hh': 'valandos_valandų_valandas',
        'd' : 'diena_dienos_dieną',
        'dd': 'dienos_dienų_dienas',
        'M' : 'mėnuo_mėnesio_mėnesį',
        'MM': 'mėnesiai_mėnesių_mėnesius',
        'y' : 'metai_metų_metus',
        'yy': 'metai_metų_metus'
    };
    function translateSeconds(number, withoutSuffix, key, isFuture) {
        if (withoutSuffix) {
            return 'kelios sekundės';
        } else {
            return isFuture ? 'kelių sekundžių' : 'kelias sekundes';
        }
    }
    function translateSingular(number, withoutSuffix, key, isFuture) {
        return withoutSuffix ? forms(key)[0] : (isFuture ? forms(key)[1] : forms(key)[2]);
    }
    function special(number) {
        return number % 10 === 0 || (number > 10 && number < 20);
    }
    function forms(key) {
        return units[key].split('_');
    }
    function translate(number, withoutSuffix, key, isFuture) {
        var result = number + ' ';
        if (number === 1) {
            return result + translateSingular(number, withoutSuffix, key[0], isFuture);
        } else if (withoutSuffix) {
            return result + (special(number) ? forms(key)[1] : forms(key)[0]);
        } else {
            if (isFuture) {
                return result + forms(key)[1];
            } else {
                return result + (special(number) ? forms(key)[1] : forms(key)[2]);
            }
        }
    }
    var lt = moment.defineLocale('lt', {
        months : {
            format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_'),
            standalone: 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split('_'),
            isFormat: /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?|MMMM?(\[[^\[\]]*\]|\s)+D[oD]?/
        },
        monthsShort : 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),
        weekdays : {
            format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split('_'),
            standalone: 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_'),
            isFormat: /dddd HH:mm/
        },
        weekdaysShort : 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),
        weekdaysMin : 'S_P_A_T_K_Pn_Š'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY-MM-DD',
            LL : 'YYYY [m.] MMMM D [d.]',
            LLL : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
            LLLL : 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',
            l : 'YYYY-MM-DD',
            ll : 'YYYY [m.] MMMM D [d.]',
            lll : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
            llll : 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]'
        },
        calendar : {
            sameDay : '[Šiandien] LT',
            nextDay : '[Rytoj] LT',
            nextWeek : 'dddd LT',
            lastDay : '[Vakar] LT',
            lastWeek : '[Praėjusį] dddd LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'po %s',
            past : 'prieš %s',
            s : translateSeconds,
            ss : translate,
            m : translateSingular,
            mm : translate,
            h : translateSingular,
            hh : translate,
            d : translateSingular,
            dd : translate,
            M : translateSingular,
            MM : translate,
            y : translateSingular,
            yy : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}-oji/,
        ordinal : function (number) {
            return number + '-oji';
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return lt;

})));


/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var units = {
        'ss': 'sekundes_sekundēm_sekunde_sekundes'.split('_'),
        'm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),
        'mm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),
        'h': 'stundas_stundām_stunda_stundas'.split('_'),
        'hh': 'stundas_stundām_stunda_stundas'.split('_'),
        'd': 'dienas_dienām_diena_dienas'.split('_'),
        'dd': 'dienas_dienām_diena_dienas'.split('_'),
        'M': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
        'MM': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
        'y': 'gada_gadiem_gads_gadi'.split('_'),
        'yy': 'gada_gadiem_gads_gadi'.split('_')
    };
    /**
     * @param withoutSuffix boolean true = a length of time; false = before/after a period of time.
     */
    function format(forms, number, withoutSuffix) {
        if (withoutSuffix) {
            // E.g. "21 minūte", "3 minūtes".
            return number % 10 === 1 && number % 100 !== 11 ? forms[2] : forms[3];
        } else {
            // E.g. "21 minūtes" as in "pēc 21 minūtes".
            // E.g. "3 minūtēm" as in "pēc 3 minūtēm".
            return number % 10 === 1 && number % 100 !== 11 ? forms[0] : forms[1];
        }
    }
    function relativeTimeWithPlural(number, withoutSuffix, key) {
        return number + ' ' + format(units[key], number, withoutSuffix);
    }
    function relativeTimeWithSingular(number, withoutSuffix, key) {
        return format(units[key], number, withoutSuffix);
    }
    function relativeSeconds(number, withoutSuffix) {
        return withoutSuffix ? 'dažas sekundes' : 'dažām sekundēm';
    }

    var lv = moment.defineLocale('lv', {
        months : 'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split('_'),
        monthsShort : 'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split('_'),
        weekdays : 'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split('_'),
        weekdaysShort : 'Sv_P_O_T_C_Pk_S'.split('_'),
        weekdaysMin : 'Sv_P_O_T_C_Pk_S'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY.',
            LL : 'YYYY. [gada] D. MMMM',
            LLL : 'YYYY. [gada] D. MMMM, HH:mm',
            LLLL : 'YYYY. [gada] D. MMMM, dddd, HH:mm'
        },
        calendar : {
            sameDay : '[Šodien pulksten] LT',
            nextDay : '[Rīt pulksten] LT',
            nextWeek : 'dddd [pulksten] LT',
            lastDay : '[Vakar pulksten] LT',
            lastWeek : '[Pagājušā] dddd [pulksten] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'pēc %s',
            past : 'pirms %s',
            s : relativeSeconds,
            ss : relativeTimeWithPlural,
            m : relativeTimeWithSingular,
            mm : relativeTimeWithPlural,
            h : relativeTimeWithSingular,
            hh : relativeTimeWithPlural,
            d : relativeTimeWithSingular,
            dd : relativeTimeWithPlural,
            M : relativeTimeWithSingular,
            MM : relativeTimeWithPlural,
            y : relativeTimeWithSingular,
            yy : relativeTimeWithPlural
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return lv;

})));


/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var translator = {
        words: { //Different grammatical cases
            ss: ['sekund', 'sekunda', 'sekundi'],
            m: ['jedan minut', 'jednog minuta'],
            mm: ['minut', 'minuta', 'minuta'],
            h: ['jedan sat', 'jednog sata'],
            hh: ['sat', 'sata', 'sati'],
            dd: ['dan', 'dana', 'dana'],
            MM: ['mjesec', 'mjeseca', 'mjeseci'],
            yy: ['godina', 'godine', 'godina']
        },
        correctGrammaticalCase: function (number, wordKey) {
            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
        },
        translate: function (number, withoutSuffix, key) {
            var wordKey = translator.words[key];
            if (key.length === 1) {
                return withoutSuffix ? wordKey[0] : wordKey[1];
            } else {
                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
            }
        }
    };

    var me = moment.defineLocale('me', {
        months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),
        monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),
        monthsParseExact : true,
        weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
        weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
        weekdaysParseExact : true,
        longDateFormat: {
            LT: 'H:mm',
            LTS : 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd, D. MMMM YYYY H:mm'
        },
        calendar: {
            sameDay: '[danas u] LT',
            nextDay: '[sjutra u] LT',

            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[u] [nedjelju] [u] LT';
                    case 3:
                        return '[u] [srijedu] [u] LT';
                    case 6:
                        return '[u] [subotu] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[u] dddd [u] LT';
                }
            },
            lastDay  : '[juče u] LT',
            lastWeek : function () {
                var lastWeekDays = [
                    '[prošle] [nedjelje] [u] LT',
                    '[prošlog] [ponedjeljka] [u] LT',
                    '[prošlog] [utorka] [u] LT',
                    '[prošle] [srijede] [u] LT',
                    '[prošlog] [četvrtka] [u] LT',
                    '[prošlog] [petka] [u] LT',
                    '[prošle] [subote] [u] LT'
                ];
                return lastWeekDays[this.day()];
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'za %s',
            past   : 'prije %s',
            s      : 'nekoliko sekundi',
            ss     : translator.translate,
            m      : translator.translate,
            mm     : translator.translate,
            h      : translator.translate,
            hh     : translator.translate,
            d      : 'dan',
            dd     : translator.translate,
            M      : 'mjesec',
            MM     : translator.translate,
            y      : 'godinu',
            yy     : translator.translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return me;

})));


/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var mi = moment.defineLocale('mi', {
        months: 'Kohi-tāte_Hui-tanguru_Poutū-te-rangi_Paenga-whāwhā_Haratua_Pipiri_Hōngoingoi_Here-turi-kōkā_Mahuru_Whiringa-ā-nuku_Whiringa-ā-rangi_Hakihea'.split('_'),
        monthsShort: 'Kohi_Hui_Pou_Pae_Hara_Pipi_Hōngoi_Here_Mahu_Whi-nu_Whi-ra_Haki'.split('_'),
        monthsRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
        monthsStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
        monthsShortRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
        monthsShortStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,2}/i,
        weekdays: 'Rātapu_Mane_Tūrei_Wenerei_Tāite_Paraire_Hātarei'.split('_'),
        weekdaysShort: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
        weekdaysMin: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY [i] HH:mm',
            LLLL: 'dddd, D MMMM YYYY [i] HH:mm'
        },
        calendar: {
            sameDay: '[i teie mahana, i] LT',
            nextDay: '[apopo i] LT',
            nextWeek: 'dddd [i] LT',
            lastDay: '[inanahi i] LT',
            lastWeek: 'dddd [whakamutunga i] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'i roto i %s',
            past: '%s i mua',
            s: 'te hēkona ruarua',
            ss: '%d hēkona',
            m: 'he meneti',
            mm: '%d meneti',
            h: 'te haora',
            hh: '%d haora',
            d: 'he ra',
            dd: '%d ra',
            M: 'he marama',
            MM: '%d marama',
            y: 'he tau',
            yy: '%d tau'
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal: '%dº',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return mi;

})));


/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var mk = moment.defineLocale('mk', {
        months : 'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split('_'),
        monthsShort : 'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split('_'),
        weekdays : 'недела_понеделник_вторник_среда_четврток_петок_сабота'.split('_'),
        weekdaysShort : 'нед_пон_вто_сре_чет_пет_саб'.split('_'),
        weekdaysMin : 'нe_пo_вт_ср_че_пе_сa'.split('_'),
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'D.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY H:mm',
            LLLL : 'dddd, D MMMM YYYY H:mm'
        },
        calendar : {
            sameDay : '[Денес во] LT',
            nextDay : '[Утре во] LT',
            nextWeek : '[Во] dddd [во] LT',
            lastDay : '[Вчера во] LT',
            lastWeek : function () {
                switch (this.day()) {
                    case 0:
                    case 3:
                    case 6:
                        return '[Изминатата] dddd [во] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[Изминатиот] dddd [во] LT';
                }
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'после %s',
            past : 'пред %s',
            s : 'неколку секунди',
            ss : '%d секунди',
            m : 'минута',
            mm : '%d минути',
            h : 'час',
            hh : '%d часа',
            d : 'ден',
            dd : '%d дена',
            M : 'месец',
            MM : '%d месеци',
            y : 'година',
            yy : '%d години'
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
        ordinal : function (number) {
            var lastDigit = number % 10,
                last2Digits = number % 100;
            if (number === 0) {
                return number + '-ев';
            } else if (last2Digits === 0) {
                return number + '-ен';
            } else if (last2Digits > 10 && last2Digits < 20) {
                return number + '-ти';
            } else if (lastDigit === 1) {
                return number + '-ви';
            } else if (lastDigit === 2) {
                return number + '-ри';
            } else if (lastDigit === 7 || lastDigit === 8) {
                return number + '-ми';
            } else {
                return number + '-ти';
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return mk;

})));


/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var ml = moment.defineLocale('ml', {
        months : 'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split('_'),
        monthsShort : 'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split('_'),
        monthsParseExact : true,
        weekdays : 'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split('_'),
        weekdaysShort : 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split('_'),
        weekdaysMin : 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'),
        longDateFormat : {
            LT : 'A h:mm -നു',
            LTS : 'A h:mm:ss -നു',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, A h:mm -നു',
            LLLL : 'dddd, D MMMM YYYY, A h:mm -നു'
        },
        calendar : {
            sameDay : '[ഇന്ന്] LT',
            nextDay : '[നാളെ] LT',
            nextWeek : 'dddd, LT',
            lastDay : '[ഇന്നലെ] LT',
            lastWeek : '[കഴിഞ്ഞ] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s കഴിഞ്ഞ്',
            past : '%s മുൻപ്',
            s : 'അൽപ നിമിഷങ്ങൾ',
            ss : '%d സെക്കൻഡ്',
            m : 'ഒരു മിനിറ്റ്',
            mm : '%d മിനിറ്റ്',
            h : 'ഒരു മണിക്കൂർ',
            hh : '%d മണിക്കൂർ',
            d : 'ഒരു ദിവസം',
            dd : '%d ദിവസം',
            M : 'ഒരു മാസം',
            MM : '%d മാസം',
            y : 'ഒരു വർഷം',
            yy : '%d വർഷം'
        },
        meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if ((meridiem === 'രാത്രി' && hour >= 4) ||
                    meridiem === 'ഉച്ച കഴിഞ്ഞ്' ||
                    meridiem === 'വൈകുന്നേരം') {
                return hour + 12;
            } else {
                return hour;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'രാത്രി';
            } else if (hour < 12) {
                return 'രാവിലെ';
            } else if (hour < 17) {
                return 'ഉച്ച കഴിഞ്ഞ്';
            } else if (hour < 20) {
                return 'വൈകുന്നേരം';
            } else {
                return 'രാത്രി';
            }
        }
    });

    return ml;

})));


/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function translate(number, withoutSuffix, key, isFuture) {
        switch (key) {
            case 's':
                return withoutSuffix ? 'хэдхэн секунд' : 'хэдхэн секундын';
            case 'ss':
                return number + (withoutSuffix ? ' секунд' : ' секундын');
            case 'm':
            case 'mm':
                return number + (withoutSuffix ? ' минут' : ' минутын');
            case 'h':
            case 'hh':
                return number + (withoutSuffix ? ' цаг' : ' цагийн');
            case 'd':
            case 'dd':
                return number + (withoutSuffix ? ' өдөр' : ' өдрийн');
            case 'M':
            case 'MM':
                return number + (withoutSuffix ? ' сар' : ' сарын');
            case 'y':
            case 'yy':
                return number + (withoutSuffix ? ' жил' : ' жилийн');
            default:
                return number;
        }
    }

    var mn = moment.defineLocale('mn', {
        months : 'Нэгдүгээр сар_Хоёрдугаар сар_Гуравдугаар сар_Дөрөвдүгээр сар_Тавдугаар сар_Зургадугаар сар_Долдугаар сар_Наймдугаар сар_Есдүгээр сар_Аравдугаар сар_Арван нэгдүгээр сар_Арван хоёрдугаар сар'.split('_'),
        monthsShort : '1 сар_2 сар_3 сар_4 сар_5 сар_6 сар_7 сар_8 сар_9 сар_10 сар_11 сар_12 сар'.split('_'),
        monthsParseExact : true,
        weekdays : 'Ням_Даваа_Мягмар_Лхагва_Пүрэв_Баасан_Бямба'.split('_'),
        weekdaysShort : 'Ням_Дав_Мяг_Лха_Пүр_Баа_Бям'.split('_'),
        weekdaysMin : 'Ня_Да_Мя_Лх_Пү_Ба_Бя'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY-MM-DD',
            LL : 'YYYY оны MMMMын D',
            LLL : 'YYYY оны MMMMын D HH:mm',
            LLLL : 'dddd, YYYY оны MMMMын D HH:mm'
        },
        meridiemParse: /ҮӨ|ҮХ/i,
        isPM : function (input) {
            return input === 'ҮХ';
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ҮӨ';
            } else {
                return 'ҮХ';
            }
        },
        calendar : {
            sameDay : '[Өнөөдөр] LT',
            nextDay : '[Маргааш] LT',
            nextWeek : '[Ирэх] dddd LT',
            lastDay : '[Өчигдөр] LT',
            lastWeek : '[Өнгөрсөн] dddd LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s дараа',
            past : '%s өмнө',
            s : translate,
            ss : translate,
            m : translate,
            mm : translate,
            h : translate,
            hh : translate,
            d : translate,
            dd : translate,
            M : translate,
            MM : translate,
            y : translate,
            yy : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2} өдөр/,
        ordinal : function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                    return number + ' өдөр';
                default:
                    return number;
            }
        }
    });

    return mn;

})));


/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '१',
        '2': '२',
        '3': '३',
        '4': '४',
        '5': '५',
        '6': '६',
        '7': '७',
        '8': '८',
        '9': '९',
        '0': '०'
    },
    numberMap = {
        '१': '1',
        '२': '2',
        '३': '3',
        '४': '4',
        '५': '5',
        '६': '6',
        '७': '7',
        '८': '8',
        '९': '9',
        '०': '0'
    };

    function relativeTimeMr(number, withoutSuffix, string, isFuture)
    {
        var output = '';
        if (withoutSuffix) {
            switch (string) {
                case 's': output = 'काही सेकंद'; break;
                case 'ss': output = '%d सेकंद'; break;
                case 'm': output = 'एक मिनिट'; break;
                case 'mm': output = '%d मिनिटे'; break;
                case 'h': output = 'एक तास'; break;
                case 'hh': output = '%d तास'; break;
                case 'd': output = 'एक दिवस'; break;
                case 'dd': output = '%d दिवस'; break;
                case 'M': output = 'एक महिना'; break;
                case 'MM': output = '%d महिने'; break;
                case 'y': output = 'एक वर्ष'; break;
                case 'yy': output = '%d वर्षे'; break;
            }
        }
        else {
            switch (string) {
                case 's': output = 'काही सेकंदां'; break;
                case 'ss': output = '%d सेकंदां'; break;
                case 'm': output = 'एका मिनिटा'; break;
                case 'mm': output = '%d मिनिटां'; break;
                case 'h': output = 'एका तासा'; break;
                case 'hh': output = '%d तासां'; break;
                case 'd': output = 'एका दिवसा'; break;
                case 'dd': output = '%d दिवसां'; break;
                case 'M': output = 'एका महिन्या'; break;
                case 'MM': output = '%d महिन्यां'; break;
                case 'y': output = 'एका वर्षा'; break;
                case 'yy': output = '%d वर्षां'; break;
            }
        }
        return output.replace(/%d/i, number);
    }

    var mr = moment.defineLocale('mr', {
        months : 'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split('_'),
        monthsShort: 'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split('_'),
        monthsParseExact : true,
        weekdays : 'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
        weekdaysShort : 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'),
        weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),
        longDateFormat : {
            LT : 'A h:mm वाजता',
            LTS : 'A h:mm:ss वाजता',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, A h:mm वाजता',
            LLLL : 'dddd, D MMMM YYYY, A h:mm वाजता'
        },
        calendar : {
            sameDay : '[आज] LT',
            nextDay : '[उद्या] LT',
            nextWeek : 'dddd, LT',
            lastDay : '[काल] LT',
            lastWeek: '[मागील] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future: '%sमध्ये',
            past: '%sपूर्वी',
            s: relativeTimeMr,
            ss: relativeTimeMr,
            m: relativeTimeMr,
            mm: relativeTimeMr,
            h: relativeTimeMr,
            hh: relativeTimeMr,
            d: relativeTimeMr,
            dd: relativeTimeMr,
            M: relativeTimeMr,
            MM: relativeTimeMr,
            y: relativeTimeMr,
            yy: relativeTimeMr
        },
        preparse: function (string) {
            return string.replace(/[१२३४५६७८९०]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        meridiemParse: /रात्री|सकाळी|दुपारी|सायंकाळी/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'रात्री') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'सकाळी') {
                return hour;
            } else if (meridiem === 'दुपारी') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'सायंकाळी') {
                return hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
                return 'रात्री';
            } else if (hour < 10) {
                return 'सकाळी';
            } else if (hour < 17) {
                return 'दुपारी';
            } else if (hour < 20) {
                return 'सायंकाळी';
            } else {
                return 'रात्री';
            }
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 6th is the first week of the year.
        }
    });

    return mr;

})));


/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var ms = moment.defineLocale('ms', {
        months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
        weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
        weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
        weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
        longDateFormat : {
            LT : 'HH.mm',
            LTS : 'HH.mm.ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY [pukul] HH.mm',
            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
        },
        meridiemParse: /pagi|tengahari|petang|malam/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'pagi') {
                return hour;
            } else if (meridiem === 'tengahari') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'petang' || meridiem === 'malam') {
                return hour + 12;
            }
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours < 11) {
                return 'pagi';
            } else if (hours < 15) {
                return 'tengahari';
            } else if (hours < 19) {
                return 'petang';
            } else {
                return 'malam';
            }
        },
        calendar : {
            sameDay : '[Hari ini pukul] LT',
            nextDay : '[Esok pukul] LT',
            nextWeek : 'dddd [pukul] LT',
            lastDay : '[Kelmarin pukul] LT',
            lastWeek : 'dddd [lepas pukul] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'dalam %s',
            past : '%s yang lepas',
            s : 'beberapa saat',
            ss : '%d saat',
            m : 'seminit',
            mm : '%d minit',
            h : 'sejam',
            hh : '%d jam',
            d : 'sehari',
            dd : '%d hari',
            M : 'sebulan',
            MM : '%d bulan',
            y : 'setahun',
            yy : '%d tahun'
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return ms;

})));


/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var msMy = moment.defineLocale('ms-my', {
        months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
        weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
        weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
        weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
        longDateFormat : {
            LT : 'HH.mm',
            LTS : 'HH.mm.ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY [pukul] HH.mm',
            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
        },
        meridiemParse: /pagi|tengahari|petang|malam/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'pagi') {
                return hour;
            } else if (meridiem === 'tengahari') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'petang' || meridiem === 'malam') {
                return hour + 12;
            }
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours < 11) {
                return 'pagi';
            } else if (hours < 15) {
                return 'tengahari';
            } else if (hours < 19) {
                return 'petang';
            } else {
                return 'malam';
            }
        },
        calendar : {
            sameDay : '[Hari ini pukul] LT',
            nextDay : '[Esok pukul] LT',
            nextWeek : 'dddd [pukul] LT',
            lastDay : '[Kelmarin pukul] LT',
            lastWeek : 'dddd [lepas pukul] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'dalam %s',
            past : '%s yang lepas',
            s : 'beberapa saat',
            ss : '%d saat',
            m : 'seminit',
            mm : '%d minit',
            h : 'sejam',
            hh : '%d jam',
            d : 'sehari',
            dd : '%d hari',
            M : 'sebulan',
            MM : '%d bulan',
            y : 'setahun',
            yy : '%d tahun'
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return msMy;

})));


/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var mt = moment.defineLocale('mt', {
        months : 'Jannar_Frar_Marzu_April_Mejju_Ġunju_Lulju_Awwissu_Settembru_Ottubru_Novembru_Diċembru'.split('_'),
        monthsShort : 'Jan_Fra_Mar_Apr_Mej_Ġun_Lul_Aww_Set_Ott_Nov_Diċ'.split('_'),
        weekdays : 'Il-Ħadd_It-Tnejn_It-Tlieta_L-Erbgħa_Il-Ħamis_Il-Ġimgħa_Is-Sibt'.split('_'),
        weekdaysShort : 'Ħad_Tne_Tli_Erb_Ħam_Ġim_Sib'.split('_'),
        weekdaysMin : 'Ħa_Tn_Tl_Er_Ħa_Ġi_Si'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Illum fil-]LT',
            nextDay : '[Għada fil-]LT',
            nextWeek : 'dddd [fil-]LT',
            lastDay : '[Il-bieraħ fil-]LT',
            lastWeek : 'dddd [li għadda] [fil-]LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'f’ %s',
            past : '%s ilu',
            s : 'ftit sekondi',
            ss : '%d sekondi',
            m : 'minuta',
            mm : '%d minuti',
            h : 'siegħa',
            hh : '%d siegħat',
            d : 'ġurnata',
            dd : '%d ġranet',
            M : 'xahar',
            MM : '%d xhur',
            y : 'sena',
            yy : '%d sni'
        },
        dayOfMonthOrdinalParse : /\d{1,2}º/,
        ordinal: '%dº',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return mt;

})));


/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '၁',
        '2': '၂',
        '3': '၃',
        '4': '၄',
        '5': '၅',
        '6': '၆',
        '7': '၇',
        '8': '၈',
        '9': '၉',
        '0': '၀'
    }, numberMap = {
        '၁': '1',
        '၂': '2',
        '၃': '3',
        '၄': '4',
        '၅': '5',
        '၆': '6',
        '၇': '7',
        '၈': '8',
        '၉': '9',
        '၀': '0'
    };

    var my = moment.defineLocale('my', {
        months: 'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split('_'),
        monthsShort: 'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split('_'),
        weekdays: 'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split('_'),
        weekdaysShort: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),
        weekdaysMin: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),

        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm'
        },
        calendar: {
            sameDay: '[ယနေ.] LT [မှာ]',
            nextDay: '[မနက်ဖြန်] LT [မှာ]',
            nextWeek: 'dddd LT [မှာ]',
            lastDay: '[မနေ.က] LT [မှာ]',
            lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]',
            sameElse: 'L'
        },
        relativeTime: {
            future: 'လာမည့် %s မှာ',
            past: 'လွန်ခဲ့သော %s က',
            s: 'စက္ကန်.အနည်းငယ်',
            ss : '%d စက္ကန့်',
            m: 'တစ်မိနစ်',
            mm: '%d မိနစ်',
            h: 'တစ်နာရီ',
            hh: '%d နာရီ',
            d: 'တစ်ရက်',
            dd: '%d ရက်',
            M: 'တစ်လ',
            MM: '%d လ',
            y: 'တစ်နှစ်',
            yy: '%d နှစ်'
        },
        preparse: function (string) {
            return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4 // The week that contains Jan 4th is the first week of the year.
        }
    });

    return my;

})));


/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var nb = moment.defineLocale('nb', {
        months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
        monthsShort : 'jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),
        monthsParseExact : true,
        weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
        weekdaysShort : 'sø._ma._ti._on._to._fr._lø.'.split('_'),
        weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY [kl.] HH:mm',
            LLLL : 'dddd D. MMMM YYYY [kl.] HH:mm'
        },
        calendar : {
            sameDay: '[i dag kl.] LT',
            nextDay: '[i morgen kl.] LT',
            nextWeek: 'dddd [kl.] LT',
            lastDay: '[i går kl.] LT',
            lastWeek: '[forrige] dddd [kl.] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'om %s',
            past : '%s siden',
            s : 'noen sekunder',
            ss : '%d sekunder',
            m : 'ett minutt',
            mm : '%d minutter',
            h : 'en time',
            hh : '%d timer',
            d : 'en dag',
            dd : '%d dager',
            M : 'en måned',
            MM : '%d måneder',
            y : 'ett år',
            yy : '%d år'
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return nb;

})));


/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '१',
        '2': '२',
        '3': '३',
        '4': '४',
        '5': '५',
        '6': '६',
        '7': '७',
        '8': '८',
        '9': '९',
        '0': '०'
    },
    numberMap = {
        '१': '1',
        '२': '2',
        '३': '3',
        '४': '4',
        '५': '5',
        '६': '6',
        '७': '7',
        '८': '8',
        '९': '9',
        '०': '0'
    };

    var ne = moment.defineLocale('ne', {
        months : 'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split('_'),
        monthsShort : 'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split('_'),
        monthsParseExact : true,
        weekdays : 'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split('_'),
        weekdaysShort : 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split('_'),
        weekdaysMin : 'आ._सो._मं._बु._बि._शु._श.'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'Aको h:mm बजे',
            LTS : 'Aको h:mm:ss बजे',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, Aको h:mm बजे',
            LLLL : 'dddd, D MMMM YYYY, Aको h:mm बजे'
        },
        preparse: function (string) {
            return string.replace(/[१२३४५६७८९०]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        meridiemParse: /राति|बिहान|दिउँसो|साँझ/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'राति') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'बिहान') {
                return hour;
            } else if (meridiem === 'दिउँसो') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'साँझ') {
                return hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 3) {
                return 'राति';
            } else if (hour < 12) {
                return 'बिहान';
            } else if (hour < 16) {
                return 'दिउँसो';
            } else if (hour < 20) {
                return 'साँझ';
            } else {
                return 'राति';
            }
        },
        calendar : {
            sameDay : '[आज] LT',
            nextDay : '[भोलि] LT',
            nextWeek : '[आउँदो] dddd[,] LT',
            lastDay : '[हिजो] LT',
            lastWeek : '[गएको] dddd[,] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%sमा',
            past : '%s अगाडि',
            s : 'केही क्षण',
            ss : '%d सेकेण्ड',
            m : 'एक मिनेट',
            mm : '%d मिनेट',
            h : 'एक घण्टा',
            hh : '%d घण्टा',
            d : 'एक दिन',
            dd : '%d दिन',
            M : 'एक महिना',
            MM : '%d महिना',
            y : 'एक बर्ष',
            yy : '%d बर्ष'
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 6th is the first week of the year.
        }
    });

    return ne;

})));


/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),
        monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');

    var monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];
    var monthsRegex = /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;

    var nl = moment.defineLocale('nl', {
        months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),
        monthsShort : function (m, format) {
            if (!m) {
                return monthsShortWithDots;
            } else if (/-MMM-/.test(format)) {
                return monthsShortWithoutDots[m.month()];
            } else {
                return monthsShortWithDots[m.month()];
            }
        },

        monthsRegex: monthsRegex,
        monthsShortRegex: monthsRegex,
        monthsStrictRegex: /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,
        monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,

        monthsParse : monthsParse,
        longMonthsParse : monthsParse,
        shortMonthsParse : monthsParse,

        weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),
        weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),
        weekdaysMin : 'zo_ma_di_wo_do_vr_za'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD-MM-YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[vandaag om] LT',
            nextDay: '[morgen om] LT',
            nextWeek: 'dddd [om] LT',
            lastDay: '[gisteren om] LT',
            lastWeek: '[afgelopen] dddd [om] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'over %s',
            past : '%s geleden',
            s : 'een paar seconden',
            ss : '%d seconden',
            m : 'één minuut',
            mm : '%d minuten',
            h : 'één uur',
            hh : '%d uur',
            d : 'één dag',
            dd : '%d dagen',
            M : 'één maand',
            MM : '%d maanden',
            y : 'één jaar',
            yy : '%d jaar'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
        ordinal : function (number) {
            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return nl;

})));


/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),
        monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');

    var monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];
    var monthsRegex = /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;

    var nlBe = moment.defineLocale('nl-be', {
        months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),
        monthsShort : function (m, format) {
            if (!m) {
                return monthsShortWithDots;
            } else if (/-MMM-/.test(format)) {
                return monthsShortWithoutDots[m.month()];
            } else {
                return monthsShortWithDots[m.month()];
            }
        },

        monthsRegex: monthsRegex,
        monthsShortRegex: monthsRegex,
        monthsStrictRegex: /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,
        monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,

        monthsParse : monthsParse,
        longMonthsParse : monthsParse,
        shortMonthsParse : monthsParse,

        weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),
        weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),
        weekdaysMin : 'zo_ma_di_wo_do_vr_za'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[vandaag om] LT',
            nextDay: '[morgen om] LT',
            nextWeek: 'dddd [om] LT',
            lastDay: '[gisteren om] LT',
            lastWeek: '[afgelopen] dddd [om] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'over %s',
            past : '%s geleden',
            s : 'een paar seconden',
            ss : '%d seconden',
            m : 'één minuut',
            mm : '%d minuten',
            h : 'één uur',
            hh : '%d uur',
            d : 'één dag',
            dd : '%d dagen',
            M : 'één maand',
            MM : '%d maanden',
            y : 'één jaar',
            yy : '%d jaar'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
        ordinal : function (number) {
            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return nlBe;

})));


/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var nn = moment.defineLocale('nn', {
        months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
        weekdays : 'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split('_'),
        weekdaysShort : 'sun_mån_tys_ons_tor_fre_lau'.split('_'),
        weekdaysMin : 'su_må_ty_on_to_fr_lø'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY [kl.] H:mm',
            LLLL : 'dddd D. MMMM YYYY [kl.] HH:mm'
        },
        calendar : {
            sameDay: '[I dag klokka] LT',
            nextDay: '[I morgon klokka] LT',
            nextWeek: 'dddd [klokka] LT',
            lastDay: '[I går klokka] LT',
            lastWeek: '[Føregåande] dddd [klokka] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'om %s',
            past : '%s sidan',
            s : 'nokre sekund',
            ss : '%d sekund',
            m : 'eit minutt',
            mm : '%d minutt',
            h : 'ein time',
            hh : '%d timar',
            d : 'ein dag',
            dd : '%d dagar',
            M : 'ein månad',
            MM : '%d månader',
            y : 'eit år',
            yy : '%d år'
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return nn;

})));


/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '੧',
        '2': '੨',
        '3': '੩',
        '4': '੪',
        '5': '੫',
        '6': '੬',
        '7': '੭',
        '8': '੮',
        '9': '੯',
        '0': '੦'
    },
    numberMap = {
        '੧': '1',
        '੨': '2',
        '੩': '3',
        '੪': '4',
        '੫': '5',
        '੬': '6',
        '੭': '7',
        '੮': '8',
        '੯': '9',
        '੦': '0'
    };

    var paIn = moment.defineLocale('pa-in', {
        // There are months name as per Nanakshahi Calendar but they are not used as rigidly in modern Punjabi.
        months : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),
        monthsShort : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),
        weekdays : 'ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ'.split('_'),
        weekdaysShort : 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
        weekdaysMin : 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
        longDateFormat : {
            LT : 'A h:mm ਵਜੇ',
            LTS : 'A h:mm:ss ਵਜੇ',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, A h:mm ਵਜੇ',
            LLLL : 'dddd, D MMMM YYYY, A h:mm ਵਜੇ'
        },
        calendar : {
            sameDay : '[ਅਜ] LT',
            nextDay : '[ਕਲ] LT',
            nextWeek : '[ਅਗਲਾ] dddd, LT',
            lastDay : '[ਕਲ] LT',
            lastWeek : '[ਪਿਛਲੇ] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s ਵਿੱਚ',
            past : '%s ਪਿਛਲੇ',
            s : 'ਕੁਝ ਸਕਿੰਟ',
            ss : '%d ਸਕਿੰਟ',
            m : 'ਇਕ ਮਿੰਟ',
            mm : '%d ਮਿੰਟ',
            h : 'ਇੱਕ ਘੰਟਾ',
            hh : '%d ਘੰਟੇ',
            d : 'ਇੱਕ ਦਿਨ',
            dd : '%d ਦਿਨ',
            M : 'ਇੱਕ ਮਹੀਨਾ',
            MM : '%d ਮਹੀਨੇ',
            y : 'ਇੱਕ ਸਾਲ',
            yy : '%d ਸਾਲ'
        },
        preparse: function (string) {
            return string.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        // Punjabi notation for meridiems are quite fuzzy in practice. While there exists
        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Punjabi.
        meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'ਰਾਤ') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'ਸਵੇਰ') {
                return hour;
            } else if (meridiem === 'ਦੁਪਹਿਰ') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'ਸ਼ਾਮ') {
                return hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'ਰਾਤ';
            } else if (hour < 10) {
                return 'ਸਵੇਰ';
            } else if (hour < 17) {
                return 'ਦੁਪਹਿਰ';
            } else if (hour < 20) {
                return 'ਸ਼ਾਮ';
            } else {
                return 'ਰਾਤ';
            }
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 6th is the first week of the year.
        }
    });

    return paIn;

})));


/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_'),
        monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');
    function plural(n) {
        return (n % 10 < 5) && (n % 10 > 1) && ((~~(n / 10) % 10) !== 1);
    }
    function translate(number, withoutSuffix, key) {
        var result = number + ' ';
        switch (key) {
            case 'ss':
                return result + (plural(number) ? 'sekundy' : 'sekund');
            case 'm':
                return withoutSuffix ? 'minuta' : 'minutę';
            case 'mm':
                return result + (plural(number) ? 'minuty' : 'minut');
            case 'h':
                return withoutSuffix  ? 'godzina'  : 'godzinę';
            case 'hh':
                return result + (plural(number) ? 'godziny' : 'godzin');
            case 'MM':
                return result + (plural(number) ? 'miesiące' : 'miesięcy');
            case 'yy':
                return result + (plural(number) ? 'lata' : 'lat');
        }
    }

    var pl = moment.defineLocale('pl', {
        months : function (momentToFormat, format) {
            if (!momentToFormat) {
                return monthsNominative;
            } else if (format === '') {
                // Hack: if format empty we know this is used to generate
                // RegExp by moment. Give then back both valid forms of months
                // in RegExp ready format.
                return '(' + monthsSubjective[momentToFormat.month()] + '|' + monthsNominative[momentToFormat.month()] + ')';
            } else if (/D MMMM/.test(format)) {
                return monthsSubjective[momentToFormat.month()];
            } else {
                return monthsNominative[momentToFormat.month()];
            }
        },
        monthsShort : 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),
        weekdays : 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),
        weekdaysShort : 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),
        weekdaysMin : 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[Dziś o] LT',
            nextDay: '[Jutro o] LT',
            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[W niedzielę o] LT';

                    case 2:
                        return '[We wtorek o] LT';

                    case 3:
                        return '[W środę o] LT';

                    case 6:
                        return '[W sobotę o] LT';

                    default:
                        return '[W] dddd [o] LT';
                }
            },
            lastDay: '[Wczoraj o] LT',
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[W zeszłą niedzielę o] LT';
                    case 3:
                        return '[W zeszłą środę o] LT';
                    case 6:
                        return '[W zeszłą sobotę o] LT';
                    default:
                        return '[W zeszły] dddd [o] LT';
                }
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : 'za %s',
            past : '%s temu',
            s : 'kilka sekund',
            ss : translate,
            m : translate,
            mm : translate,
            h : translate,
            hh : translate,
            d : '1 dzień',
            dd : '%d dni',
            M : 'miesiąc',
            MM : translate,
            y : 'rok',
            yy : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return pl;

})));


/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var pt = moment.defineLocale('pt', {
        months : 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),
        monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),
        weekdays : 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),
        weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
        weekdaysMin : 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D [de] MMMM [de] YYYY',
            LLL : 'D [de] MMMM [de] YYYY HH:mm',
            LLLL : 'dddd, D [de] MMMM [de] YYYY HH:mm'
        },
        calendar : {
            sameDay: '[Hoje às] LT',
            nextDay: '[Amanhã às] LT',
            nextWeek: 'dddd [às] LT',
            lastDay: '[Ontem às] LT',
            lastWeek: function () {
                return (this.day() === 0 || this.day() === 6) ?
                    '[Último] dddd [às] LT' : // Saturday + Sunday
                    '[Última] dddd [às] LT'; // Monday - Friday
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : 'em %s',
            past : 'há %s',
            s : 'segundos',
            ss : '%d segundos',
            m : 'um minuto',
            mm : '%d minutos',
            h : 'uma hora',
            hh : '%d horas',
            d : 'um dia',
            dd : '%d dias',
            M : 'um mês',
            MM : '%d meses',
            y : 'um ano',
            yy : '%d anos'
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal : '%dº',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return pt;

})));


/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var ptBr = moment.defineLocale('pt-br', {
        months : 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),
        monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),
        weekdays : 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),
        weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
        weekdaysMin : 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D [de] MMMM [de] YYYY',
            LLL : 'D [de] MMMM [de] YYYY [às] HH:mm',
            LLLL : 'dddd, D [de] MMMM [de] YYYY [às] HH:mm'
        },
        calendar : {
            sameDay: '[Hoje às] LT',
            nextDay: '[Amanhã às] LT',
            nextWeek: 'dddd [às] LT',
            lastDay: '[Ontem às] LT',
            lastWeek: function () {
                return (this.day() === 0 || this.day() === 6) ?
                    '[Último] dddd [às] LT' : // Saturday + Sunday
                    '[Última] dddd [às] LT'; // Monday - Friday
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : 'em %s',
            past : 'há %s',
            s : 'poucos segundos',
            ss : '%d segundos',
            m : 'um minuto',
            mm : '%d minutos',
            h : 'uma hora',
            hh : '%d horas',
            d : 'um dia',
            dd : '%d dias',
            M : 'um mês',
            MM : '%d meses',
            y : 'um ano',
            yy : '%d anos'
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal : '%dº'
    });

    return ptBr;

})));


/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function relativeTimeWithPlural(number, withoutSuffix, key) {
        var format = {
                'ss': 'secunde',
                'mm': 'minute',
                'hh': 'ore',
                'dd': 'zile',
                'MM': 'luni',
                'yy': 'ani'
            },
            separator = ' ';
        if (number % 100 >= 20 || (number >= 100 && number % 100 === 0)) {
            separator = ' de ';
        }
        return number + separator + format[key];
    }

    var ro = moment.defineLocale('ro', {
        months : 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),
        monthsShort : 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),
        monthsParseExact: true,
        weekdays : 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),
        weekdaysShort : 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),
        weekdaysMin : 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY H:mm',
            LLLL : 'dddd, D MMMM YYYY H:mm'
        },
        calendar : {
            sameDay: '[azi la] LT',
            nextDay: '[mâine la] LT',
            nextWeek: 'dddd [la] LT',
            lastDay: '[ieri la] LT',
            lastWeek: '[fosta] dddd [la] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'peste %s',
            past : '%s în urmă',
            s : 'câteva secunde',
            ss : relativeTimeWithPlural,
            m : 'un minut',
            mm : relativeTimeWithPlural,
            h : 'o oră',
            hh : relativeTimeWithPlural,
            d : 'o zi',
            dd : relativeTimeWithPlural,
            M : 'o lună',
            MM : relativeTimeWithPlural,
            y : 'un an',
            yy : relativeTimeWithPlural
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return ro;

})));


/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function plural(word, num) {
        var forms = word.split('_');
        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
    }
    function relativeTimeWithPlural(number, withoutSuffix, key) {
        var format = {
            'ss': withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',
            'mm': withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',
            'hh': 'час_часа_часов',
            'dd': 'день_дня_дней',
            'MM': 'месяц_месяца_месяцев',
            'yy': 'год_года_лет'
        };
        if (key === 'm') {
            return withoutSuffix ? 'минута' : 'минуту';
        }
        else {
            return number + ' ' + plural(format[key], +number);
        }
    }
    var monthsParse = [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i];

    // http://new.gramota.ru/spravka/rules/139-prop : § 103
    // Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637
    // CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753
    var ru = moment.defineLocale('ru', {
        months : {
            format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_'),
            standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_')
        },
        monthsShort : {
            // по CLDR именно "июл." и "июн.", но какой смысл менять букву на точку ?
            format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),
            standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split('_')
        },
        weekdays : {
            standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),
            format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_'),
            isFormat: /\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\] ?dddd/
        },
        weekdaysShort : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
        weekdaysMin : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
        monthsParse : monthsParse,
        longMonthsParse : monthsParse,
        shortMonthsParse : monthsParse,

        // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки
        monthsRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,

        // копия предыдущего
        monthsShortRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,

        // полные названия с падежами
        monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,

        // Выражение, которое соотвествует только сокращённым формам
        monthsShortStrictRegex: /^(янв\.|февр?\.|мар[т.]|апр\.|ма[яй]|июн[ья.]|июл[ья.]|авг\.|сент?\.|окт\.|нояб?\.|дек\.)/i,
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY г.',
            LLL : 'D MMMM YYYY г., H:mm',
            LLLL : 'dddd, D MMMM YYYY г., H:mm'
        },
        calendar : {
            sameDay: '[Сегодня, в] LT',
            nextDay: '[Завтра, в] LT',
            lastDay: '[Вчера, в] LT',
            nextWeek: function (now) {
                if (now.week() !== this.week()) {
                    switch (this.day()) {
                        case 0:
                            return '[В следующее] dddd, [в] LT';
                        case 1:
                        case 2:
                        case 4:
                            return '[В следующий] dddd, [в] LT';
                        case 3:
                        case 5:
                        case 6:
                            return '[В следующую] dddd, [в] LT';
                    }
                } else {
                    if (this.day() === 2) {
                        return '[Во] dddd, [в] LT';
                    } else {
                        return '[В] dddd, [в] LT';
                    }
                }
            },
            lastWeek: function (now) {
                if (now.week() !== this.week()) {
                    switch (this.day()) {
                        case 0:
                            return '[В прошлое] dddd, [в] LT';
                        case 1:
                        case 2:
                        case 4:
                            return '[В прошлый] dddd, [в] LT';
                        case 3:
                        case 5:
                        case 6:
                            return '[В прошлую] dddd, [в] LT';
                    }
                } else {
                    if (this.day() === 2) {
                        return '[Во] dddd, [в] LT';
                    } else {
                        return '[В] dddd, [в] LT';
                    }
                }
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : 'через %s',
            past : '%s назад',
            s : 'несколько секунд',
            ss : relativeTimeWithPlural,
            m : relativeTimeWithPlural,
            mm : relativeTimeWithPlural,
            h : 'час',
            hh : relativeTimeWithPlural,
            d : 'день',
            dd : relativeTimeWithPlural,
            M : 'месяц',
            MM : relativeTimeWithPlural,
            y : 'год',
            yy : relativeTimeWithPlural
        },
        meridiemParse: /ночи|утра|дня|вечера/i,
        isPM : function (input) {
            return /^(дня|вечера)$/.test(input);
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'ночи';
            } else if (hour < 12) {
                return 'утра';
            } else if (hour < 17) {
                return 'дня';
            } else {
                return 'вечера';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(й|го|я)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'M':
                case 'd':
                case 'DDD':
                    return number + '-й';
                case 'D':
                    return number + '-го';
                case 'w':
                case 'W':
                    return number + '-я';
                default:
                    return number;
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return ru;

})));


/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var months = [
        'جنوري',
        'فيبروري',
        'مارچ',
        'اپريل',
        'مئي',
        'جون',
        'جولاءِ',
        'آگسٽ',
        'سيپٽمبر',
        'آڪٽوبر',
        'نومبر',
        'ڊسمبر'
    ];
    var days = [
        'آچر',
        'سومر',
        'اڱارو',
        'اربع',
        'خميس',
        'جمع',
        'ڇنڇر'
    ];

    var sd = moment.defineLocale('sd', {
        months : months,
        monthsShort : months,
        weekdays : days,
        weekdaysShort : days,
        weekdaysMin : days,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd، D MMMM YYYY HH:mm'
        },
        meridiemParse: /صبح|شام/,
        isPM : function (input) {
            return 'شام' === input;
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'صبح';
            }
            return 'شام';
        },
        calendar : {
            sameDay : '[اڄ] LT',
            nextDay : '[سڀاڻي] LT',
            nextWeek : 'dddd [اڳين هفتي تي] LT',
            lastDay : '[ڪالهه] LT',
            lastWeek : '[گزريل هفتي] dddd [تي] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s پوء',
            past : '%s اڳ',
            s : 'چند سيڪنڊ',
            ss : '%d سيڪنڊ',
            m : 'هڪ منٽ',
            mm : '%d منٽ',
            h : 'هڪ ڪلاڪ',
            hh : '%d ڪلاڪ',
            d : 'هڪ ڏينهن',
            dd : '%d ڏينهن',
            M : 'هڪ مهينو',
            MM : '%d مهينا',
            y : 'هڪ سال',
            yy : '%d سال'
        },
        preparse: function (string) {
            return string.replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/,/g, '،');
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return sd;

})));


/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var se = moment.defineLocale('se', {
        months : 'ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu'.split('_'),
        monthsShort : 'ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov'.split('_'),
        weekdays : 'sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat'.split('_'),
        weekdaysShort : 'sotn_vuos_maŋ_gask_duor_bear_láv'.split('_'),
        weekdaysMin : 's_v_m_g_d_b_L'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'MMMM D. [b.] YYYY',
            LLL : 'MMMM D. [b.] YYYY [ti.] HH:mm',
            LLLL : 'dddd, MMMM D. [b.] YYYY [ti.] HH:mm'
        },
        calendar : {
            sameDay: '[otne ti] LT',
            nextDay: '[ihttin ti] LT',
            nextWeek: 'dddd [ti] LT',
            lastDay: '[ikte ti] LT',
            lastWeek: '[ovddit] dddd [ti] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : '%s geažes',
            past : 'maŋit %s',
            s : 'moadde sekunddat',
            ss: '%d sekunddat',
            m : 'okta minuhta',
            mm : '%d minuhtat',
            h : 'okta diimmu',
            hh : '%d diimmut',
            d : 'okta beaivi',
            dd : '%d beaivvit',
            M : 'okta mánnu',
            MM : '%d mánut',
            y : 'okta jahki',
            yy : '%d jagit'
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return se;

})));


/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    /*jshint -W100*/
    var si = moment.defineLocale('si', {
        months : 'ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්'.split('_'),
        monthsShort : 'ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ'.split('_'),
        weekdays : 'ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා'.split('_'),
        weekdaysShort : 'ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන'.split('_'),
        weekdaysMin : 'ඉ_ස_අ_බ_බ්‍ර_සි_සෙ'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'a h:mm',
            LTS : 'a h:mm:ss',
            L : 'YYYY/MM/DD',
            LL : 'YYYY MMMM D',
            LLL : 'YYYY MMMM D, a h:mm',
            LLLL : 'YYYY MMMM D [වැනි] dddd, a h:mm:ss'
        },
        calendar : {
            sameDay : '[අද] LT[ට]',
            nextDay : '[හෙට] LT[ට]',
            nextWeek : 'dddd LT[ට]',
            lastDay : '[ඊයේ] LT[ට]',
            lastWeek : '[පසුගිය] dddd LT[ට]',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%sකින්',
            past : '%sකට පෙර',
            s : 'තත්පර කිහිපය',
            ss : 'තත්පර %d',
            m : 'මිනිත්තුව',
            mm : 'මිනිත්තු %d',
            h : 'පැය',
            hh : 'පැය %d',
            d : 'දිනය',
            dd : 'දින %d',
            M : 'මාසය',
            MM : 'මාස %d',
            y : 'වසර',
            yy : 'වසර %d'
        },
        dayOfMonthOrdinalParse: /\d{1,2} වැනි/,
        ordinal : function (number) {
            return number + ' වැනි';
        },
        meridiemParse : /පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,
        isPM : function (input) {
            return input === 'ප.ව.' || input === 'පස් වරු';
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours > 11) {
                return isLower ? 'ප.ව.' : 'පස් වරු';
            } else {
                return isLower ? 'පෙ.ව.' : 'පෙර වරු';
            }
        }
    });

    return si;

})));


/***/ }),
/* 177 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var months = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_'),
        monthsShort = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');
    function plural(n) {
        return (n > 1) && (n < 5);
    }
    function translate(number, withoutSuffix, key, isFuture) {
        var result = number + ' ';
        switch (key) {
            case 's':  // a few seconds / in a few seconds / a few seconds ago
                return (withoutSuffix || isFuture) ? 'pár sekúnd' : 'pár sekundami';
            case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'sekundy' : 'sekúnd');
                } else {
                    return result + 'sekundami';
                }
                break;
            case 'm':  // a minute / in a minute / a minute ago
                return withoutSuffix ? 'minúta' : (isFuture ? 'minútu' : 'minútou');
            case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'minúty' : 'minút');
                } else {
                    return result + 'minútami';
                }
                break;
            case 'h':  // an hour / in an hour / an hour ago
                return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');
            case 'hh': // 9 hours / in 9 hours / 9 hours ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'hodiny' : 'hodín');
                } else {
                    return result + 'hodinami';
                }
                break;
            case 'd':  // a day / in a day / a day ago
                return (withoutSuffix || isFuture) ? 'deň' : 'dňom';
            case 'dd': // 9 days / in 9 days / 9 days ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'dni' : 'dní');
                } else {
                    return result + 'dňami';
                }
                break;
            case 'M':  // a month / in a month / a month ago
                return (withoutSuffix || isFuture) ? 'mesiac' : 'mesiacom';
            case 'MM': // 9 months / in 9 months / 9 months ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'mesiace' : 'mesiacov');
                } else {
                    return result + 'mesiacmi';
                }
                break;
            case 'y':  // a year / in a year / a year ago
                return (withoutSuffix || isFuture) ? 'rok' : 'rokom';
            case 'yy': // 9 years / in 9 years / 9 years ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'roky' : 'rokov');
                } else {
                    return result + 'rokmi';
                }
                break;
        }
    }

    var sk = moment.defineLocale('sk', {
        months : months,
        monthsShort : monthsShort,
        weekdays : 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),
        weekdaysShort : 'ne_po_ut_st_št_pi_so'.split('_'),
        weekdaysMin : 'ne_po_ut_st_št_pi_so'.split('_'),
        longDateFormat : {
            LT: 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY H:mm',
            LLLL : 'dddd D. MMMM YYYY H:mm'
        },
        calendar : {
            sameDay: '[dnes o] LT',
            nextDay: '[zajtra o] LT',
            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[v nedeľu o] LT';
                    case 1:
                    case 2:
                        return '[v] dddd [o] LT';
                    case 3:
                        return '[v stredu o] LT';
                    case 4:
                        return '[vo štvrtok o] LT';
                    case 5:
                        return '[v piatok o] LT';
                    case 6:
                        return '[v sobotu o] LT';
                }
            },
            lastDay: '[včera o] LT',
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[minulú nedeľu o] LT';
                    case 1:
                    case 2:
                        return '[minulý] dddd [o] LT';
                    case 3:
                        return '[minulú stredu o] LT';
                    case 4:
                    case 5:
                        return '[minulý] dddd [o] LT';
                    case 6:
                        return '[minulú sobotu o] LT';
                }
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : 'za %s',
            past : 'pred %s',
            s : translate,
            ss : translate,
            m : translate,
            mm : translate,
            h : translate,
            hh : translate,
            d : translate,
            dd : translate,
            M : translate,
            MM : translate,
            y : translate,
            yy : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return sk;

})));


/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var result = number + ' ';
        switch (key) {
            case 's':
                return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';
            case 'ss':
                if (number === 1) {
                    result += withoutSuffix ? 'sekundo' : 'sekundi';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'sekundi' : 'sekundah';
                } else if (number < 5) {
                    result += withoutSuffix || isFuture ? 'sekunde' : 'sekundah';
                } else {
                    result += 'sekund';
                }
                return result;
            case 'm':
                return withoutSuffix ? 'ena minuta' : 'eno minuto';
            case 'mm':
                if (number === 1) {
                    result += withoutSuffix ? 'minuta' : 'minuto';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'minuti' : 'minutama';
                } else if (number < 5) {
                    result += withoutSuffix || isFuture ? 'minute' : 'minutami';
                } else {
                    result += withoutSuffix || isFuture ? 'minut' : 'minutami';
                }
                return result;
            case 'h':
                return withoutSuffix ? 'ena ura' : 'eno uro';
            case 'hh':
                if (number === 1) {
                    result += withoutSuffix ? 'ura' : 'uro';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'uri' : 'urama';
                } else if (number < 5) {
                    result += withoutSuffix || isFuture ? 'ure' : 'urami';
                } else {
                    result += withoutSuffix || isFuture ? 'ur' : 'urami';
                }
                return result;
            case 'd':
                return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';
            case 'dd':
                if (number === 1) {
                    result += withoutSuffix || isFuture ? 'dan' : 'dnem';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';
                } else {
                    result += withoutSuffix || isFuture ? 'dni' : 'dnevi';
                }
                return result;
            case 'M':
                return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';
            case 'MM':
                if (number === 1) {
                    result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';
                } else if (number < 5) {
                    result += withoutSuffix || isFuture ? 'mesece' : 'meseci';
                } else {
                    result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';
                }
                return result;
            case 'y':
                return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';
            case 'yy':
                if (number === 1) {
                    result += withoutSuffix || isFuture ? 'leto' : 'letom';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'leti' : 'letoma';
                } else if (number < 5) {
                    result += withoutSuffix || isFuture ? 'leta' : 'leti';
                } else {
                    result += withoutSuffix || isFuture ? 'let' : 'leti';
                }
                return result;
        }
    }

    var sl = moment.defineLocale('sl', {
        months : 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),
        monthsShort : 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),
        monthsParseExact: true,
        weekdays : 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),
        weekdaysShort : 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),
        weekdaysMin : 'ne_po_to_sr_če_pe_so'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM YYYY',
            LLL : 'D. MMMM YYYY H:mm',
            LLLL : 'dddd, D. MMMM YYYY H:mm'
        },
        calendar : {
            sameDay  : '[danes ob] LT',
            nextDay  : '[jutri ob] LT',

            nextWeek : function () {
                switch (this.day()) {
                    case 0:
                        return '[v] [nedeljo] [ob] LT';
                    case 3:
                        return '[v] [sredo] [ob] LT';
                    case 6:
                        return '[v] [soboto] [ob] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[v] dddd [ob] LT';
                }
            },
            lastDay  : '[včeraj ob] LT',
            lastWeek : function () {
                switch (this.day()) {
                    case 0:
                        return '[prejšnjo] [nedeljo] [ob] LT';
                    case 3:
                        return '[prejšnjo] [sredo] [ob] LT';
                    case 6:
                        return '[prejšnjo] [soboto] [ob] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[prejšnji] dddd [ob] LT';
                }
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'čez %s',
            past   : 'pred %s',
            s      : processRelativeTime,
            ss     : processRelativeTime,
            m      : processRelativeTime,
            mm     : processRelativeTime,
            h      : processRelativeTime,
            hh     : processRelativeTime,
            d      : processRelativeTime,
            dd     : processRelativeTime,
            M      : processRelativeTime,
            MM     : processRelativeTime,
            y      : processRelativeTime,
            yy     : processRelativeTime
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return sl;

})));


/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var sq = moment.defineLocale('sq', {
        months : 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split('_'),
        monthsShort : 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),
        weekdays : 'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split('_'),
        weekdaysShort : 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),
        weekdaysMin : 'D_H_Ma_Më_E_P_Sh'.split('_'),
        weekdaysParseExact : true,
        meridiemParse: /PD|MD/,
        isPM: function (input) {
            return input.charAt(0) === 'M';
        },
        meridiem : function (hours, minutes, isLower) {
            return hours < 12 ? 'PD' : 'MD';
        },
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Sot në] LT',
            nextDay : '[Nesër në] LT',
            nextWeek : 'dddd [në] LT',
            lastDay : '[Dje në] LT',
            lastWeek : 'dddd [e kaluar në] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'në %s',
            past : '%s më parë',
            s : 'disa sekonda',
            ss : '%d sekonda',
            m : 'një minutë',
            mm : '%d minuta',
            h : 'një orë',
            hh : '%d orë',
            d : 'një ditë',
            dd : '%d ditë',
            M : 'një muaj',
            MM : '%d muaj',
            y : 'një vit',
            yy : '%d vite'
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return sq;

})));


/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var translator = {
        words: { //Different grammatical cases
            ss: ['sekunda', 'sekunde', 'sekundi'],
            m: ['jedan minut', 'jedne minute'],
            mm: ['minut', 'minute', 'minuta'],
            h: ['jedan sat', 'jednog sata'],
            hh: ['sat', 'sata', 'sati'],
            dd: ['dan', 'dana', 'dana'],
            MM: ['mesec', 'meseca', 'meseci'],
            yy: ['godina', 'godine', 'godina']
        },
        correctGrammaticalCase: function (number, wordKey) {
            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
        },
        translate: function (number, withoutSuffix, key) {
            var wordKey = translator.words[key];
            if (key.length === 1) {
                return withoutSuffix ? wordKey[0] : wordKey[1];
            } else {
                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
            }
        }
    };

    var sr = moment.defineLocale('sr', {
        months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),
        monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),
        monthsParseExact: true,
        weekdays: 'nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota'.split('_'),
        weekdaysShort: 'ned._pon._uto._sre._čet._pet._sub.'.split('_'),
        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
        weekdaysParseExact : true,
        longDateFormat: {
            LT: 'H:mm',
            LTS : 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd, D. MMMM YYYY H:mm'
        },
        calendar: {
            sameDay: '[danas u] LT',
            nextDay: '[sutra u] LT',
            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[u] [nedelju] [u] LT';
                    case 3:
                        return '[u] [sredu] [u] LT';
                    case 6:
                        return '[u] [subotu] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[u] dddd [u] LT';
                }
            },
            lastDay  : '[juče u] LT',
            lastWeek : function () {
                var lastWeekDays = [
                    '[prošle] [nedelje] [u] LT',
                    '[prošlog] [ponedeljka] [u] LT',
                    '[prošlog] [utorka] [u] LT',
                    '[prošle] [srede] [u] LT',
                    '[prošlog] [četvrtka] [u] LT',
                    '[prošlog] [petka] [u] LT',
                    '[prošle] [subote] [u] LT'
                ];
                return lastWeekDays[this.day()];
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'za %s',
            past   : 'pre %s',
            s      : 'nekoliko sekundi',
            ss     : translator.translate,
            m      : translator.translate,
            mm     : translator.translate,
            h      : translator.translate,
            hh     : translator.translate,
            d      : 'dan',
            dd     : translator.translate,
            M      : 'mesec',
            MM     : translator.translate,
            y      : 'godinu',
            yy     : translator.translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return sr;

})));


/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var translator = {
        words: { //Different grammatical cases
            ss: ['секунда', 'секунде', 'секунди'],
            m: ['један минут', 'једне минуте'],
            mm: ['минут', 'минуте', 'минута'],
            h: ['један сат', 'једног сата'],
            hh: ['сат', 'сата', 'сати'],
            dd: ['дан', 'дана', 'дана'],
            MM: ['месец', 'месеца', 'месеци'],
            yy: ['година', 'године', 'година']
        },
        correctGrammaticalCase: function (number, wordKey) {
            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
        },
        translate: function (number, withoutSuffix, key) {
            var wordKey = translator.words[key];
            if (key.length === 1) {
                return withoutSuffix ? wordKey[0] : wordKey[1];
            } else {
                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
            }
        }
    };

    var srCyrl = moment.defineLocale('sr-cyrl', {
        months: 'јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар'.split('_'),
        monthsShort: 'јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.'.split('_'),
        monthsParseExact: true,
        weekdays: 'недеља_понедељак_уторак_среда_четвртак_петак_субота'.split('_'),
        weekdaysShort: 'нед._пон._уто._сре._чет._пет._суб.'.split('_'),
        weekdaysMin: 'не_по_ут_ср_че_пе_су'.split('_'),
        weekdaysParseExact : true,
        longDateFormat: {
            LT: 'H:mm',
            LTS : 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd, D. MMMM YYYY H:mm'
        },
        calendar: {
            sameDay: '[данас у] LT',
            nextDay: '[сутра у] LT',
            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[у] [недељу] [у] LT';
                    case 3:
                        return '[у] [среду] [у] LT';
                    case 6:
                        return '[у] [суботу] [у] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[у] dddd [у] LT';
                }
            },
            lastDay  : '[јуче у] LT',
            lastWeek : function () {
                var lastWeekDays = [
                    '[прошле] [недеље] [у] LT',
                    '[прошлог] [понедељка] [у] LT',
                    '[прошлог] [уторка] [у] LT',
                    '[прошле] [среде] [у] LT',
                    '[прошлог] [четвртка] [у] LT',
                    '[прошлог] [петка] [у] LT',
                    '[прошле] [суботе] [у] LT'
                ];
                return lastWeekDays[this.day()];
            },
            sameElse : 'L'
        },
        relativeTime : {
            future : 'за %s',
            past   : 'пре %s',
            s      : 'неколико секунди',
            ss     : translator.translate,
            m      : translator.translate,
            mm     : translator.translate,
            h      : translator.translate,
            hh     : translator.translate,
            d      : 'дан',
            dd     : translator.translate,
            M      : 'месец',
            MM     : translator.translate,
            y      : 'годину',
            yy     : translator.translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return srCyrl;

})));


/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var ss = moment.defineLocale('ss', {
        months : "Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni".split('_'),
        monthsShort : 'Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo'.split('_'),
        weekdays : 'Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo'.split('_'),
        weekdaysShort : 'Lis_Umb_Lsb_Les_Lsi_Lsh_Umg'.split('_'),
        weekdaysMin : 'Li_Us_Lb_Lt_Ls_Lh_Ug'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY h:mm A',
            LLLL : 'dddd, D MMMM YYYY h:mm A'
        },
        calendar : {
            sameDay : '[Namuhla nga] LT',
            nextDay : '[Kusasa nga] LT',
            nextWeek : 'dddd [nga] LT',
            lastDay : '[Itolo nga] LT',
            lastWeek : 'dddd [leliphelile] [nga] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'nga %s',
            past : 'wenteka nga %s',
            s : 'emizuzwana lomcane',
            ss : '%d mzuzwana',
            m : 'umzuzu',
            mm : '%d emizuzu',
            h : 'lihora',
            hh : '%d emahora',
            d : 'lilanga',
            dd : '%d emalanga',
            M : 'inyanga',
            MM : '%d tinyanga',
            y : 'umnyaka',
            yy : '%d iminyaka'
        },
        meridiemParse: /ekuseni|emini|entsambama|ebusuku/,
        meridiem : function (hours, minutes, isLower) {
            if (hours < 11) {
                return 'ekuseni';
            } else if (hours < 15) {
                return 'emini';
            } else if (hours < 19) {
                return 'entsambama';
            } else {
                return 'ebusuku';
            }
        },
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'ekuseni') {
                return hour;
            } else if (meridiem === 'emini') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'entsambama' || meridiem === 'ebusuku') {
                if (hour === 0) {
                    return 0;
                }
                return hour + 12;
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}/,
        ordinal : '%d',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return ss;

})));


/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var sv = moment.defineLocale('sv', {
        months : 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),
        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
        weekdays : 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),
        weekdaysShort : 'sön_mån_tis_ons_tor_fre_lör'.split('_'),
        weekdaysMin : 'sö_må_ti_on_to_fr_lö'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY-MM-DD',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY [kl.] HH:mm',
            LLLL : 'dddd D MMMM YYYY [kl.] HH:mm',
            lll : 'D MMM YYYY HH:mm',
            llll : 'ddd D MMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[Idag] LT',
            nextDay: '[Imorgon] LT',
            lastDay: '[Igår] LT',
            nextWeek: '[På] dddd LT',
            lastWeek: '[I] dddd[s] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'om %s',
            past : 'för %s sedan',
            s : 'några sekunder',
            ss : '%d sekunder',
            m : 'en minut',
            mm : '%d minuter',
            h : 'en timme',
            hh : '%d timmar',
            d : 'en dag',
            dd : '%d dagar',
            M : 'en månad',
            MM : '%d månader',
            y : 'ett år',
            yy : '%d år'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(e|a)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'e' :
                (b === 1) ? 'a' :
                (b === 2) ? 'a' :
                (b === 3) ? 'e' : 'e';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return sv;

})));


/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var sw = moment.defineLocale('sw', {
        months : 'Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba'.split('_'),
        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des'.split('_'),
        weekdays : 'Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi'.split('_'),
        weekdaysShort : 'Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos'.split('_'),
        weekdaysMin : 'J2_J3_J4_J5_Al_Ij_J1'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[leo saa] LT',
            nextDay : '[kesho saa] LT',
            nextWeek : '[wiki ijayo] dddd [saat] LT',
            lastDay : '[jana] LT',
            lastWeek : '[wiki iliyopita] dddd [saat] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s baadaye',
            past : 'tokea %s',
            s : 'hivi punde',
            ss : 'sekunde %d',
            m : 'dakika moja',
            mm : 'dakika %d',
            h : 'saa limoja',
            hh : 'masaa %d',
            d : 'siku moja',
            dd : 'masiku %d',
            M : 'mwezi mmoja',
            MM : 'miezi %d',
            y : 'mwaka mmoja',
            yy : 'miaka %d'
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return sw;

})));


/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var symbolMap = {
        '1': '௧',
        '2': '௨',
        '3': '௩',
        '4': '௪',
        '5': '௫',
        '6': '௬',
        '7': '௭',
        '8': '௮',
        '9': '௯',
        '0': '௦'
    }, numberMap = {
        '௧': '1',
        '௨': '2',
        '௩': '3',
        '௪': '4',
        '௫': '5',
        '௬': '6',
        '௭': '7',
        '௮': '8',
        '௯': '9',
        '௦': '0'
    };

    var ta = moment.defineLocale('ta', {
        months : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
        monthsShort : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
        weekdays : 'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split('_'),
        weekdaysShort : 'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split('_'),
        weekdaysMin : 'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, HH:mm',
            LLLL : 'dddd, D MMMM YYYY, HH:mm'
        },
        calendar : {
            sameDay : '[இன்று] LT',
            nextDay : '[நாளை] LT',
            nextWeek : 'dddd, LT',
            lastDay : '[நேற்று] LT',
            lastWeek : '[கடந்த வாரம்] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s இல்',
            past : '%s முன்',
            s : 'ஒரு சில விநாடிகள்',
            ss : '%d விநாடிகள்',
            m : 'ஒரு நிமிடம்',
            mm : '%d நிமிடங்கள்',
            h : 'ஒரு மணி நேரம்',
            hh : '%d மணி நேரம்',
            d : 'ஒரு நாள்',
            dd : '%d நாட்கள்',
            M : 'ஒரு மாதம்',
            MM : '%d மாதங்கள்',
            y : 'ஒரு வருடம்',
            yy : '%d ஆண்டுகள்'
        },
        dayOfMonthOrdinalParse: /\d{1,2}வது/,
        ordinal : function (number) {
            return number + 'வது';
        },
        preparse: function (string) {
            return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        // refer http://ta.wikipedia.org/s/1er1
        meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,
        meridiem : function (hour, minute, isLower) {
            if (hour < 2) {
                return ' யாமம்';
            } else if (hour < 6) {
                return ' வைகறை';  // வைகறை
            } else if (hour < 10) {
                return ' காலை'; // காலை
            } else if (hour < 14) {
                return ' நண்பகல்'; // நண்பகல்
            } else if (hour < 18) {
                return ' எற்பாடு'; // எற்பாடு
            } else if (hour < 22) {
                return ' மாலை'; // மாலை
            } else {
                return ' யாமம்';
            }
        },
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'யாமம்') {
                return hour < 2 ? hour : hour + 12;
            } else if (meridiem === 'வைகறை' || meridiem === 'காலை') {
                return hour;
            } else if (meridiem === 'நண்பகல்') {
                return hour >= 10 ? hour : hour + 12;
            } else {
                return hour + 12;
            }
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 6th is the first week of the year.
        }
    });

    return ta;

})));


/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var te = moment.defineLocale('te', {
        months : 'జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జులై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్'.split('_'),
        monthsShort : 'జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జులై_ఆగ._సెప్._అక్టో._నవ._డిసె.'.split('_'),
        monthsParseExact : true,
        weekdays : 'ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం'.split('_'),
        weekdaysShort : 'ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని'.split('_'),
        weekdaysMin : 'ఆ_సో_మం_బు_గు_శు_శ'.split('_'),
        longDateFormat : {
            LT : 'A h:mm',
            LTS : 'A h:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY, A h:mm',
            LLLL : 'dddd, D MMMM YYYY, A h:mm'
        },
        calendar : {
            sameDay : '[నేడు] LT',
            nextDay : '[రేపు] LT',
            nextWeek : 'dddd, LT',
            lastDay : '[నిన్న] LT',
            lastWeek : '[గత] dddd, LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s లో',
            past : '%s క్రితం',
            s : 'కొన్ని క్షణాలు',
            ss : '%d సెకన్లు',
            m : 'ఒక నిమిషం',
            mm : '%d నిమిషాలు',
            h : 'ఒక గంట',
            hh : '%d గంటలు',
            d : 'ఒక రోజు',
            dd : '%d రోజులు',
            M : 'ఒక నెల',
            MM : '%d నెలలు',
            y : 'ఒక సంవత్సరం',
            yy : '%d సంవత్సరాలు'
        },
        dayOfMonthOrdinalParse : /\d{1,2}వ/,
        ordinal : '%dవ',
        meridiemParse: /రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'రాత్రి') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'ఉదయం') {
                return hour;
            } else if (meridiem === 'మధ్యాహ్నం') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'సాయంత్రం') {
                return hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'రాత్రి';
            } else if (hour < 10) {
                return 'ఉదయం';
            } else if (hour < 17) {
                return 'మధ్యాహ్నం';
            } else if (hour < 20) {
                return 'సాయంత్రం';
            } else {
                return 'రాత్రి';
            }
        },
        week : {
            dow : 0, // Sunday is the first day of the week.
            doy : 6  // The week that contains Jan 6th is the first week of the year.
        }
    });

    return te;

})));


/***/ }),
/* 187 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var tet = moment.defineLocale('tet', {
        months : 'Janeiru_Fevereiru_Marsu_Abril_Maiu_Juñu_Jullu_Agustu_Setembru_Outubru_Novembru_Dezembru'.split('_'),
        monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),
        weekdays : 'Domingu_Segunda_Tersa_Kuarta_Kinta_Sesta_Sabadu'.split('_'),
        weekdaysShort : 'Dom_Seg_Ters_Kua_Kint_Sest_Sab'.split('_'),
        weekdaysMin : 'Do_Seg_Te_Ku_Ki_Ses_Sa'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[Ohin iha] LT',
            nextDay: '[Aban iha] LT',
            nextWeek: 'dddd [iha] LT',
            lastDay: '[Horiseik iha] LT',
            lastWeek: 'dddd [semana kotuk] [iha] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'iha %s',
            past : '%s liuba',
            s : 'minutu balun',
            ss : 'minutu %d',
            m : 'minutu ida',
            mm : 'minutu %d',
            h : 'oras ida',
            hh : 'oras %d',
            d : 'loron ida',
            dd : 'loron %d',
            M : 'fulan ida',
            MM : 'fulan %d',
            y : 'tinan ida',
            yy : 'tinan %d'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return tet;

})));


/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var suffixes = {
        0: '-ум',
        1: '-ум',
        2: '-юм',
        3: '-юм',
        4: '-ум',
        5: '-ум',
        6: '-ум',
        7: '-ум',
        8: '-ум',
        9: '-ум',
        10: '-ум',
        12: '-ум',
        13: '-ум',
        20: '-ум',
        30: '-юм',
        40: '-ум',
        50: '-ум',
        60: '-ум',
        70: '-ум',
        80: '-ум',
        90: '-ум',
        100: '-ум'
    };

    var tg = moment.defineLocale('tg', {
        months : 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split('_'),
        monthsShort : 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),
        weekdays : 'якшанбе_душанбе_сешанбе_чоршанбе_панҷшанбе_ҷумъа_шанбе'.split('_'),
        weekdaysShort : 'яшб_дшб_сшб_чшб_пшб_ҷум_шнб'.split('_'),
        weekdaysMin : 'яш_дш_сш_чш_пш_ҷм_шб'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[Имрӯз соати] LT',
            nextDay : '[Пагоҳ соати] LT',
            lastDay : '[Дирӯз соати] LT',
            nextWeek : 'dddd[и] [ҳафтаи оянда соати] LT',
            lastWeek : 'dddd[и] [ҳафтаи гузашта соати] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'баъди %s',
            past : '%s пеш',
            s : 'якчанд сония',
            m : 'як дақиқа',
            mm : '%d дақиқа',
            h : 'як соат',
            hh : '%d соат',
            d : 'як рӯз',
            dd : '%d рӯз',
            M : 'як моҳ',
            MM : '%d моҳ',
            y : 'як сол',
            yy : '%d сол'
        },
        meridiemParse: /шаб|субҳ|рӯз|бегоҳ/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'шаб') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'субҳ') {
                return hour;
            } else if (meridiem === 'рӯз') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'бегоҳ') {
                return hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
                return 'шаб';
            } else if (hour < 11) {
                return 'субҳ';
            } else if (hour < 16) {
                return 'рӯз';
            } else if (hour < 19) {
                return 'бегоҳ';
            } else {
                return 'шаб';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(ум|юм)/,
        ordinal: function (number) {
            var a = number % 10,
                b = number >= 100 ? 100 : null;
            return number + (suffixes[number] || suffixes[a] || suffixes[b]);
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 1th is the first week of the year.
        }
    });

    return tg;

})));


/***/ }),
/* 189 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var th = moment.defineLocale('th', {
        months : 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),
        monthsShort : 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),
        monthsParseExact: true,
        weekdays : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),
        weekdaysShort : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'), // yes, three characters difference
        weekdaysMin : 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'H:mm',
            LTS : 'H:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY เวลา H:mm',
            LLLL : 'วันddddที่ D MMMM YYYY เวลา H:mm'
        },
        meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,
        isPM: function (input) {
            return input === 'หลังเที่ยง';
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ก่อนเที่ยง';
            } else {
                return 'หลังเที่ยง';
            }
        },
        calendar : {
            sameDay : '[วันนี้ เวลา] LT',
            nextDay : '[พรุ่งนี้ เวลา] LT',
            nextWeek : 'dddd[หน้า เวลา] LT',
            lastDay : '[เมื่อวานนี้ เวลา] LT',
            lastWeek : '[วัน]dddd[ที่แล้ว เวลา] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'อีก %s',
            past : '%sที่แล้ว',
            s : 'ไม่กี่วินาที',
            ss : '%d วินาที',
            m : '1 นาที',
            mm : '%d นาที',
            h : '1 ชั่วโมง',
            hh : '%d ชั่วโมง',
            d : '1 วัน',
            dd : '%d วัน',
            M : '1 เดือน',
            MM : '%d เดือน',
            y : '1 ปี',
            yy : '%d ปี'
        }
    });

    return th;

})));


/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var tlPh = moment.defineLocale('tl-ph', {
        months : 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split('_'),
        monthsShort : 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),
        weekdays : 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split('_'),
        weekdaysShort : 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),
        weekdaysMin : 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'MM/D/YYYY',
            LL : 'MMMM D, YYYY',
            LLL : 'MMMM D, YYYY HH:mm',
            LLLL : 'dddd, MMMM DD, YYYY HH:mm'
        },
        calendar : {
            sameDay: 'LT [ngayong araw]',
            nextDay: '[Bukas ng] LT',
            nextWeek: 'LT [sa susunod na] dddd',
            lastDay: 'LT [kahapon]',
            lastWeek: 'LT [noong nakaraang] dddd',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'sa loob ng %s',
            past : '%s ang nakalipas',
            s : 'ilang segundo',
            ss : '%d segundo',
            m : 'isang minuto',
            mm : '%d minuto',
            h : 'isang oras',
            hh : '%d oras',
            d : 'isang araw',
            dd : '%d araw',
            M : 'isang buwan',
            MM : '%d buwan',
            y : 'isang taon',
            yy : '%d taon'
        },
        dayOfMonthOrdinalParse: /\d{1,2}/,
        ordinal : function (number) {
            return number;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return tlPh;

})));


/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var numbersNouns = 'pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut'.split('_');

    function translateFuture(output) {
        var time = output;
        time = (output.indexOf('jaj') !== -1) ?
        time.slice(0, -3) + 'leS' :
        (output.indexOf('jar') !== -1) ?
        time.slice(0, -3) + 'waQ' :
        (output.indexOf('DIS') !== -1) ?
        time.slice(0, -3) + 'nem' :
        time + ' pIq';
        return time;
    }

    function translatePast(output) {
        var time = output;
        time = (output.indexOf('jaj') !== -1) ?
        time.slice(0, -3) + 'Hu’' :
        (output.indexOf('jar') !== -1) ?
        time.slice(0, -3) + 'wen' :
        (output.indexOf('DIS') !== -1) ?
        time.slice(0, -3) + 'ben' :
        time + ' ret';
        return time;
    }

    function translate(number, withoutSuffix, string, isFuture) {
        var numberNoun = numberAsNoun(number);
        switch (string) {
            case 'ss':
                return numberNoun + ' lup';
            case 'mm':
                return numberNoun + ' tup';
            case 'hh':
                return numberNoun + ' rep';
            case 'dd':
                return numberNoun + ' jaj';
            case 'MM':
                return numberNoun + ' jar';
            case 'yy':
                return numberNoun + ' DIS';
        }
    }

    function numberAsNoun(number) {
        var hundred = Math.floor((number % 1000) / 100),
        ten = Math.floor((number % 100) / 10),
        one = number % 10,
        word = '';
        if (hundred > 0) {
            word += numbersNouns[hundred] + 'vatlh';
        }
        if (ten > 0) {
            word += ((word !== '') ? ' ' : '') + numbersNouns[ten] + 'maH';
        }
        if (one > 0) {
            word += ((word !== '') ? ' ' : '') + numbersNouns[one];
        }
        return (word === '') ? 'pagh' : word;
    }

    var tlh = moment.defineLocale('tlh', {
        months : 'tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’'.split('_'),
        monthsShort : 'jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’'.split('_'),
        monthsParseExact : true,
        weekdays : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
        weekdaysShort : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
        weekdaysMin : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[DaHjaj] LT',
            nextDay: '[wa’leS] LT',
            nextWeek: 'LLL',
            lastDay: '[wa’Hu’] LT',
            lastWeek: 'LLL',
            sameElse: 'L'
        },
        relativeTime : {
            future : translateFuture,
            past : translatePast,
            s : 'puS lup',
            ss : translate,
            m : 'wa’ tup',
            mm : translate,
            h : 'wa’ rep',
            hh : translate,
            d : 'wa’ jaj',
            dd : translate,
            M : 'wa’ jar',
            MM : translate,
            y : 'wa’ DIS',
            yy : translate
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return tlh;

})));


/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {


;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

    var suffixes = {
        1: '\'inci',
        5: '\'inci',
        8: '\'inci',
        70: '\'inci',
        80: '\'inci',
        2: '\'nci',
        7: '\'nci',
        20: '\'nci',
        50: '\'nci',
        3: '\'üncü',
        4: '\'üncü',
        100: '\'üncü',
        6: '\'ncı',
        9: '\'uncu',
        10: '\'uncu',
        30: '\'uncu',
        60: '\'ıncı',
        90: '\'ıncı'
    };

    var tr = moment.defineLocale('tr', {
        months : 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),
        monthsShort : 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),
        weekdays : 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),
        weekdaysShort : 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),
        weekdaysMin : 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[bugün saat] LT',
            nextDay : '[yarın saat] LT',
            nextWeek : '[gelecek] dddd [saat] LT',
            lastDay : '[dün] LT',
            lastWeek : '[geçen] dddd [saat] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s sonra',
            past : '%s önce',
            s : 'birkaç saniye',
            ss : '%d saniye',
            m : 'bir dakika',
            mm : '%d dakika',
            h : 'bir saat',
            hh : '%d saat',
            d : 'bir gün',
            dd : '%d gün',
            M : 'bir ay',
            MM : '%d ay',
            y : 'bir yıl',
            yy : '%d yıl'
        },
        ordinal: function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'Do':
                case 'DD':
                    return number;
                default:
                    if (number === 0) {  // special case for zero
                        return number + '\'ıncı';
                    }
                    var a = number % 10,
                        b = number % 100 - a,
                        c = number >= 100 ? 100 : null;
                    return number + (suffixes[a] || suffixes[b] || suffixes[c]);
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return tr;

})));


/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    // After the year there should be a slash and the amount of years since December 26, 1979 in Roman numerals.
    // This is currently too difficult (maybe even impossible) to add.
    var tzl = moment.defineLocale('tzl', {
        months : 'Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar'.split('_'),
        monthsShort : 'Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec'.split('_'),
        weekdays : 'Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi'.split('_'),
        weekdaysShort : 'Súl_Lún_Mai_Már_Xhú_Vié_Sát'.split('_'),
        weekdaysMin : 'Sú_Lú_Ma_Má_Xh_Vi_Sá'.split('_'),
        longDateFormat : {
            LT : 'HH.mm',
            LTS : 'HH.mm.ss',
            L : 'DD.MM.YYYY',
            LL : 'D. MMMM [dallas] YYYY',
            LLL : 'D. MMMM [dallas] YYYY HH.mm',
            LLLL : 'dddd, [li] D. MMMM [dallas] YYYY HH.mm'
        },
        meridiemParse: /d\'o|d\'a/i,
        isPM : function (input) {
            return 'd\'o' === input.toLowerCase();
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours > 11) {
                return isLower ? 'd\'o' : 'D\'O';
            } else {
                return isLower ? 'd\'a' : 'D\'A';
            }
        },
        calendar : {
            sameDay : '[oxhi à] LT',
            nextDay : '[demà à] LT',
            nextWeek : 'dddd [à] LT',
            lastDay : '[ieiri à] LT',
            lastWeek : '[sür el] dddd [lasteu à] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'osprei %s',
            past : 'ja%s',
            s : processRelativeTime,
            ss : processRelativeTime,
            m : processRelativeTime,
            mm : processRelativeTime,
            h : processRelativeTime,
            hh : processRelativeTime,
            d : processRelativeTime,
            dd : processRelativeTime,
            M : processRelativeTime,
            MM : processRelativeTime,
            y : processRelativeTime,
            yy : processRelativeTime
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal : '%d.',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            's': ['viensas secunds', '\'iensas secunds'],
            'ss': [number + ' secunds', '' + number + ' secunds'],
            'm': ['\'n míut', '\'iens míut'],
            'mm': [number + ' míuts', '' + number + ' míuts'],
            'h': ['\'n þora', '\'iensa þora'],
            'hh': [number + ' þoras', '' + number + ' þoras'],
            'd': ['\'n ziua', '\'iensa ziua'],
            'dd': [number + ' ziuas', '' + number + ' ziuas'],
            'M': ['\'n mes', '\'iens mes'],
            'MM': [number + ' mesen', '' + number + ' mesen'],
            'y': ['\'n ar', '\'iens ar'],
            'yy': [number + ' ars', '' + number + ' ars']
        };
        return isFuture ? format[key][0] : (withoutSuffix ? format[key][0] : format[key][1]);
    }

    return tzl;

})));


/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var tzm = moment.defineLocale('tzm', {
        months : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
        monthsShort : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
        weekdays : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
        weekdaysShort : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
        weekdaysMin : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS: 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[ⴰⵙⴷⵅ ⴴ] LT',
            nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',
            nextWeek: 'dddd [ⴴ] LT',
            lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',
            lastWeek: 'dddd [ⴴ] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s',
            past : 'ⵢⴰⵏ %s',
            s : 'ⵉⵎⵉⴽ',
            ss : '%d ⵉⵎⵉⴽ',
            m : 'ⵎⵉⵏⵓⴺ',
            mm : '%d ⵎⵉⵏⵓⴺ',
            h : 'ⵙⴰⵄⴰ',
            hh : '%d ⵜⴰⵙⵙⴰⵄⵉⵏ',
            d : 'ⴰⵙⵙ',
            dd : '%d oⵙⵙⴰⵏ',
            M : 'ⴰⵢoⵓⵔ',
            MM : '%d ⵉⵢⵢⵉⵔⵏ',
            y : 'ⴰⵙⴳⴰⵙ',
            yy : '%d ⵉⵙⴳⴰⵙⵏ'
        },
        week : {
            dow : 6, // Saturday is the first day of the week.
            doy : 12  // The week that contains Jan 12th is the first week of the year.
        }
    });

    return tzm;

})));


/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var tzmLatn = moment.defineLocale('tzm-latn', {
        months : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
        monthsShort : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
        weekdays : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
        weekdaysShort : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
        weekdaysMin : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[asdkh g] LT',
            nextDay: '[aska g] LT',
            nextWeek: 'dddd [g] LT',
            lastDay: '[assant g] LT',
            lastWeek: 'dddd [g] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : 'dadkh s yan %s',
            past : 'yan %s',
            s : 'imik',
            ss : '%d imik',
            m : 'minuḍ',
            mm : '%d minuḍ',
            h : 'saɛa',
            hh : '%d tassaɛin',
            d : 'ass',
            dd : '%d ossan',
            M : 'ayowr',
            MM : '%d iyyirn',
            y : 'asgas',
            yy : '%d isgasn'
        },
        week : {
            dow : 6, // Saturday is the first day of the week.
            doy : 12  // The week that contains Jan 12th is the first week of the year.
        }
    });

    return tzmLatn;

})));


/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js language configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var ugCn = moment.defineLocale('ug-cn', {
        months: 'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split(
            '_'
        ),
        monthsShort: 'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split(
            '_'
        ),
        weekdays: 'يەكشەنبە_دۈشەنبە_سەيشەنبە_چارشەنبە_پەيشەنبە_جۈمە_شەنبە'.split(
            '_'
        ),
        weekdaysShort: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),
        weekdaysMin: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY-MM-DD',
            LL: 'YYYY-يىلىM-ئاينىڭD-كۈنى',
            LLL: 'YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm',
            LLLL: 'dddd، YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm'
        },
        meridiemParse: /يېرىم كېچە|سەھەر|چۈشتىن بۇرۇن|چۈش|چۈشتىن كېيىن|كەچ/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (
                meridiem === 'يېرىم كېچە' ||
                meridiem === 'سەھەر' ||
                meridiem === 'چۈشتىن بۇرۇن'
            ) {
                return hour;
            } else if (meridiem === 'چۈشتىن كېيىن' || meridiem === 'كەچ') {
                return hour + 12;
            } else {
                return hour >= 11 ? hour : hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            var hm = hour * 100 + minute;
            if (hm < 600) {
                return 'يېرىم كېچە';
            } else if (hm < 900) {
                return 'سەھەر';
            } else if (hm < 1130) {
                return 'چۈشتىن بۇرۇن';
            } else if (hm < 1230) {
                return 'چۈش';
            } else if (hm < 1800) {
                return 'چۈشتىن كېيىن';
            } else {
                return 'كەچ';
            }
        },
        calendar: {
            sameDay: '[بۈگۈن سائەت] LT',
            nextDay: '[ئەتە سائەت] LT',
            nextWeek: '[كېلەركى] dddd [سائەت] LT',
            lastDay: '[تۆنۈگۈن] LT',
            lastWeek: '[ئالدىنقى] dddd [سائەت] LT',
            sameElse: 'L'
        },
        relativeTime: {
            future: '%s كېيىن',
            past: '%s بۇرۇن',
            s: 'نەچچە سېكونت',
            ss: '%d سېكونت',
            m: 'بىر مىنۇت',
            mm: '%d مىنۇت',
            h: 'بىر سائەت',
            hh: '%d سائەت',
            d: 'بىر كۈن',
            dd: '%d كۈن',
            M: 'بىر ئاي',
            MM: '%d ئاي',
            y: 'بىر يىل',
            yy: '%d يىل'
        },

        dayOfMonthOrdinalParse: /\d{1,2}(-كۈنى|-ئاي|-ھەپتە)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                    return number + '-كۈنى';
                case 'w':
                case 'W':
                    return number + '-ھەپتە';
                default:
                    return number;
            }
        },
        preparse: function (string) {
            return string.replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/,/g, '،');
        },
        week: {
            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效
            dow: 1, // Monday is the first day of the week.
            doy: 7 // The week that contains Jan 1st is the first week of the year.
        }
    });

    return ugCn;

})));


/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    function plural(word, num) {
        var forms = word.split('_');
        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
    }
    function relativeTimeWithPlural(number, withoutSuffix, key) {
        var format = {
            'ss': withoutSuffix ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд',
            'mm': withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',
            'hh': withoutSuffix ? 'година_години_годин' : 'годину_години_годин',
            'dd': 'день_дні_днів',
            'MM': 'місяць_місяці_місяців',
            'yy': 'рік_роки_років'
        };
        if (key === 'm') {
            return withoutSuffix ? 'хвилина' : 'хвилину';
        }
        else if (key === 'h') {
            return withoutSuffix ? 'година' : 'годину';
        }
        else {
            return number + ' ' + plural(format[key], +number);
        }
    }
    function weekdaysCaseReplace(m, format) {
        var weekdays = {
            'nominative': 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),
            'accusative': 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),
            'genitive': 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')
        };

        if (m === true) {
            return weekdays['nominative'].slice(1, 7).concat(weekdays['nominative'].slice(0, 1));
        }
        if (!m) {
            return weekdays['nominative'];
        }

        var nounCase = (/(\[[ВвУу]\]) ?dddd/).test(format) ?
            'accusative' :
            ((/\[?(?:минулої|наступної)? ?\] ?dddd/).test(format) ?
                'genitive' :
                'nominative');
        return weekdays[nounCase][m.day()];
    }
    function processHoursFunction(str) {
        return function () {
            return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';
        };
    }

    var uk = moment.defineLocale('uk', {
        months : {
            'format': 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_'),
            'standalone': 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_')
        },
        monthsShort : 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),
        weekdays : weekdaysCaseReplace,
        weekdaysShort : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
        weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD.MM.YYYY',
            LL : 'D MMMM YYYY р.',
            LLL : 'D MMMM YYYY р., HH:mm',
            LLLL : 'dddd, D MMMM YYYY р., HH:mm'
        },
        calendar : {
            sameDay: processHoursFunction('[Сьогодні '),
            nextDay: processHoursFunction('[Завтра '),
            lastDay: processHoursFunction('[Вчора '),
            nextWeek: processHoursFunction('[У] dddd ['),
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                    case 3:
                    case 5:
                    case 6:
                        return processHoursFunction('[Минулої] dddd [').call(this);
                    case 1:
                    case 2:
                    case 4:
                        return processHoursFunction('[Минулого] dddd [').call(this);
                }
            },
            sameElse: 'L'
        },
        relativeTime : {
            future : 'за %s',
            past : '%s тому',
            s : 'декілька секунд',
            ss : relativeTimeWithPlural,
            m : relativeTimeWithPlural,
            mm : relativeTimeWithPlural,
            h : 'годину',
            hh : relativeTimeWithPlural,
            d : 'день',
            dd : relativeTimeWithPlural,
            M : 'місяць',
            MM : relativeTimeWithPlural,
            y : 'рік',
            yy : relativeTimeWithPlural
        },
        // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason
        meridiemParse: /ночі|ранку|дня|вечора/,
        isPM: function (input) {
            return /^(дня|вечора)$/.test(input);
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 4) {
                return 'ночі';
            } else if (hour < 12) {
                return 'ранку';
            } else if (hour < 17) {
                return 'дня';
            } else {
                return 'вечора';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(й|го)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'M':
                case 'd':
                case 'DDD':
                case 'w':
                case 'W':
                    return number + '-й';
                case 'D':
                    return number + '-го';
                default:
                    return number;
            }
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return uk;

})));


/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var months = [
        'جنوری',
        'فروری',
        'مارچ',
        'اپریل',
        'مئی',
        'جون',
        'جولائی',
        'اگست',
        'ستمبر',
        'اکتوبر',
        'نومبر',
        'دسمبر'
    ];
    var days = [
        'اتوار',
        'پیر',
        'منگل',
        'بدھ',
        'جمعرات',
        'جمعہ',
        'ہفتہ'
    ];

    var ur = moment.defineLocale('ur', {
        months : months,
        monthsShort : months,
        weekdays : days,
        weekdaysShort : days,
        weekdaysMin : days,
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd، D MMMM YYYY HH:mm'
        },
        meridiemParse: /صبح|شام/,
        isPM : function (input) {
            return 'شام' === input;
        },
        meridiem : function (hour, minute, isLower) {
            if (hour < 12) {
                return 'صبح';
            }
            return 'شام';
        },
        calendar : {
            sameDay : '[آج بوقت] LT',
            nextDay : '[کل بوقت] LT',
            nextWeek : 'dddd [بوقت] LT',
            lastDay : '[گذشتہ روز بوقت] LT',
            lastWeek : '[گذشتہ] dddd [بوقت] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : '%s بعد',
            past : '%s قبل',
            s : 'چند سیکنڈ',
            ss : '%d سیکنڈ',
            m : 'ایک منٹ',
            mm : '%d منٹ',
            h : 'ایک گھنٹہ',
            hh : '%d گھنٹے',
            d : 'ایک دن',
            dd : '%d دن',
            M : 'ایک ماہ',
            MM : '%d ماہ',
            y : 'ایک سال',
            yy : '%d سال'
        },
        preparse: function (string) {
            return string.replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/,/g, '،');
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return ur;

})));


/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var uz = moment.defineLocale('uz', {
        months : 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split('_'),
        monthsShort : 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),
        weekdays : 'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split('_'),
        weekdaysShort : 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),
        weekdaysMin : 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'D MMMM YYYY, dddd HH:mm'
        },
        calendar : {
            sameDay : '[Бугун соат] LT [да]',
            nextDay : '[Эртага] LT [да]',
            nextWeek : 'dddd [куни соат] LT [да]',
            lastDay : '[Кеча соат] LT [да]',
            lastWeek : '[Утган] dddd [куни соат] LT [да]',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'Якин %s ичида',
            past : 'Бир неча %s олдин',
            s : 'фурсат',
            ss : '%d фурсат',
            m : 'бир дакика',
            mm : '%d дакика',
            h : 'бир соат',
            hh : '%d соат',
            d : 'бир кун',
            dd : '%d кун',
            M : 'бир ой',
            MM : '%d ой',
            y : 'бир йил',
            yy : '%d йил'
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return uz;

})));


/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var uzLatn = moment.defineLocale('uz-latn', {
        months : 'Yanvar_Fevral_Mart_Aprel_May_Iyun_Iyul_Avgust_Sentabr_Oktabr_Noyabr_Dekabr'.split('_'),
        monthsShort : 'Yan_Fev_Mar_Apr_May_Iyun_Iyul_Avg_Sen_Okt_Noy_Dek'.split('_'),
        weekdays : 'Yakshanba_Dushanba_Seshanba_Chorshanba_Payshanba_Juma_Shanba'.split('_'),
        weekdaysShort : 'Yak_Dush_Sesh_Chor_Pay_Jum_Shan'.split('_'),
        weekdaysMin : 'Ya_Du_Se_Cho_Pa_Ju_Sha'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'D MMMM YYYY, dddd HH:mm'
        },
        calendar : {
            sameDay : '[Bugun soat] LT [da]',
            nextDay : '[Ertaga] LT [da]',
            nextWeek : 'dddd [kuni soat] LT [da]',
            lastDay : '[Kecha soat] LT [da]',
            lastWeek : '[O\'tgan] dddd [kuni soat] LT [da]',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'Yaqin %s ichida',
            past : 'Bir necha %s oldin',
            s : 'soniya',
            ss : '%d soniya',
            m : 'bir daqiqa',
            mm : '%d daqiqa',
            h : 'bir soat',
            hh : '%d soat',
            d : 'bir kun',
            dd : '%d kun',
            M : 'bir oy',
            MM : '%d oy',
            y : 'bir yil',
            yy : '%d yil'
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 7  // The week that contains Jan 7th is the first week of the year.
        }
    });

    return uzLatn;

})));


/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var vi = moment.defineLocale('vi', {
        months : 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),
        monthsShort : 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),
        monthsParseExact : true,
        weekdays : 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),
        weekdaysShort : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
        weekdaysMin : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
        weekdaysParseExact : true,
        meridiemParse: /sa|ch/i,
        isPM : function (input) {
            return /^ch$/i.test(input);
        },
        meridiem : function (hours, minutes, isLower) {
            if (hours < 12) {
                return isLower ? 'sa' : 'SA';
            } else {
                return isLower ? 'ch' : 'CH';
            }
        },
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM [năm] YYYY',
            LLL : 'D MMMM [năm] YYYY HH:mm',
            LLLL : 'dddd, D MMMM [năm] YYYY HH:mm',
            l : 'DD/M/YYYY',
            ll : 'D MMM YYYY',
            lll : 'D MMM YYYY HH:mm',
            llll : 'ddd, D MMM YYYY HH:mm'
        },
        calendar : {
            sameDay: '[Hôm nay lúc] LT',
            nextDay: '[Ngày mai lúc] LT',
            nextWeek: 'dddd [tuần tới lúc] LT',
            lastDay: '[Hôm qua lúc] LT',
            lastWeek: 'dddd [tuần rồi lúc] LT',
            sameElse: 'L'
        },
        relativeTime : {
            future : '%s tới',
            past : '%s trước',
            s : 'vài giây',
            ss : '%d giây' ,
            m : 'một phút',
            mm : '%d phút',
            h : 'một giờ',
            hh : '%d giờ',
            d : 'một ngày',
            dd : '%d ngày',
            M : 'một tháng',
            MM : '%d tháng',
            y : 'một năm',
            yy : '%d năm'
        },
        dayOfMonthOrdinalParse: /\d{1,2}/,
        ordinal : function (number) {
            return number;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return vi;

})));


/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var xPseudo = moment.defineLocale('x-pseudo', {
        months : 'J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér'.split('_'),
        monthsShort : 'J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc'.split('_'),
        monthsParseExact : true,
        weekdays : 'S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý'.split('_'),
        weekdaysShort : 'S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát'.split('_'),
        weekdaysMin : 'S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá'.split('_'),
        weekdaysParseExact : true,
        longDateFormat : {
            LT : 'HH:mm',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY HH:mm',
            LLLL : 'dddd, D MMMM YYYY HH:mm'
        },
        calendar : {
            sameDay : '[T~ódá~ý át] LT',
            nextDay : '[T~ómó~rró~w át] LT',
            nextWeek : 'dddd [át] LT',
            lastDay : '[Ý~ést~érdá~ý át] LT',
            lastWeek : '[L~ást] dddd [át] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'í~ñ %s',
            past : '%s á~gó',
            s : 'á ~féw ~sécó~ñds',
            ss : '%d s~écóñ~ds',
            m : 'á ~míñ~úté',
            mm : '%d m~íñú~tés',
            h : 'á~ñ hó~úr',
            hh : '%d h~óúrs',
            d : 'á ~dáý',
            dd : '%d d~áýs',
            M : 'á ~móñ~th',
            MM : '%d m~óñt~hs',
            y : 'á ~ýéár',
            yy : '%d ý~éárs'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
        ordinal : function (number) {
            var b = number % 10,
                output = (~~(number % 100 / 10) === 1) ? 'th' :
                (b === 1) ? 'st' :
                (b === 2) ? 'nd' :
                (b === 3) ? 'rd' : 'th';
            return number + output;
        },
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return xPseudo;

})));


/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var yo = moment.defineLocale('yo', {
        months : 'Sẹ́rẹ́_Èrèlè_Ẹrẹ̀nà_Ìgbé_Èbibi_Òkùdu_Agẹmo_Ògún_Owewe_Ọ̀wàrà_Bélú_Ọ̀pẹ̀̀'.split('_'),
        monthsShort : 'Sẹ́r_Èrl_Ẹrn_Ìgb_Èbi_Òkù_Agẹ_Ògú_Owe_Ọ̀wà_Bél_Ọ̀pẹ̀̀'.split('_'),
        weekdays : 'Àìkú_Ajé_Ìsẹ́gun_Ọjọ́rú_Ọjọ́bọ_Ẹtì_Àbámẹ́ta'.split('_'),
        weekdaysShort : 'Àìk_Ajé_Ìsẹ́_Ọjr_Ọjb_Ẹtì_Àbá'.split('_'),
        weekdaysMin : 'Àì_Aj_Ìs_Ọr_Ọb_Ẹt_Àb'.split('_'),
        longDateFormat : {
            LT : 'h:mm A',
            LTS : 'h:mm:ss A',
            L : 'DD/MM/YYYY',
            LL : 'D MMMM YYYY',
            LLL : 'D MMMM YYYY h:mm A',
            LLLL : 'dddd, D MMMM YYYY h:mm A'
        },
        calendar : {
            sameDay : '[Ònì ni] LT',
            nextDay : '[Ọ̀la ni] LT',
            nextWeek : 'dddd [Ọsẹ̀ tón\'bọ] [ni] LT',
            lastDay : '[Àna ni] LT',
            lastWeek : 'dddd [Ọsẹ̀ tólọ́] [ni] LT',
            sameElse : 'L'
        },
        relativeTime : {
            future : 'ní %s',
            past : '%s kọjá',
            s : 'ìsẹjú aayá die',
            ss :'aayá %d',
            m : 'ìsẹjú kan',
            mm : 'ìsẹjú %d',
            h : 'wákati kan',
            hh : 'wákati %d',
            d : 'ọjọ́ kan',
            dd : 'ọjọ́ %d',
            M : 'osù kan',
            MM : 'osù %d',
            y : 'ọdún kan',
            yy : 'ọdún %d'
        },
        dayOfMonthOrdinalParse : /ọjọ́\s\d{1,2}/,
        ordinal : 'ọjọ́ %d',
        week : {
            dow : 1, // Monday is the first day of the week.
            doy : 4 // The week that contains Jan 4th is the first week of the year.
        }
    });

    return yo;

})));


/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var zhCn = moment.defineLocale('zh-cn', {
        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
        weekdaysShort : '周日_周一_周二_周三_周四_周五_周六'.split('_'),
        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY/MM/DD',
            LL : 'YYYY年M月D日',
            LLL : 'YYYY年M月D日Ah点mm分',
            LLLL : 'YYYY年M月D日ddddAh点mm分',
            l : 'YYYY/M/D',
            ll : 'YYYY年M月D日',
            lll : 'YYYY年M月D日 HH:mm',
            llll : 'YYYY年M月D日dddd HH:mm'
        },
        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === '凌晨' || meridiem === '早上' ||
                    meridiem === '上午') {
                return hour;
            } else if (meridiem === '下午' || meridiem === '晚上') {
                return hour + 12;
            } else {
                // '中午'
                return hour >= 11 ? hour : hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            var hm = hour * 100 + minute;
            if (hm < 600) {
                return '凌晨';
            } else if (hm < 900) {
                return '早上';
            } else if (hm < 1130) {
                return '上午';
            } else if (hm < 1230) {
                return '中午';
            } else if (hm < 1800) {
                return '下午';
            } else {
                return '晚上';
            }
        },
        calendar : {
            sameDay : '[今天]LT',
            nextDay : '[明天]LT',
            nextWeek : '[下]ddddLT',
            lastDay : '[昨天]LT',
            lastWeek : '[上]ddddLT',
            sameElse : 'L'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(日|月|周)/,
        ordinal : function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                    return number + '日';
                case 'M':
                    return number + '月';
                case 'w':
                case 'W':
                    return number + '周';
                default:
                    return number;
            }
        },
        relativeTime : {
            future : '%s内',
            past : '%s前',
            s : '几秒',
            ss : '%d 秒',
            m : '1 分钟',
            mm : '%d 分钟',
            h : '1 小时',
            hh : '%d 小时',
            d : '1 天',
            dd : '%d 天',
            M : '1 个月',
            MM : '%d 个月',
            y : '1 年',
            yy : '%d 年'
        },
        week : {
            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效
            dow : 1, // Monday is the first day of the week.
            doy : 4  // The week that contains Jan 4th is the first week of the year.
        }
    });

    return zhCn;

})));


/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var zhHk = moment.defineLocale('zh-hk', {
        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
        weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),
        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY/MM/DD',
            LL : 'YYYY年M月D日',
            LLL : 'YYYY年M月D日 HH:mm',
            LLLL : 'YYYY年M月D日dddd HH:mm',
            l : 'YYYY/M/D',
            ll : 'YYYY年M月D日',
            lll : 'YYYY年M月D日 HH:mm',
            llll : 'YYYY年M月D日dddd HH:mm'
        },
        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
                return hour;
            } else if (meridiem === '中午') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === '下午' || meridiem === '晚上') {
                return hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            var hm = hour * 100 + minute;
            if (hm < 600) {
                return '凌晨';
            } else if (hm < 900) {
                return '早上';
            } else if (hm < 1130) {
                return '上午';
            } else if (hm < 1230) {
                return '中午';
            } else if (hm < 1800) {
                return '下午';
            } else {
                return '晚上';
            }
        },
        calendar : {
            sameDay : '[今天]LT',
            nextDay : '[明天]LT',
            nextWeek : '[下]ddddLT',
            lastDay : '[昨天]LT',
            lastWeek : '[上]ddddLT',
            sameElse : 'L'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
        ordinal : function (number, period) {
            switch (period) {
                case 'd' :
                case 'D' :
                case 'DDD' :
                    return number + '日';
                case 'M' :
                    return number + '月';
                case 'w' :
                case 'W' :
                    return number + '週';
                default :
                    return number;
            }
        },
        relativeTime : {
            future : '%s內',
            past : '%s前',
            s : '幾秒',
            ss : '%d 秒',
            m : '1 分鐘',
            mm : '%d 分鐘',
            h : '1 小時',
            hh : '%d 小時',
            d : '1 天',
            dd : '%d 天',
            M : '1 個月',
            MM : '%d 個月',
            y : '1 年',
            yy : '%d 年'
        }
    });

    return zhHk;

})));


/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


    var zhTw = moment.defineLocale('zh-tw', {
        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
        weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),
        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
        longDateFormat : {
            LT : 'HH:mm',
            LTS : 'HH:mm:ss',
            L : 'YYYY/MM/DD',
            LL : 'YYYY年M月D日',
            LLL : 'YYYY年M月D日 HH:mm',
            LLLL : 'YYYY年M月D日dddd HH:mm',
            l : 'YYYY/M/D',
            ll : 'YYYY年M月D日',
            lll : 'YYYY年M月D日 HH:mm',
            llll : 'YYYY年M月D日dddd HH:mm'
        },
        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
        meridiemHour : function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
                return hour;
            } else if (meridiem === '中午') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === '下午' || meridiem === '晚上') {
                return hour + 12;
            }
        },
        meridiem : function (hour, minute, isLower) {
            var hm = hour * 100 + minute;
            if (hm < 600) {
                return '凌晨';
            } else if (hm < 900) {
                return '早上';
            } else if (hm < 1130) {
                return '上午';
            } else if (hm < 1230) {
                return '中午';
            } else if (hm < 1800) {
                return '下午';
            } else {
                return '晚上';
            }
        },
        calendar : {
            sameDay : '[今天] LT',
            nextDay : '[明天] LT',
            nextWeek : '[下]dddd LT',
            lastDay : '[昨天] LT',
            lastWeek : '[上]dddd LT',
            sameElse : 'L'
        },
        dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
        ordinal : function (number, period) {
            switch (period) {
                case 'd' :
                case 'D' :
                case 'DDD' :
                    return number + '日';
                case 'M' :
                    return number + '月';
                case 'w' :
                case 'W' :
                    return number + '週';
                default :
                    return number;
            }
        },
        relativeTime : {
            future : '%s內',
            past : '%s前',
            s : '幾秒',
            ss : '%d 秒',
            m : '1 分鐘',
            mm : '%d 分鐘',
            h : '1 小時',
            hh : '%d 小時',
            d : '1 天',
            dd : '%d 天',
            M : '1 個月',
            MM : '%d 個月',
            y : '1 年',
            yy : '%d 年'
        }
    });

    return zhTw;

})));


/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(208);
module.exports = __webpack_require__(312);


/***/ }),
/* 208 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_controllers_loader__ = __webpack_require__(209);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_navigo__ = __webpack_require__(262);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_navigo___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_navigo__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_layouts_remote__ = __webpack_require__(263);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_controllers_store__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_layouts_viewer__ = __webpack_require__(294);






if (!window.isProduction) {
  __webpack_require__(303)({
    color: 'white',
    position: 'top-right'
  });
}

var mount = function mount(App) {
  return function () {
    Object(__WEBPACK_IMPORTED_MODULE_0_controllers_loader__["a" /* default */])().then(function () {
      new App().mount(document.body);
    });
  };
};

new __WEBPACK_IMPORTED_MODULE_1_navigo___default.a(null, false).on({
  '/remote': mount(__WEBPACK_IMPORTED_MODULE_2_layouts_remote__["a" /* default */]),
  '/remote.html': mount(__WEBPACK_IMPORTED_MODULE_2_layouts_remote__["a" /* default */]),
  '/viewer': mount(__WEBPACK_IMPORTED_MODULE_4_layouts_viewer__["a" /* default */]),
  '/viewer.html': mount(__WEBPACK_IMPORTED_MODULE_4_layouts_viewer__["a" /* default */])
}).resolve();

__WEBPACK_IMPORTED_MODULE_3_controllers_store__["a" /* default */].websocketSync(['datasetIndex', 'datasetDayIndex']);

/***/ }),
/* 209 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__ = __webpack_require__(54);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_asyncToGenerator__ = __webpack_require__(55);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_asyncToGenerator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_asyncToGenerator__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_controllers_error__ = __webpack_require__(233);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_components_log_screen__ = __webpack_require__(70);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_controllers_rest__ = __webpack_require__(259);



var _this = this;





var screen = new __WEBPACK_IMPORTED_MODULE_3_components_log_screen__["a" /* default */]({
  title: 'Chargement…',
  state: 'loading'
});

/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_asyncToGenerator___default()( /*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee() {
  return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.prev = 0;

          screen.mount(document.body);

          screen.setMessage(null, { progress: 0.5 });
          _context.next = 5;
          return __WEBPACK_IMPORTED_MODULE_4_controllers_rest__["a" /* default */].get('configuration');

        case 5:
          window.configuration = _context.sent;


          screen.setMessage(null, { progress: 1 });
          screen.destroy();
          _context.next = 13;
          break;

        case 10:
          _context.prev = 10;
          _context.t0 = _context['catch'](0);

          Object(__WEBPACK_IMPORTED_MODULE_2_controllers_error__["a" /* default */])(_context.t0);

        case 13:
        case 'end':
          return _context.stop();
      }
    }
  }, _callee, _this, [[0, 10]]);
})));

/***/ }),
/* 210 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

// This method of obtaining a reference to the global object needs to be
// kept identical to the way it is obtained in runtime.js
var g = (function() { return this })() || Function("return this")();

// Use `getOwnPropertyNames` because not all browsers support calling
// `hasOwnProperty` on the global `self` object in a worker. See #183.
var hadRuntime = g.regeneratorRuntime &&
  Object.getOwnPropertyNames(g).indexOf("regeneratorRuntime") >= 0;

// Save the old regeneratorRuntime in case it needs to be restored later.
var oldRuntime = hadRuntime && g.regeneratorRuntime;

// Force reevalutation of runtime.js.
g.regeneratorRuntime = undefined;

module.exports = __webpack_require__(211);

if (hadRuntime) {
  // Restore the original runtime.
  g.regeneratorRuntime = oldRuntime;
} else {
  // Remove the global property added by runtime.js.
  try {
    delete g.regeneratorRuntime;
  } catch(e) {
    g.regeneratorRuntime = undefined;
  }
}


/***/ }),
/* 211 */
/***/ (function(module, exports) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

!(function(global) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  var inModule = typeof module === "object";
  var runtime = global.regeneratorRuntime;
  if (runtime) {
    if (inModule) {
      // If regeneratorRuntime is defined globally and we're in a module,
      // make the exports object identical to regeneratorRuntime.
      module.exports = runtime;
    }
    // Don't bother evaluating the rest of this file if the runtime was
    // already defined globally.
    return;
  }

  // Define the runtime globally (as expected by generated code) as either
  // module.exports (if we're in a module) or a new, empty object.
  runtime = global.regeneratorRuntime = inModule ? module.exports : {};

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  runtime.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunctionPrototype[toStringTagSymbol] =
    GeneratorFunction.displayName = "GeneratorFunction";

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      prototype[method] = function(arg) {
        return this._invoke(method, arg);
      };
    });
  }

  runtime.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  runtime.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      if (!(toStringTagSymbol in genFun)) {
        genFun[toStringTagSymbol] = "GeneratorFunction";
      }
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  runtime.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return Promise.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return Promise.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration. If the Promise is rejected, however, the
          // result for this iteration will be rejected with the same
          // reason. Note that rejections of yielded Promises are not
          // thrown back into the generator function, as is the case
          // when an awaited Promise is rejected. This difference in
          // behavior between yield and await is important, because it
          // allows the consumer to decide what to do with the yielded
          // rejection (swallow it and continue, manually .throw it back
          // into the generator, abandon iteration, whatever). With
          // await, by contrast, there is no opportunity to examine the
          // rejection reason outside the generator function, so the
          // only option is to throw it from the await expression, and
          // let the generator function handle the exception.
          result.value = unwrapped;
          resolve(result);
        }, reject);
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new Promise(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };
  runtime.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  runtime.async = function(innerFn, outerFn, self, tryLocsList) {
    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList)
    );

    return runtime.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        if (delegate.iterator.return) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  Gp[toStringTagSymbol] = "Generator";

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  Gp[iteratorSymbol] = function() {
    return this;
  };

  Gp.toString = function() {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  runtime.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  runtime.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };
})(
  // In sloppy mode, unbound `this` refers to the global object, fallback to
  // Function constructor if we're in global strict mode. That is sadly a form
  // of indirect eval which violates Content Security Policy.
  (function() { return this })() || Function("return this")()
);


/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(213), __esModule: true };

/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(56);
__webpack_require__(22);
__webpack_require__(34);
__webpack_require__(223);
__webpack_require__(231);
__webpack_require__(232);
module.exports = __webpack_require__(1).Promise;


/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(37);
var defined = __webpack_require__(38);
// true  -> String#at
// false -> String#codePointAt
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};


/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var create = __webpack_require__(41);
var descriptor = __webpack_require__(25);
var setToStringTag = __webpack_require__(32);
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
__webpack_require__(11)(IteratorPrototype, __webpack_require__(3)('iterator'), function () { return this; });

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};


/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(8);
var anObject = __webpack_require__(5);
var getKeys = __webpack_require__(26);

module.exports = __webpack_require__(10) ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};


/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = __webpack_require__(27);
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};


/***/ }),
/* 218 */
/***/ (function(module, exports, __webpack_require__) {

// false -> Array#indexOf
// true  -> Array#includes
var toIObject = __webpack_require__(13);
var toLength = __webpack_require__(42);
var toAbsoluteIndex = __webpack_require__(219);
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};


/***/ }),
/* 219 */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(37);
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};


/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var addToUnscopables = __webpack_require__(221);
var step = __webpack_require__(222);
var Iterators = __webpack_require__(20);
var toIObject = __webpack_require__(13);

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = __webpack_require__(57)(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),
/* 221 */
/***/ (function(module, exports) {

module.exports = function () { /* empty */ };


/***/ }),
/* 222 */
/***/ (function(module, exports) {

module.exports = function (done, value) {
  return { value: value, done: !!done };
};


/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__(23);
var global = __webpack_require__(2);
var ctx = __webpack_require__(19);
var classof = __webpack_require__(46);
var $export = __webpack_require__(4);
var isObject = __webpack_require__(9);
var aFunction = __webpack_require__(30);
var anInstance = __webpack_require__(224);
var forOf = __webpack_require__(225);
var speciesConstructor = __webpack_require__(65);
var task = __webpack_require__(66).set;
var microtask = __webpack_require__(227)();
var newPromiseCapabilityModule = __webpack_require__(48);
var perform = __webpack_require__(67);
var userAgent = __webpack_require__(228);
var promiseResolve = __webpack_require__(68);
var PROMISE = 'Promise';
var TypeError = global.TypeError;
var process = global.process;
var versions = process && process.versions;
var v8 = versions && versions.v8 || '';
var $Promise = global[PROMISE];
var isNode = classof(process) == 'process';
var empty = function () { /* empty */ };
var Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;
var newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;

var USE_NATIVE = !!function () {
  try {
    // correct subclassing with @@species support
    var promise = $Promise.resolve(1);
    var FakePromise = (promise.constructor = {})[__webpack_require__(3)('species')] = function (exec) {
      exec(empty, empty);
    };
    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
    return (isNode || typeof PromiseRejectionEvent == 'function')
      && promise.then(empty) instanceof FakePromise
      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
      // we can't detect it synchronously, so just check versions
      && v8.indexOf('6.6') !== 0
      && userAgent.indexOf('Chrome/66') === -1;
  } catch (e) { /* empty */ }
}();

// helpers
var isThenable = function (it) {
  var then;
  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
};
var notify = function (promise, isReject) {
  if (promise._n) return;
  promise._n = true;
  var chain = promise._c;
  microtask(function () {
    var value = promise._v;
    var ok = promise._s == 1;
    var i = 0;
    var run = function (reaction) {
      var handler = ok ? reaction.ok : reaction.fail;
      var resolve = reaction.resolve;
      var reject = reaction.reject;
      var domain = reaction.domain;
      var result, then, exited;
      try {
        if (handler) {
          if (!ok) {
            if (promise._h == 2) onHandleUnhandled(promise);
            promise._h = 1;
          }
          if (handler === true) result = value;
          else {
            if (domain) domain.enter();
            result = handler(value); // may throw
            if (domain) {
              domain.exit();
              exited = true;
            }
          }
          if (result === reaction.promise) {
            reject(TypeError('Promise-chain cycle'));
          } else if (then = isThenable(result)) {
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch (e) {
        if (domain && !exited) domain.exit();
        reject(e);
      }
    };
    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach
    promise._c = [];
    promise._n = false;
    if (isReject && !promise._h) onUnhandled(promise);
  });
};
var onUnhandled = function (promise) {
  task.call(global, function () {
    var value = promise._v;
    var unhandled = isUnhandled(promise);
    var result, handler, console;
    if (unhandled) {
      result = perform(function () {
        if (isNode) {
          process.emit('unhandledRejection', value, promise);
        } else if (handler = global.onunhandledrejection) {
          handler({ promise: promise, reason: value });
        } else if ((console = global.console) && console.error) {
          console.error('Unhandled promise rejection', value);
        }
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
    } promise._a = undefined;
    if (unhandled && result.e) throw result.v;
  });
};
var isUnhandled = function (promise) {
  return promise._h !== 1 && (promise._a || promise._c).length === 0;
};
var onHandleUnhandled = function (promise) {
  task.call(global, function () {
    var handler;
    if (isNode) {
      process.emit('rejectionHandled', promise);
    } else if (handler = global.onrejectionhandled) {
      handler({ promise: promise, reason: promise._v });
    }
  });
};
var $reject = function (value) {
  var promise = this;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  promise._v = value;
  promise._s = 2;
  if (!promise._a) promise._a = promise._c.slice();
  notify(promise, true);
};
var $resolve = function (value) {
  var promise = this;
  var then;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  try {
    if (promise === value) throw TypeError("Promise can't be resolved itself");
    if (then = isThenable(value)) {
      microtask(function () {
        var wrapper = { _w: promise, _d: false }; // wrap
        try {
          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
        } catch (e) {
          $reject.call(wrapper, e);
        }
      });
    } else {
      promise._v = value;
      promise._s = 1;
      notify(promise, false);
    }
  } catch (e) {
    $reject.call({ _w: promise, _d: false }, e); // wrap
  }
};

// constructor polyfill
if (!USE_NATIVE) {
  // 25.4.3.1 Promise(executor)
  $Promise = function Promise(executor) {
    anInstance(this, $Promise, PROMISE, '_h');
    aFunction(executor);
    Internal.call(this);
    try {
      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
    } catch (err) {
      $reject.call(this, err);
    }
  };
  // eslint-disable-next-line no-unused-vars
  Internal = function Promise(executor) {
    this._c = [];             // <- awaiting reactions
    this._a = undefined;      // <- checked in isUnhandled reactions
    this._s = 0;              // <- state
    this._d = false;          // <- done
    this._v = undefined;      // <- value
    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
    this._n = false;          // <- notify
  };
  Internal.prototype = __webpack_require__(229)($Promise.prototype, {
    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
    then: function then(onFulfilled, onRejected) {
      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));
      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail = typeof onRejected == 'function' && onRejected;
      reaction.domain = isNode ? process.domain : undefined;
      this._c.push(reaction);
      if (this._a) this._a.push(reaction);
      if (this._s) notify(this, false);
      return reaction.promise;
    },
    // 25.4.5.1 Promise.prototype.catch(onRejected)
    'catch': function (onRejected) {
      return this.then(undefined, onRejected);
    }
  });
  OwnPromiseCapability = function () {
    var promise = new Internal();
    this.promise = promise;
    this.resolve = ctx($resolve, promise, 1);
    this.reject = ctx($reject, promise, 1);
  };
  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
    return C === $Promise || C === Wrapper
      ? new OwnPromiseCapability(C)
      : newGenericPromiseCapability(C);
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });
__webpack_require__(32)($Promise, PROMISE);
__webpack_require__(230)(PROMISE);
Wrapper = __webpack_require__(1)[PROMISE];

// statics
$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
  // 25.4.4.5 Promise.reject(r)
  reject: function reject(r) {
    var capability = newPromiseCapability(this);
    var $$reject = capability.reject;
    $$reject(r);
    return capability.promise;
  }
});
$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
  // 25.4.4.6 Promise.resolve(x)
  resolve: function resolve(x) {
    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);
  }
});
$export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(69)(function (iter) {
  $Promise.all(iter)['catch'](empty);
})), PROMISE, {
  // 25.4.4.1 Promise.all(iterable)
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var values = [];
      var index = 0;
      var remaining = 1;
      forOf(iterable, false, function (promise) {
        var $index = index++;
        var alreadyCalled = false;
        values.push(undefined);
        remaining++;
        C.resolve(promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[$index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.e) reject(result.v);
    return capability.promise;
  },
  // 25.4.4.4 Promise.race(iterable)
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var reject = capability.reject;
    var result = perform(function () {
      forOf(iterable, false, function (promise) {
        C.resolve(promise).then(capability.resolve, reject);
      });
    });
    if (result.e) reject(result.v);
    return capability.promise;
  }
});


/***/ }),
/* 224 */
/***/ (function(module, exports) {

module.exports = function (it, Constructor, name, forbiddenField) {
  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {
    throw TypeError(name + ': incorrect invocation!');
  } return it;
};


/***/ }),
/* 225 */
/***/ (function(module, exports, __webpack_require__) {

var ctx = __webpack_require__(19);
var call = __webpack_require__(63);
var isArrayIter = __webpack_require__(64);
var anObject = __webpack_require__(5);
var toLength = __webpack_require__(42);
var getIterFn = __webpack_require__(47);
var BREAK = {};
var RETURN = {};
var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);
  var f = ctx(fn, that, entries ? 2 : 1);
  var index = 0;
  var length, step, iterator, result;
  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
  // fast case for arrays with default iterator
  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
    if (result === BREAK || result === RETURN) return result;
  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
    result = call(iterator, f, step.value, entries);
    if (result === BREAK || result === RETURN) return result;
  }
};
exports.BREAK = BREAK;
exports.RETURN = RETURN;


/***/ }),
/* 226 */
/***/ (function(module, exports) {

// fast apply, http://jsperf.lnkit.com/fast-apply/5
module.exports = function (fn, args, that) {
  var un = that === undefined;
  switch (args.length) {
    case 0: return un ? fn()
                      : fn.call(that);
    case 1: return un ? fn(args[0])
                      : fn.call(that, args[0]);
    case 2: return un ? fn(args[0], args[1])
                      : fn.call(that, args[0], args[1]);
    case 3: return un ? fn(args[0], args[1], args[2])
                      : fn.call(that, args[0], args[1], args[2]);
    case 4: return un ? fn(args[0], args[1], args[2], args[3])
                      : fn.call(that, args[0], args[1], args[2], args[3]);
  } return fn.apply(that, args);
};


/***/ }),
/* 227 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2);
var macrotask = __webpack_require__(66).set;
var Observer = global.MutationObserver || global.WebKitMutationObserver;
var process = global.process;
var Promise = global.Promise;
var isNode = __webpack_require__(27)(process) == 'process';

module.exports = function () {
  var head, last, notify;

  var flush = function () {
    var parent, fn;
    if (isNode && (parent = process.domain)) parent.exit();
    while (head) {
      fn = head.fn;
      head = head.next;
      try {
        fn();
      } catch (e) {
        if (head) notify();
        else last = undefined;
        throw e;
      }
    } last = undefined;
    if (parent) parent.enter();
  };

  // Node.js
  if (isNode) {
    notify = function () {
      process.nextTick(flush);
    };
  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339
  } else if (Observer && !(global.navigator && global.navigator.standalone)) {
    var toggle = true;
    var node = document.createTextNode('');
    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new
    notify = function () {
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if (Promise && Promise.resolve) {
    // Promise.resolve without an argument throws an error in LG WebOS 2
    var promise = Promise.resolve(undefined);
    notify = function () {
      promise.then(flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessag
  // - onreadystatechange
  // - setTimeout
  } else {
    notify = function () {
      // strange IE + webpack dev server bug - use .call(global)
      macrotask.call(global, flush);
    };
  }

  return function (fn) {
    var task = { fn: fn, next: undefined };
    if (last) last.next = task;
    if (!head) {
      head = task;
      notify();
    } last = task;
  };
};


/***/ }),
/* 228 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(2);
var navigator = global.navigator;

module.exports = navigator && navigator.userAgent || '';


/***/ }),
/* 229 */
/***/ (function(module, exports, __webpack_require__) {

var hide = __webpack_require__(11);
module.exports = function (target, src, safe) {
  for (var key in src) {
    if (safe && target[key]) target[key] = src[key];
    else hide(target, key, src[key]);
  } return target;
};


/***/ }),
/* 230 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(2);
var core = __webpack_require__(1);
var dP = __webpack_require__(8);
var DESCRIPTORS = __webpack_require__(10);
var SPECIES = __webpack_require__(3)('species');

module.exports = function (KEY) {
  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];
  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
    configurable: true,
    get: function () { return this; }
  });
};


/***/ }),
/* 231 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// https://github.com/tc39/proposal-promise-finally

var $export = __webpack_require__(4);
var core = __webpack_require__(1);
var global = __webpack_require__(2);
var speciesConstructor = __webpack_require__(65);
var promiseResolve = __webpack_require__(68);

$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {
  var C = speciesConstructor(this, core.Promise || global.Promise);
  var isFunction = typeof onFinally == 'function';
  return this.then(
    isFunction ? function (x) {
      return promiseResolve(C, onFinally()).then(function () { return x; });
    } : onFinally,
    isFunction ? function (e) {
      return promiseResolve(C, onFinally()).then(function () { throw e; });
    } : onFinally
  );
} });


/***/ }),
/* 232 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// https://github.com/tc39/proposal-promise-try
var $export = __webpack_require__(4);
var newPromiseCapability = __webpack_require__(48);
var perform = __webpack_require__(67);

$export($export.S, 'Promise', { 'try': function (callbackfn) {
  var promiseCapability = newPromiseCapability.f(this);
  var result = perform(callbackfn);
  (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);
  return promiseCapability.promise;
} });


/***/ }),
/* 233 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_components_log_screen__ = __webpack_require__(70);


/* harmony default export */ __webpack_exports__["a"] = (function (err) {
  err = err instanceof Error ? err : new Error(err);

  var error = new __WEBPACK_IMPORTED_MODULE_0_components_log_screen__["a" /* default */]({
    title: err.name,
    message: window.isProduction ? err.message : err.message + '\n' + err.stack,
    state: 'error'
  });

  console.error(err);
  error.mount(document.body);
});

/***/ }),
/* 234 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(235);
module.exports = __webpack_require__(1).Object.getPrototypeOf;


/***/ }),
/* 235 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 Object.getPrototypeOf(O)
var toObject = __webpack_require__(33);
var $getPrototypeOf = __webpack_require__(62);

__webpack_require__(71)('getPrototypeOf', function () {
  return function getPrototypeOf(it) {
    return $getPrototypeOf(toObject(it));
  };
});


/***/ }),
/* 236 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(237), __esModule: true };

/***/ }),
/* 237 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(238);
var $Object = __webpack_require__(1).Object;
module.exports = function defineProperty(it, key, desc) {
  return $Object.defineProperty(it, key, desc);
};


/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(4);
// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
$export($export.S + $export.F * !__webpack_require__(10), 'Object', { defineProperty: __webpack_require__(8).f });


/***/ }),
/* 239 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(240), __esModule: true };

/***/ }),
/* 240 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(22);
__webpack_require__(34);
module.exports = __webpack_require__(49).f('iterator');


/***/ }),
/* 241 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(242), __esModule: true };

/***/ }),
/* 242 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(243);
__webpack_require__(56);
__webpack_require__(248);
__webpack_require__(249);
module.exports = __webpack_require__(1).Symbol;


/***/ }),
/* 243 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// ECMAScript 6 symbols shim
var global = __webpack_require__(2);
var has = __webpack_require__(12);
var DESCRIPTORS = __webpack_require__(10);
var $export = __webpack_require__(4);
var redefine = __webpack_require__(59);
var META = __webpack_require__(244).KEY;
var $fails = __webpack_require__(24);
var shared = __webpack_require__(44);
var setToStringTag = __webpack_require__(32);
var uid = __webpack_require__(31);
var wks = __webpack_require__(3);
var wksExt = __webpack_require__(49);
var wksDefine = __webpack_require__(50);
var enumKeys = __webpack_require__(245);
var isArray = __webpack_require__(246);
var anObject = __webpack_require__(5);
var isObject = __webpack_require__(9);
var toIObject = __webpack_require__(13);
var toPrimitive = __webpack_require__(40);
var createDesc = __webpack_require__(25);
var _create = __webpack_require__(41);
var gOPNExt = __webpack_require__(247);
var $GOPD = __webpack_require__(75);
var $DP = __webpack_require__(8);
var $keys = __webpack_require__(26);
var gOPD = $GOPD.f;
var dP = $DP.f;
var gOPN = gOPNExt.f;
var $Symbol = global.Symbol;
var $JSON = global.JSON;
var _stringify = $JSON && $JSON.stringify;
var PROTOTYPE = 'prototype';
var HIDDEN = wks('_hidden');
var TO_PRIMITIVE = wks('toPrimitive');
var isEnum = {}.propertyIsEnumerable;
var SymbolRegistry = shared('symbol-registry');
var AllSymbols = shared('symbols');
var OPSymbols = shared('op-symbols');
var ObjectProto = Object[PROTOTYPE];
var USE_NATIVE = typeof $Symbol == 'function';
var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc = DESCRIPTORS && $fails(function () {
  return _create(dP({}, 'a', {
    get: function () { return dP(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (it, key, D) {
  var protoDesc = gOPD(ObjectProto, key);
  if (protoDesc) delete ObjectProto[key];
  dP(it, key, D);
  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
} : dP;

var wrap = function (tag) {
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D) {
  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);
  if (has(AllSymbols, key)) {
    if (!D.enumerable) {
      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
      D = _create(D, { enumerable: createDesc(0, false) });
    } return setSymbolDesc(it, key, D);
  } return dP(it, key, D);
};
var $defineProperties = function defineProperties(it, P) {
  anObject(it);
  var keys = enumKeys(P = toIObject(P));
  var i = 0;
  var l = keys.length;
  var key;
  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
  return it;
};
var $create = function create(it, P) {
  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key) {
  var E = isEnum.call(this, key = toPrimitive(key, true));
  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
  it = toIObject(it);
  key = toPrimitive(key, true);
  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
  var D = gOPD(it, key);
  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it) {
  var names = gOPN(toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
  } return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
  var IS_OP = it === ObjectProto;
  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
  } return result;
};

// 19.4.1.1 Symbol([description])
if (!USE_NATIVE) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function (value) {
      if (this === ObjectProto) $set.call(OPSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc(1, value));
    };
    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
    return wrap(tag);
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return this._k;
  });

  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f = $defineProperty;
  __webpack_require__(74).f = gOPNExt.f = $getOwnPropertyNames;
  __webpack_require__(35).f = $propertyIsEnumerable;
  __webpack_require__(73).f = $getOwnPropertySymbols;

  if (DESCRIPTORS && !__webpack_require__(23)) {
    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }

  wksExt.f = function (name) {
    return wrap(wks(name));
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

for (var es6Symbols = (
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);

for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);

$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function (key) {
    return has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
  },
  useSetter: function () { setter = true; },
  useSimple: function () { setter = false; }
});

$export($export.S + $export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
  var S = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols
  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it) {
    var args = [it];
    var i = 1;
    var replacer, $replacer;
    while (arguments.length > i) args.push(arguments[i++]);
    $replacer = replacer = args[1];
    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
    if (!isArray(replacer)) replacer = function (key, value) {
      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
      if (!isSymbol(value)) return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(11)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
setToStringTag(global.JSON, 'JSON', true);


/***/ }),
/* 244 */
/***/ (function(module, exports, __webpack_require__) {

var META = __webpack_require__(31)('meta');
var isObject = __webpack_require__(9);
var has = __webpack_require__(12);
var setDesc = __webpack_require__(8).f;
var id = 0;
var isExtensible = Object.isExtensible || function () {
  return true;
};
var FREEZE = !__webpack_require__(24)(function () {
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function (it) {
  setDesc(it, META, { value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  } });
};
var fastKey = function (it, create) {
  // return primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function (it, create) {
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY: META,
  NEED: false,
  fastKey: fastKey,
  getWeak: getWeak,
  onFreeze: onFreeze
};


/***/ }),
/* 245 */
/***/ (function(module, exports, __webpack_require__) {

// all enumerable object keys, includes symbols
var getKeys = __webpack_require__(26);
var gOPS = __webpack_require__(73);
var pIE = __webpack_require__(35);
module.exports = function (it) {
  var result = getKeys(it);
  var getSymbols = gOPS.f;
  if (getSymbols) {
    var symbols = getSymbols(it);
    var isEnum = pIE.f;
    var i = 0;
    var key;
    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
  } return result;
};


/***/ }),
/* 246 */
/***/ (function(module, exports, __webpack_require__) {

// 7.2.2 IsArray(argument)
var cof = __webpack_require__(27);
module.exports = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};


/***/ }),
/* 247 */
/***/ (function(module, exports, __webpack_require__) {

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var toIObject = __webpack_require__(13);
var gOPN = __webpack_require__(74).f;
var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return gOPN(it);
  } catch (e) {
    return windowNames.slice();
  }
};

module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
};


/***/ }),
/* 248 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(50)('asyncIterator');


/***/ }),
/* 249 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(50)('observable');


/***/ }),
/* 250 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(251), __esModule: true };

/***/ }),
/* 251 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(252);
module.exports = __webpack_require__(1).Object.setPrototypeOf;


/***/ }),
/* 252 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.3.19 Object.setPrototypeOf(O, proto)
var $export = __webpack_require__(4);
$export($export.S, 'Object', { setPrototypeOf: __webpack_require__(253).set });


/***/ }),
/* 253 */
/***/ (function(module, exports, __webpack_require__) {

// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
var isObject = __webpack_require__(9);
var anObject = __webpack_require__(5);
var check = function (O, proto) {
  anObject(O);
  if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
};
module.exports = {
  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
    function (test, buggy, set) {
      try {
        set = __webpack_require__(19)(Function.call, __webpack_require__(75).f(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch (e) { buggy = true; }
      return function setPrototypeOf(O, proto) {
        check(O, proto);
        if (buggy) O.__proto__ = proto;
        else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
  check: check
};


/***/ }),
/* 254 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(255), __esModule: true };

/***/ }),
/* 255 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(256);
var $Object = __webpack_require__(1).Object;
module.exports = function create(P, D) {
  return $Object.create(P, D);
};


/***/ }),
/* 256 */
/***/ (function(module, exports, __webpack_require__) {

var $export = __webpack_require__(4);
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
$export($export.S, 'Object', { create: __webpack_require__(41) });


/***/ }),
/* 257 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = (function (str) {
  return String(str).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;');
});

/***/ }),
/* 258 */
/***/ (function(module, exports) {

function nanohtmlRawBrowser (tag) {
  var el = document.createElement('div')
  el.innerHTML = tag
  return toArray(el.childNodes)
}

function toArray (arr) {
  return Array.isArray(arr) ? arr : [].slice.call(arr)
}

module.exports = nanohtmlRawBrowser


/***/ }),
/* 259 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__ = __webpack_require__(76);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_regenerator__ = __webpack_require__(54);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_regenerator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_regenerator__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_asyncToGenerator__ = __webpack_require__(55);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_asyncToGenerator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_asyncToGenerator__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_whatwg_fetch__ = __webpack_require__(261);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_utils_host__ = __webpack_require__(77);




var _this = this;




/* global fetch Headers */

var restURL = function restURL(endpoint) {
  return __WEBPACK_IMPORTED_MODULE_4_utils_host__["a" /* default */] + '/api/' + endpoint;
};

var restFetch = function () {
  var _ref = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_asyncToGenerator___default()( /*#__PURE__*/__WEBPACK_IMPORTED_MODULE_1_babel_runtime_regenerator___default.a.mark(function _callee(endpoint, options) {
    var url, response, json;
    return __WEBPACK_IMPORTED_MODULE_1_babel_runtime_regenerator___default.a.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            url = restURL(endpoint);
            _context.next = 3;
            return fetch(url, options);

          case 3:
            response = _context.sent;

            if (!(!response || !response.ok)) {
              _context.next = 6;
              break;
            }

            throw Error(url + ' (' + response.statusText + ')');

          case 6:
            _context.next = 8;
            return validateJSONResponse(response);

          case 8:
            json = _context.sent;

            if (!json.error) {
              _context.next = 11;
              break;
            }

            throw Error(url + ' (' + json.error + ')');

          case 11:
            return _context.abrupt('return', json.data);

          case 12:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, _this);
  }));

  return function restFetch(_x, _x2) {
    return _ref.apply(this, arguments);
  };
}();

var validateJSONResponse = function validateJSONResponse(response) {
  var contentType = response.headers.get('content-type');
  if (contentType && contentType.includes('application/json')) {
    return response.json();
  }
  throw TypeError('Badly formatted JSON');
};

/* harmony default export */ __webpack_exports__["a"] = ({
  get: function () {
    var _ref2 = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_asyncToGenerator___default()( /*#__PURE__*/__WEBPACK_IMPORTED_MODULE_1_babel_runtime_regenerator___default.a.mark(function _callee2(endpoint) {
      return __WEBPACK_IMPORTED_MODULE_1_babel_runtime_regenerator___default.a.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              return _context2.abrupt('return', restFetch(endpoint));

            case 1:
            case 'end':
              return _context2.stop();
          }
        }
      }, _callee2, _this);
    }));

    function get(_x3) {
      return _ref2.apply(this, arguments);
    }

    return get;
  }(),
  post: function () {
    var _ref3 = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_asyncToGenerator___default()( /*#__PURE__*/__WEBPACK_IMPORTED_MODULE_1_babel_runtime_regenerator___default.a.mark(function _callee3(endpoint, data) {
      return __WEBPACK_IMPORTED_MODULE_1_babel_runtime_regenerator___default.a.wrap(function _callee3$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              return _context3.abrupt('return', restFetch(endpoint, {
                method: 'POST',
                body: __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default()(data),
                headers: new Headers({ 'Content-Type': 'application/json' })
              }));

            case 1:
            case 'end':
              return _context3.stop();
          }
        }
      }, _callee3, _this);
    }));

    function post(_x4, _x5) {
      return _ref3.apply(this, arguments);
    }

    return post;
  }()
});

/***/ }),
/* 260 */
/***/ (function(module, exports, __webpack_require__) {

var core = __webpack_require__(1);
var $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });
module.exports = function stringify(it) { // eslint-disable-line no-unused-vars
  return $JSON.stringify.apply($JSON, arguments);
};


/***/ }),
/* 261 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export Headers */
/* unused harmony export Request */
/* unused harmony export Response */
/* unused harmony export DOMException */
/* unused harmony export fetch */
var support = {
  searchParams: 'URLSearchParams' in self,
  iterable: 'Symbol' in self && 'iterator' in Symbol,
  blob:
    'FileReader' in self &&
    'Blob' in self &&
    (function() {
      try {
        new Blob()
        return true
      } catch (e) {
        return false
      }
    })(),
  formData: 'FormData' in self,
  arrayBuffer: 'ArrayBuffer' in self
}

function isDataView(obj) {
  return obj && DataView.prototype.isPrototypeOf(obj)
}

if (support.arrayBuffer) {
  var viewClasses = [
    '[object Int8Array]',
    '[object Uint8Array]',
    '[object Uint8ClampedArray]',
    '[object Int16Array]',
    '[object Uint16Array]',
    '[object Int32Array]',
    '[object Uint32Array]',
    '[object Float32Array]',
    '[object Float64Array]'
  ]

  var isArrayBufferView =
    ArrayBuffer.isView ||
    function(obj) {
      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1
    }
}

function normalizeName(name) {
  if (typeof name !== 'string') {
    name = String(name)
  }
  if (/[^a-z0-9\-#$%&'*+.^_`|~]/i.test(name)) {
    throw new TypeError('Invalid character in header field name')
  }
  return name.toLowerCase()
}

function normalizeValue(value) {
  if (typeof value !== 'string') {
    value = String(value)
  }
  return value
}

// Build a destructive iterator for the value list
function iteratorFor(items) {
  var iterator = {
    next: function() {
      var value = items.shift()
      return {done: value === undefined, value: value}
    }
  }

  if (support.iterable) {
    iterator[Symbol.iterator] = function() {
      return iterator
    }
  }

  return iterator
}

function Headers(headers) {
  this.map = {}

  if (headers instanceof Headers) {
    headers.forEach(function(value, name) {
      this.append(name, value)
    }, this)
  } else if (Array.isArray(headers)) {
    headers.forEach(function(header) {
      this.append(header[0], header[1])
    }, this)
  } else if (headers) {
    Object.getOwnPropertyNames(headers).forEach(function(name) {
      this.append(name, headers[name])
    }, this)
  }
}

Headers.prototype.append = function(name, value) {
  name = normalizeName(name)
  value = normalizeValue(value)
  var oldValue = this.map[name]
  this.map[name] = oldValue ? oldValue + ', ' + value : value
}

Headers.prototype['delete'] = function(name) {
  delete this.map[normalizeName(name)]
}

Headers.prototype.get = function(name) {
  name = normalizeName(name)
  return this.has(name) ? this.map[name] : null
}

Headers.prototype.has = function(name) {
  return this.map.hasOwnProperty(normalizeName(name))
}

Headers.prototype.set = function(name, value) {
  this.map[normalizeName(name)] = normalizeValue(value)
}

Headers.prototype.forEach = function(callback, thisArg) {
  for (var name in this.map) {
    if (this.map.hasOwnProperty(name)) {
      callback.call(thisArg, this.map[name], name, this)
    }
  }
}

Headers.prototype.keys = function() {
  var items = []
  this.forEach(function(value, name) {
    items.push(name)
  })
  return iteratorFor(items)
}

Headers.prototype.values = function() {
  var items = []
  this.forEach(function(value) {
    items.push(value)
  })
  return iteratorFor(items)
}

Headers.prototype.entries = function() {
  var items = []
  this.forEach(function(value, name) {
    items.push([name, value])
  })
  return iteratorFor(items)
}

if (support.iterable) {
  Headers.prototype[Symbol.iterator] = Headers.prototype.entries
}

function consumed(body) {
  if (body.bodyUsed) {
    return Promise.reject(new TypeError('Already read'))
  }
  body.bodyUsed = true
}

function fileReaderReady(reader) {
  return new Promise(function(resolve, reject) {
    reader.onload = function() {
      resolve(reader.result)
    }
    reader.onerror = function() {
      reject(reader.error)
    }
  })
}

function readBlobAsArrayBuffer(blob) {
  var reader = new FileReader()
  var promise = fileReaderReady(reader)
  reader.readAsArrayBuffer(blob)
  return promise
}

function readBlobAsText(blob) {
  var reader = new FileReader()
  var promise = fileReaderReady(reader)
  reader.readAsText(blob)
  return promise
}

function readArrayBufferAsText(buf) {
  var view = new Uint8Array(buf)
  var chars = new Array(view.length)

  for (var i = 0; i < view.length; i++) {
    chars[i] = String.fromCharCode(view[i])
  }
  return chars.join('')
}

function bufferClone(buf) {
  if (buf.slice) {
    return buf.slice(0)
  } else {
    var view = new Uint8Array(buf.byteLength)
    view.set(new Uint8Array(buf))
    return view.buffer
  }
}

function Body() {
  this.bodyUsed = false

  this._initBody = function(body) {
    this._bodyInit = body
    if (!body) {
      this._bodyText = ''
    } else if (typeof body === 'string') {
      this._bodyText = body
    } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
      this._bodyBlob = body
    } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
      this._bodyFormData = body
    } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
      this._bodyText = body.toString()
    } else if (support.arrayBuffer && support.blob && isDataView(body)) {
      this._bodyArrayBuffer = bufferClone(body.buffer)
      // IE 10-11 can't handle a DataView body.
      this._bodyInit = new Blob([this._bodyArrayBuffer])
    } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {
      this._bodyArrayBuffer = bufferClone(body)
    } else {
      this._bodyText = body = Object.prototype.toString.call(body)
    }

    if (!this.headers.get('content-type')) {
      if (typeof body === 'string') {
        this.headers.set('content-type', 'text/plain;charset=UTF-8')
      } else if (this._bodyBlob && this._bodyBlob.type) {
        this.headers.set('content-type', this._bodyBlob.type)
      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
        this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')
      }
    }
  }

  if (support.blob) {
    this.blob = function() {
      var rejected = consumed(this)
      if (rejected) {
        return rejected
      }

      if (this._bodyBlob) {
        return Promise.resolve(this._bodyBlob)
      } else if (this._bodyArrayBuffer) {
        return Promise.resolve(new Blob([this._bodyArrayBuffer]))
      } else if (this._bodyFormData) {
        throw new Error('could not read FormData body as blob')
      } else {
        return Promise.resolve(new Blob([this._bodyText]))
      }
    }

    this.arrayBuffer = function() {
      if (this._bodyArrayBuffer) {
        return consumed(this) || Promise.resolve(this._bodyArrayBuffer)
      } else {
        return this.blob().then(readBlobAsArrayBuffer)
      }
    }
  }

  this.text = function() {
    var rejected = consumed(this)
    if (rejected) {
      return rejected
    }

    if (this._bodyBlob) {
      return readBlobAsText(this._bodyBlob)
    } else if (this._bodyArrayBuffer) {
      return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))
    } else if (this._bodyFormData) {
      throw new Error('could not read FormData body as text')
    } else {
      return Promise.resolve(this._bodyText)
    }
  }

  if (support.formData) {
    this.formData = function() {
      return this.text().then(decode)
    }
  }

  this.json = function() {
    return this.text().then(JSON.parse)
  }

  return this
}

// HTTP methods whose capitalization should be normalized
var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']

function normalizeMethod(method) {
  var upcased = method.toUpperCase()
  return methods.indexOf(upcased) > -1 ? upcased : method
}

function Request(input, options) {
  options = options || {}
  var body = options.body

  if (input instanceof Request) {
    if (input.bodyUsed) {
      throw new TypeError('Already read')
    }
    this.url = input.url
    this.credentials = input.credentials
    if (!options.headers) {
      this.headers = new Headers(input.headers)
    }
    this.method = input.method
    this.mode = input.mode
    this.signal = input.signal
    if (!body && input._bodyInit != null) {
      body = input._bodyInit
      input.bodyUsed = true
    }
  } else {
    this.url = String(input)
  }

  this.credentials = options.credentials || this.credentials || 'same-origin'
  if (options.headers || !this.headers) {
    this.headers = new Headers(options.headers)
  }
  this.method = normalizeMethod(options.method || this.method || 'GET')
  this.mode = options.mode || this.mode || null
  this.signal = options.signal || this.signal
  this.referrer = null

  if ((this.method === 'GET' || this.method === 'HEAD') && body) {
    throw new TypeError('Body not allowed for GET or HEAD requests')
  }
  this._initBody(body)
}

Request.prototype.clone = function() {
  return new Request(this, {body: this._bodyInit})
}

function decode(body) {
  var form = new FormData()
  body
    .trim()
    .split('&')
    .forEach(function(bytes) {
      if (bytes) {
        var split = bytes.split('=')
        var name = split.shift().replace(/\+/g, ' ')
        var value = split.join('=').replace(/\+/g, ' ')
        form.append(decodeURIComponent(name), decodeURIComponent(value))
      }
    })
  return form
}

function parseHeaders(rawHeaders) {
  var headers = new Headers()
  // Replace instances of \r\n and \n followed by at least one space or horizontal tab with a space
  // https://tools.ietf.org/html/rfc7230#section-3.2
  var preProcessedHeaders = rawHeaders.replace(/\r?\n[\t ]+/g, ' ')
  preProcessedHeaders.split(/\r?\n/).forEach(function(line) {
    var parts = line.split(':')
    var key = parts.shift().trim()
    if (key) {
      var value = parts.join(':').trim()
      headers.append(key, value)
    }
  })
  return headers
}

Body.call(Request.prototype)

function Response(bodyInit, options) {
  if (!options) {
    options = {}
  }

  this.type = 'default'
  this.status = options.status === undefined ? 200 : options.status
  this.ok = this.status >= 200 && this.status < 300
  this.statusText = 'statusText' in options ? options.statusText : 'OK'
  this.headers = new Headers(options.headers)
  this.url = options.url || ''
  this._initBody(bodyInit)
}

Body.call(Response.prototype)

Response.prototype.clone = function() {
  return new Response(this._bodyInit, {
    status: this.status,
    statusText: this.statusText,
    headers: new Headers(this.headers),
    url: this.url
  })
}

Response.error = function() {
  var response = new Response(null, {status: 0, statusText: ''})
  response.type = 'error'
  return response
}

var redirectStatuses = [301, 302, 303, 307, 308]

Response.redirect = function(url, status) {
  if (redirectStatuses.indexOf(status) === -1) {
    throw new RangeError('Invalid status code')
  }

  return new Response(null, {status: status, headers: {location: url}})
}

var DOMException = self.DOMException
try {
  new DOMException()
} catch (err) {
  DOMException = function(message, name) {
    this.message = message
    this.name = name
    var error = Error(message)
    this.stack = error.stack
  }
  DOMException.prototype = Object.create(Error.prototype)
  DOMException.prototype.constructor = DOMException
}

function fetch(input, init) {
  return new Promise(function(resolve, reject) {
    var request = new Request(input, init)

    if (request.signal && request.signal.aborted) {
      return reject(new DOMException('Aborted', 'AbortError'))
    }

    var xhr = new XMLHttpRequest()

    function abortXhr() {
      xhr.abort()
    }

    xhr.onload = function() {
      var options = {
        status: xhr.status,
        statusText: xhr.statusText,
        headers: parseHeaders(xhr.getAllResponseHeaders() || '')
      }
      options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')
      var body = 'response' in xhr ? xhr.response : xhr.responseText
      resolve(new Response(body, options))
    }

    xhr.onerror = function() {
      reject(new TypeError('Network request failed'))
    }

    xhr.ontimeout = function() {
      reject(new TypeError('Network request failed'))
    }

    xhr.onabort = function() {
      reject(new DOMException('Aborted', 'AbortError'))
    }

    xhr.open(request.method, request.url, true)

    if (request.credentials === 'include') {
      xhr.withCredentials = true
    } else if (request.credentials === 'omit') {
      xhr.withCredentials = false
    }

    if ('responseType' in xhr && support.blob) {
      xhr.responseType = 'blob'
    }

    request.headers.forEach(function(value, name) {
      xhr.setRequestHeader(name, value)
    })

    if (request.signal) {
      request.signal.addEventListener('abort', abortXhr)

      xhr.onreadystatechange = function() {
        // DONE (success or failure)
        if (xhr.readyState === 4) {
          request.signal.removeEventListener('abort', abortXhr)
        }
      }
    }

    xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)
  })
}

fetch.polyfill = true

if (!self.fetch) {
  self.fetch = fetch
  self.Headers = Headers
  self.Request = Request
  self.Response = Response
}


/***/ }),
/* 262 */
/***/ (function(module, exports, __webpack_require__) {

!function(e,t){ true?module.exports=t():"function"==typeof define&&define.amd?define(t):e.Navigo=t()}(this,function(){"use strict";var e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};function t(){return!("undefined"==typeof window||!window.history||!window.history.pushState)}function n(e,n,o){this.root=null,this._routes=[],this._useHash=n,this._hash=void 0===o?"#":o,this._paused=!1,this._destroyed=!1,this._lastRouteResolved=null,this._notFoundHandler=null,this._defaultHandler=null,this._usePushState=!n&&t(),this._onLocationChange=this._onLocationChange.bind(this),this._genericHooks=null,this._historyAPIUpdateMethod="pushState",e?this.root=n?e.replace(/\/$/,"/"+this._hash):e.replace(/\/$/,""):n&&(this.root=this._cLoc().split(this._hash)[0].replace(/\/$/,"/"+this._hash)),this._listen(),this.updatePageLinks()}function o(e){return e instanceof RegExp?e:e.replace(/\/+$/,"").replace(/^\/+/,"^/")}function i(e){return e.replace(/\/$/,"").split("/").length}function s(e,t){return i(t)-i(e)}function r(e,t){return function(e){return(arguments.length>1&&void 0!==arguments[1]?arguments[1]:[]).map(function(t){var i=function(e){var t=[];return{regexp:e instanceof RegExp?e:new RegExp(e.replace(n.PARAMETER_REGEXP,function(e,o,i){return t.push(i),n.REPLACE_VARIABLE_REGEXP}).replace(n.WILDCARD_REGEXP,n.REPLACE_WILDCARD)+n.FOLLOWED_BY_SLASH_REGEXP,n.MATCH_REGEXP_FLAGS),paramNames:t}}(o(t.route)),s=i.regexp,r=i.paramNames,a=e.replace(/^\/+/,"/").match(s),h=function(e,t){return 0===t.length?null:e?e.slice(1,e.length).reduce(function(e,n,o){return null===e&&(e={}),e[t[o]]=decodeURIComponent(n),e},null):null}(a,r);return!!a&&{match:a,route:t,params:h}}).filter(function(e){return e})}(e,t)[0]||!1}function a(e,t){var n=t.map(function(t){return""===t.route||"*"===t.route?e:e.split(new RegExp(t.route+"($|/)"))[0]}),i=o(e);return n.length>1?n.reduce(function(e,t){return e.length>t.length&&(e=t),e},n[0]):1===n.length?n[0]:i}function h(e,n,o){var i,s=function(e){return e.split(/\?(.*)?$/)[0]};return void 0===o&&(o="#"),t()&&!n?s(e).split(o)[0]:(i=e.split(o)).length>1?s(i[1]):s(i[0])}function u(t,n,o){if(n&&"object"===(void 0===n?"undefined":e(n))){if(n.before)return void n.before(function(){(!(arguments.length>0&&void 0!==arguments[0])||arguments[0])&&(t(),n.after&&n.after(o))},o);if(n.after)return t(),void(n.after&&n.after(o))}t()}return n.prototype={helpers:{match:r,root:a,clean:o,getOnlyURL:h},navigate:function(e,t){var n;return e=e||"",this._usePushState?(n=(n=(t?"":this._getRoot()+"/")+e.replace(/^\/+/,"/")).replace(/([^:])(\/{2,})/g,"$1/"),history[this._historyAPIUpdateMethod]({},"",n),this.resolve()):"undefined"!=typeof window&&(e=e.replace(new RegExp("^"+this._hash),""),window.location.href=window.location.href.replace(/#$/,"").replace(new RegExp(this._hash+".*$"),"")+this._hash+e),this},on:function(){for(var t=this,n=arguments.length,o=Array(n),i=0;i<n;i++)o[i]=arguments[i];if("function"==typeof o[0])this._defaultHandler={handler:o[0],hooks:o[1]};else if(o.length>=2)if("/"===o[0]){var r=o[1];"object"===e(o[1])&&(r=o[1].uses),this._defaultHandler={handler:r,hooks:o[2]}}else this._add(o[0],o[1],o[2]);else"object"===e(o[0])&&Object.keys(o[0]).sort(s).forEach(function(e){t.on(e,o[0][e])});return this},off:function(e){return null!==this._defaultHandler&&e===this._defaultHandler.handler?this._defaultHandler=null:null!==this._notFoundHandler&&e===this._notFoundHandler.handler&&(this._notFoundHandler=null),this._routes=this._routes.reduce(function(t,n){return n.handler!==e&&t.push(n),t},[]),this},notFound:function(e,t){return this._notFoundHandler={handler:e,hooks:t},this},resolve:function(e){var n,o,i=this,s=(e||this._cLoc()).replace(this._getRoot(),"");this._useHash&&(s=s.replace(new RegExp("^/"+this._hash),"/"));var a=function(e){return e.split(/\?(.*)?$/).slice(1).join("")}(e||this._cLoc()),l=h(s,this._useHash,this._hash);return!this._paused&&(this._lastRouteResolved&&l===this._lastRouteResolved.url&&a===this._lastRouteResolved.query?(this._lastRouteResolved.hooks&&this._lastRouteResolved.hooks.already&&this._lastRouteResolved.hooks.already(this._lastRouteResolved.params),!1):(o=r(l,this._routes))?(this._callLeave(),this._lastRouteResolved={url:l,query:a,hooks:o.route.hooks,params:o.params,name:o.route.name},n=o.route.handler,u(function(){u(function(){o.route.route instanceof RegExp?n.apply(void 0,o.match.slice(1,o.match.length)):n(o.params,a)},o.route.hooks,o.params,i._genericHooks)},this._genericHooks,o.params),o):this._defaultHandler&&(""===l||"/"===l||l===this._hash||function(e,n,o){if(t()&&!n)return!1;if(!e.match(o))return!1;var i=e.split(o);return i.length<2||""===i[1]}(l,this._useHash,this._hash))?(u(function(){u(function(){i._callLeave(),i._lastRouteResolved={url:l,query:a,hooks:i._defaultHandler.hooks},i._defaultHandler.handler(a)},i._defaultHandler.hooks)},this._genericHooks),!0):(this._notFoundHandler&&u(function(){u(function(){i._callLeave(),i._lastRouteResolved={url:l,query:a,hooks:i._notFoundHandler.hooks},i._notFoundHandler.handler(a)},i._notFoundHandler.hooks)},this._genericHooks),!1))},destroy:function(){this._routes=[],this._destroyed=!0,this._lastRouteResolved=null,this._genericHooks=null,clearTimeout(this._listeningInterval),"undefined"!=typeof window&&(window.removeEventListener("popstate",this._onLocationChange),window.removeEventListener("hashchange",this._onLocationChange))},updatePageLinks:function(){var e=this;"undefined"!=typeof document&&this._findLinks().forEach(function(t){t.hasListenerAttached||(t.addEventListener("click",function(n){if((n.ctrlKey||n.metaKey)&&"a"==n.target.tagName.toLowerCase())return!1;var o=e.getLinkPath(t);e._destroyed||(n.preventDefault(),e.navigate(o.replace(/\/+$/,"").replace(/^\/+/,"/")))}),t.hasListenerAttached=!0)})},generate:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=this._routes.reduce(function(n,o){var i;if(o.name===e)for(i in n=o.route,t)n=n.toString().replace(":"+i,t[i]);return n},"");return this._useHash?this._hash+n:n},link:function(e){return this._getRoot()+e},pause:function(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];this._paused=e,this._historyAPIUpdateMethod=e?"replaceState":"pushState"},resume:function(){this.pause(!1)},historyAPIUpdateMethod:function(e){return void 0===e?this._historyAPIUpdateMethod:(this._historyAPIUpdateMethod=e,e)},disableIfAPINotAvailable:function(){t()||this.destroy()},lastRouteResolved:function(){return this._lastRouteResolved},getLinkPath:function(e){return e.getAttribute("href")},hooks:function(e){this._genericHooks=e},_add:function(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;return"string"==typeof t&&(t=encodeURI(t)),this._routes.push("object"===(void 0===n?"undefined":e(n))?{route:t,handler:n.uses,name:n.as,hooks:o||n.hooks}:{route:t,handler:n,hooks:o}),this._add},_getRoot:function(){return null!==this.root?this.root:(this.root=a(this._cLoc().split("?")[0],this._routes),this.root)},_listen:function(){var e=this;if(this._usePushState)window.addEventListener("popstate",this._onLocationChange);else if("undefined"!=typeof window&&"onhashchange"in window)window.addEventListener("hashchange",this._onLocationChange);else{var t=this._cLoc(),n=void 0,o=void 0;(o=function(){n=e._cLoc(),t!==n&&(t=n,e.resolve()),e._listeningInterval=setTimeout(o,200)})()}},_cLoc:function(){return"undefined"!=typeof window?void 0!==window.__NAVIGO_WINDOW_LOCATION_MOCK__?window.__NAVIGO_WINDOW_LOCATION_MOCK__:o(window.location.href):""},_findLinks:function(){return[].slice.call(document.querySelectorAll("[data-navigo]"))},_onLocationChange:function(){this.resolve()},_callLeave:function(){var e=this._lastRouteResolved;e&&e.hooks&&e.hooks.leave&&e.hooks.leave(e.params)}},n.PARAMETER_REGEXP=/([:*])(\w+)/g,n.WILDCARD_REGEXP=/\*/g,n.REPLACE_VARIABLE_REGEXP="([^/]+)",n.REPLACE_WILDCARD="(?:.*)",n.FOLLOWED_BY_SLASH_REGEXP="(?:/$|$)",n.MATCH_REGEXP_FLAGS="",n});
//# sourceMappingURL=navigo.min.js.map


/***/ }),
/* 263 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits__ = __webpack_require__(16);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_yo_yoify_lib_appendChild__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_yo_yoify_lib_appendChild___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_yo_yoify_lib_appendChild__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_abstractions_DomComponent__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_components_data_table__ = __webpack_require__(264);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_components_data_summary__ = __webpack_require__(275);











var RemoteApp = function (_DomComponent) {
  __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits___default()(RemoteApp, _DomComponent);

  function RemoteApp() {
    __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default()(this, RemoteApp);

    return __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn___default()(this, (RemoteApp.__proto__ || __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default()(RemoteApp)).apply(this, arguments));
  }

  __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default()(RemoteApp, [{
    key: 'didMount',
    value: function didMount() {
      console.log('remote app is mounted');
    }
  }, {
    key: 'render',
    value: function render() {
      var _remoteApp;

      this.refs.table = this.registerComponent(__WEBPACK_IMPORTED_MODULE_7_components_data_table__["a" /* default */]);
      this.refs.summary = this.registerComponent(__WEBPACK_IMPORTED_MODULE_8_components_data_summary__["a" /* default */]);

      return _remoteApp = document.createElement('main'), _remoteApp.setAttribute('id', 'RemoteApp'), _remoteApp.setAttribute('class', 'app'), __WEBPACK_IMPORTED_MODULE_5_yo_yoify_lib_appendChild___default()(_remoteApp, [' ', this.refs.table.raw(), ' ', this.refs.summary.raw(), ' ']), _remoteApp;
    }
  }]);

  return RemoteApp;
}(__WEBPACK_IMPORTED_MODULE_6_abstractions_DomComponent__["a" /* default */]);

/* harmony default export */ __webpack_exports__["a"] = (RemoteApp);

/***/ }),
/* 264 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_values__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_values___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_values__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_keys__ = __webpack_require__(267);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_keys___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_keys__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_get_prototype_of__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_get_prototype_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_get_prototype_of__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_classCallCheck__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_classCallCheck__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_createClass__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_createClass__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_babel_runtime_helpers_possibleConstructorReturn__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_babel_runtime_helpers_possibleConstructorReturn___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_babel_runtime_helpers_possibleConstructorReturn__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_babel_runtime_helpers_inherits__ = __webpack_require__(16);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_babel_runtime_helpers_inherits___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_babel_runtime_helpers_inherits__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_yo_yoify_lib_appendChild__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_yo_yoify_lib_appendChild___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_yo_yoify_lib_appendChild__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_nodelist_foreach__ = __webpack_require__(270);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_nodelist_foreach___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_nodelist_foreach__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_controllers_dataset__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_abstractions_DomComponent__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_controllers_store__ = __webpack_require__(18);














var CACHED = {};

var columns = {
  'horaire': function horaire(item) {
    return item['heure'];
  },
  'occupation': function occupation(item) {
    return item['% occupation'].toFixed(2).replace('.', ',') + '%';
  },
  'évolution': function volution(item, prev, next) {
    if (!prev) return '';
    if (prev['% occupation'] > item['% occupation']) return '/';
    if (prev['% occupation'] < item['% occupation']) return '\\';
    if (prev['% occupation'] === item['% occupation']) return '—';
  },
  'entrées': function entrEs(item) {
    return item['entrées'];
  },
  'sorties': function sorties(item) {
    return item['sorties'];
  }
};

var DataTable = function (_DomComponent) {
  __WEBPACK_IMPORTED_MODULE_6_babel_runtime_helpers_inherits___default()(DataTable, _DomComponent);

  function DataTable() {
    __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_classCallCheck___default()(this, DataTable);

    return __WEBPACK_IMPORTED_MODULE_5_babel_runtime_helpers_possibleConstructorReturn___default()(this, (DataTable.__proto__ || __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_get_prototype_of___default()(DataTable)).apply(this, arguments));
  }

  __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_createClass___default()(DataTable, [{
    key: 'render',
    value: function render() {
      var _dataTableItems, _dataTableHeader, _dataTable;

      this.refs.items = (_dataTableItems = document.createElement('ul'), _dataTableItems.setAttribute('class', 'data-table__items'), _dataTableItems);
      return _dataTable = document.createElement('section'), _dataTable.setAttribute('class', 'data-table'), __WEBPACK_IMPORTED_MODULE_7_yo_yoify_lib_appendChild___default()(_dataTable, [' ', (_dataTableHeader = document.createElement('header'), _dataTableHeader.setAttribute('class', 'data-table__header'), __WEBPACK_IMPORTED_MODULE_7_yo_yoify_lib_appendChild___default()(_dataTableHeader, [' ', __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_keys___default()(columns).map(function (k) {
        var _dataTableHeaderItem;

        return _dataTableHeaderItem = document.createElement('div'), _dataTableHeaderItem.setAttribute('class', 'data-table__header-item'), __WEBPACK_IMPORTED_MODULE_7_yo_yoify_lib_appendChild___default()(_dataTableHeaderItem, [k]), _dataTableHeaderItem;
      }), ' ']), _dataTableHeader), ' ', this.refs.items, ' ']), _dataTable;
    }
  }, {
    key: 'didMount',
    value: function didMount() {
      this.bindFuncs(['update']);
      __WEBPACK_IMPORTED_MODULE_11_controllers_store__["a" /* default */].watch('datasetIndex', this.update, { immediate: true });
      __WEBPACK_IMPORTED_MODULE_11_controllers_store__["a" /* default */].set('datasetDayIndex', 0);
    }
  }, {
    key: 'willUnmount',
    value: function willUnmount() {
      __WEBPACK_IMPORTED_MODULE_11_controllers_store__["a" /* default */].unwatch('datasetIndex', this.update);
    }
  }, {
    key: 'update',
    value: function update() {
      var _this2 = this;

      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;

      this.day = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_values___default()(__WEBPACK_IMPORTED_MODULE_9_controllers_dataset__["a" /* default */])[index];
      if (!CACHED[index]) {
        CACHED[index] = this.day.map(function (halfHour, index) {
          var values = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_values___default()(columns).map(function (parser) {
            return parser(halfHour, _this2.day[index - 1], _this2.day[index + 1]);
          });
          return '\n        <li class=\'data-table__item\'>\n          ' + values.map(function (v) {
            return '<div class=\'data-table__item-content\'>' + v + '</div>';
          }).join('') + '\n        </li>';
        }).join('');
      }
      this.refs.items.innerHTML = CACHED[index];
      this.attachTouchListener();
    }
  }, {
    key: 'attachTouchListener',
    value: function attachTouchListener() {
      this.refs.items.querySelectorAll('li').forEach(function (item, index) {
        item.addEventListener('click', function (e) {
          return __WEBPACK_IMPORTED_MODULE_11_controllers_store__["a" /* default */].set('datasetDayIndex', index);
        });
      });
    }
  }]);

  return DataTable;
}(__WEBPACK_IMPORTED_MODULE_10_abstractions_DomComponent__["a" /* default */]);

/* harmony default export */ __webpack_exports__["a"] = (DataTable);

/***/ }),
/* 265 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(266);
module.exports = __webpack_require__(1).Object.values;


/***/ }),
/* 266 */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/tc39/proposal-object-values-entries
var $export = __webpack_require__(4);
var $values = __webpack_require__(78)(false);

$export($export.S, 'Object', {
  values: function values(it) {
    return $values(it);
  }
});


/***/ }),
/* 267 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(268), __esModule: true };

/***/ }),
/* 268 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(269);
module.exports = __webpack_require__(1).Object.keys;


/***/ }),
/* 269 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 Object.keys(O)
var toObject = __webpack_require__(33);
var $keys = __webpack_require__(26);

__webpack_require__(71)('keys', function () {
  return function keys(it) {
    return $keys(toObject(it));
  };
});


/***/ }),
/* 270 */
/***/ (function(module, exports) {

(function(self) {
  'use strict';

  if (self.NodeList.prototype.forEach) {
    return;
  }

  self.NodeList.prototype.forEach = function forEach(cb, thisArg) {
    for (var i = 0; i < this.length; i++) {
      cb.call(thisArg, this[i], i, this);
    }
  };
})(typeof self !== 'undefined' ? self : this);


/***/ }),
/* 271 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = ("date;heure;pr\xE9sences;capacit\xE9;% occupation;entr\xE9es;sorties\n01/10/18;00:00;267;864;30,90;2;3\n01/10/18;00:30;265;864;30,67;0;2\n01/10/18;01:00;265;864;30,67;0;0\n01/10/18;01:30;265;864;30,67;0;0\n01/10/18;02:00;265;864;30,67;0;0\n01/10/18;02:30;265;864;30,67;0;0\n01/10/18;03:00;265;864;30,67;0;0\n01/10/18;03:30;265;864;30,67;0;0\n01/10/18;04:00;265;864;30,67;0;0\n01/10/18;04:30;265;864;30,67;0;1\n01/10/18;05:00;264;864;30,56;1;2\n01/10/18;05:30;264;864;30,56;1;0\n01/10/18;06:00;264;864;30,56;2;2\n01/10/18;06:30;273;864;31,60;16;3\n01/10/18;07:00;276;864;31,94;25;9\n01/10/18;07:30;299;864;34,61;34;15\n01/10/18;08:00;313;864;36,23;61;23\n01/10/18;08:30;401;864;46,41;104;20\n01/10/18;09:00;442;864;51,16;91;19\n01/10/18;09:30;536;864;62,04;73;21\n01/10/18;10:00;562;864;65,05;69;23\n01/10/18;10:30;621;864;71,88;77;47\n01/10/18;11:00;628;864;72,69;63;56\n01/10/18;11:30;657;864;76,04;81;57\n01/10/18;12:00;671;864;77,66;86;58\n01/10/18;12:30;710;864;82,18;69;43\n01/10/18;13:00;715;864;82,75;45;67\n01/10/18;13:30;702;864;81,25;85;65\n01/10/18;14:00;714;864;82,64;78;58\n01/10/18;14:30;715;864;82,75;73;91\n01/10/18;15:00;716;864;82,87;54;74\n01/10/18;15:30;649;864;75,12;45;102\n01/10/18;16:00;625;864;72,34;54;74\n01/10/18;16:30;598;864;69,21;47;65\n01/10/18;17:00;598;864;69,21;47;60\n01/10/18;17:30;554;864;64,12;36;82\n01/10/18;18:00;544;864;62,96;57;91\n01/10/18;18:30;474;864;54,86;45;97\n01/10/18;19:00;455;864;52,66;41;79\n01/10/18;19:30;400;864;46,30;32;55\n01/10/18;20:00;393;864;45,49;25;23\n01/10/18;20:30;396;864;45,83;12;17\n01/10/18;21:00;388;864;44,91;6;13\n01/10/18;21:30;369;864;42,71;5;18\n01/10/18;22:00;366;864;42,36;8;17\n01/10/18;22:30;347;864;40,16;5;24\n01/10/18;23:00;340;864;39,35;1;13\n01/10/18;23:30;322;864;37,27;0;9\n02/10/18;00:00;319;864;36,92;0;1\n02/10/18;00:30;318;864;36,81;0;0\n02/10/18;01:00;318;864;36,81;1;3\n02/10/18;01:30;316;864;36,57;0;0\n02/10/18;02:00;316;864;36,57;0;1\n02/10/18;02:30;315;864;36,46;0;0\n02/10/18;03:00;315;864;36,46;0;0\n02/10/18;03:30;314;864;36,34;0;1\n02/10/18;04:00;314;864;36,34;0;1\n02/10/18;04:30;313;864;36,23;0;2\n02/10/18;05:00;311;864;36,00;0;0\n02/10/18;05:30;312;864;36,11;3;1\n02/10/18;06:00;313;864;36,23;5;0\n02/10/18;06:30;320;864;37,04;10;6\n02/10/18;07:00;328;864;37,96;27;10\n02/10/18;07:30;352;864;40,74;39;26\n02/10/18;08:00;348;864;40,28;43;26\n02/10/18;08:30;407;864;47,11;74;14\n02/10/18;09:00;451;864;52,20;100;19\n02/10/18;09:30;551;864;63,77;94;21\n02/10/18;10:00;586;864;67,82;87;28\n02/10/18;10:30;665;864;76,97;97;49\n02/10/18;11:00;695;864;80,44;79;49\n02/10/18;11:30;710;864;82,18;66;74\n02/10/18;12:00;721;864;83,45;82;61\n02/10/18;12:30;734;864;84,95;50;49\n02/10/18;13:00;740;864;85,65;49;49\n02/10/18;13:30;736;864;85,19;69;73\n02/10/18;14:00;737;864;85,30;72;75\n02/10/18;14:30;745;864;86,23;88;60\n02/10/18;15:00;754;864;87,27;73;84\n02/10/18;15:30;735;864;85,07;66;99\n02/10/18;16:00;705;864;81,60;48;86\n02/10/18;16:30;672;864;77,78;66;81\n02/10/18;17:00;647;864;74,88;48;96\n02/10/18;17:30;588;864;68,06;47;82\n02/10/18;18:00;573;864;66,32;50;75\n02/10/18;18:30;522;864;60,42;46;87\n02/10/18;19:00;495;864;57,29;46;111\n02/10/18;19:30;422;864;48,84;40;62\n02/10/18;20:00;415;864;48,03;30;26\n02/10/18;20:30;427;864;49,42;25;20\n02/10/18;21:00;425;864;49,19;16;21\n02/10/18;21:30;415;864;48,03;10;17\n02/10/18;22:00;410;864;47,45;6;27\n02/10/18;22:30;370;864;42,82;4;34\n02/10/18;23:00;359;864;41,55;5;26\n02/10/18;23:30;330;864;38,19;2;14\n03/10/18;00:00;329;864;38,08;2;13\n03/10/18;00:30;314;864;36,34;0;7\n03/10/18;01:00;310;864;35,88;1;3\n03/10/18;01:30;310;864;35,88;0;0\n03/10/18;02:00;310;864;35,88;0;0\n03/10/18;02:30;310;864;35,88;0;0\n03/10/18;03:00;310;864;35,88;0;1\n03/10/18;03:30;309;864;35,76;0;0\n03/10/18;04:00;309;864;35,76;0;0\n03/10/18;04:30;309;864;35,76;0;0\n03/10/18;05:00;309;864;35,76;0;0\n03/10/18;05:30;310;864;35,88;3;0\n03/10/18;06:00;313;864;36,23;4;2\n03/10/18;06:30;322;864;37,27;15;3\n03/10/18;07:00;325;864;37,62;26;9\n03/10/18;07:30;344;864;39,81;39;27\n03/10/18;08:00;356;864;41,20;65;23\n03/10/18;08:30;437;864;50,58;92;23\n03/10/18;09:00;479;864;55,44;95;16\n03/10/18;09:30;592;864;68,52;97;22\n03/10/18;10:00;626;864;72,45;94;27\n03/10/18;10:30;724;864;83,80;80;44\n03/10/18;11:00;724;864;83,80;50;53\n03/10/18;11:30;719;864;83,22;67;67\n03/10/18;12:00;717;864;82,99;86;84\n03/10/18;12:30;721;864;83,45;51;48\n03/10/18;13:00;723;864;83,68;46;48\n03/10/18;13:30;729;864;84,38;69;64\n03/10/18;14:00;731;864;84,61;77;70\n03/10/18;14:30;740;864;85,65;66;62\n03/10/18;15:00;740;864;85,65;65;64\n03/10/18;15:30;734;864;84,95;70;70\n03/10/18;16:00;739;864;85,53;56;91\n03/10/18;16:30;671;864;77,66;63;100\n03/10/18;17:00;668;864;77,31;59;77\n03/10/18;17:30;634;864;73,38;67;86\n03/10/18;18:00;630;864;72,92;46;89\n03/10/18;18:30;553;864;64,00;51;109\n03/10/18;19:00;526;864;60,88;57;121\n03/10/18;19:30;471;864;54,51;74;57\n03/10/18;20:00;503;864;58,22;44;29\n03/10/18;20:30;503;864;58,22;33;26\n03/10/18;21:00;501;864;57,99;13;23\n03/10/18;21:30;485;864;56,13;12;31\n03/10/18;22:00;471;864;54,51;4;52\n03/10/18;22:30;416;864;48,15;8;36\n03/10/18;23:00;395;864;45,72;3;42\n03/10/18;23:30;353;864;40,86;2;12\n04/10/18;00:00;346;864;40,05;1;11\n04/10/18;00:30;335;864;38,77;0;5\n04/10/18;01:00;331;864;38,31;0;1\n04/10/18;01:30;329;864;38,08;1;2\n04/10/18;02:00;329;864;38,08;0;3\n04/10/18;02:30;325;864;37,62;0;1\n04/10/18;03:00;325;864;37,62;0;1\n04/10/18;03:30;324;864;37,50;0;0\n04/10/18;04:00;324;864;37,50;0;1\n04/10/18;04:30;323;864;37,38;0;0\n04/10/18;05:00;323;864;37,38;1;0\n04/10/18;05:30;324;864;37,50;0;0\n04/10/18;06:00;324;864;37,50;4;1\n04/10/18;06:30;333;864;38,54;11;5\n04/10/18;07:00;334;864;38,66;38;13\n04/10/18;07:30;358;864;41,44;40;16\n04/10/18;08:00;383;864;44,33;44;27\n04/10/18;08:30;464;864;53,70;90;21\n04/10/18;09:00;505;864;58,45;97;26\n04/10/18;09:30;571;864;66,09;86;26\n04/10/18;10:00;602;864;69,68;106;26\n04/10/18;10:30;694;864;80,32;98;55\n04/10/18;11:00;722;864;83,56;60;51\n04/10/18;11:30;728;864;84,26;56;58\n04/10/18;12:00;728;864;84,26;84;72\n04/10/18;12:30;736;864;85,19;42;42\n04/10/18;13:00;734;864;84,95;50;48\n04/10/18;13:30;743;864;86,00;68;55\n04/10/18;14:00;750;864;86,81;66;69\n04/10/18;14:30;746;864;86,34;64;63\n04/10/18;15:00;746;864;86,34;77;80\n04/10/18;15:30;743;864;86,00;60;68\n04/10/18;16:00;741;864;85,76;67;91\n04/10/18;16:30;700;864;81,02;67;80\n04/10/18;17:00;704;864;81,48;70;93\n04/10/18;17:30;666;864;77,08;64;93\n04/10/18;18:00;650;864;75,23;68;91\n04/10/18;18:30;589;864;68,17;53;102\n04/10/18;19:00;582;864;67,36;39;114\n04/10/18;19:30;492;864;56,94;56;55\n04/10/18;20:00;500;864;57,87;66;32\n04/10/18;20:30;539;864;62,38;49;26\n04/10/18;21:00;547;864;63,31;16;22\n04/10/18;21:30;537;864;62,15;8;26\n04/10/18;22:00;523;864;60,53;6;46\n04/10/18;22:30;472;864;54,63;2;39\n04/10/18;23:00;463;864;53,59;4;45\n04/10/18;23:30;407;864;47,11;2;41\n05/10/18;00:00;393;864;45,49;3;25\n05/10/18;00:30;367;864;42,48;1;9\n05/10/18;01:00;366;864;42,36;1;8\n05/10/18;01:30;360;864;41,67;0;2\n05/10/18;02:00;359;864;41,55;0;1\n05/10/18;02:30;358;864;41,44;0;1\n05/10/18;03:00;357;864;41,32;1;1\n05/10/18;03:30;358;864;41,44;2;1\n05/10/18;04:00;358;864;41,44;0;1\n05/10/18;04:30;357;864;41,32;0;0\n05/10/18;05:00;357;864;41,32;1;1\n05/10/18;05:30;359;864;41,55;3;2\n05/10/18;06:00;358;864;41,44;2;5\n05/10/18;06:30;360;864;41,67;14;10\n05/10/18;07:00;369;864;42,71;30;8\n05/10/18;07:30;390;864;45,14;36;26\n05/10/18;08:00;397;864;45,95;60;12\n05/10/18;08:30;480;864;55,56;90;16\n05/10/18;09:00;515;864;59,61;99;21\n05/10/18;09:30;634;864;73,38;98;22\n05/10/18;10:00;656;864;75,93;101;37\n05/10/18;10:30;735;864;85,07;105;58\n05/10/18;11:00;746;864;86,34;90;74\n05/10/18;11:30;759;864;87,85;70;73\n05/10/18;12:00;758;864;87,73;91;83\n05/10/18;12:30;747;864;86,46;56;57\n05/10/18;13:00;748;864;86,57;60;57\n05/10/18;13:30;751;864;86,92;60;75\n05/10/18;14:00;744;864;86,11;92;83\n05/10/18;14:30;747;864;86,46;92;87\n05/10/18;15:00;755;864;87,38;80;89\n05/10/18;15:30;735;864;85,07;77;89\n05/10/18;16:00;771;864;89,24;70;92\n05/10/18;16:30;756;864;87,50;83;91\n05/10/18;17:00;737;864;85,30;87;99\n05/10/18;17:30;730;864;84,49;64;107\n05/10/18;18:00;698;864;80,79;66;115\n05/10/18;18:30;606;864;70,14;60;106\n05/10/18;19:00;590;864;68,29;52;100\n05/10/18;19:30;530;864;61,34;58;70\n05/10/18;20:00;533;864;61,69;68;40\n05/10/18;20:30;592;864;68,52;69;26\n05/10/18;21:00;608;864;70,37;40;25\n05/10/18;21:30;615;864;71,18;27;34\n05/10/18;22:00;606;864;70,14;10;43\n05/10/18;22:30;558;864;64,58;5;48\n05/10/18;23:00;530;864;61,34;0;44\n05/10/18;23:30;465;864;53,82;3;37\n06/10/18;00:00;448;864;51,85;2;40\n06/10/18;00:30;401;864;46,41;4;31\n06/10/18;01:00;395;864;45,72;2;8\n06/10/18;01:30;380;864;43,98;0;9\n06/10/18;02:00;378;864;43,75;0;6\n06/10/18;02:30;372;864;43,06;1;6\n06/10/18;03:00;367;864;42,48;1;0\n06/10/18;03:30;369;864;42,71;2;1\n06/10/18;04:00;369;864;42,71;0;0\n06/10/18;04:30;368;864;42,59;0;3\n06/10/18;05:00;364;864;42,13;0;1\n06/10/18;05:30;364;864;42,13;1;0\n06/10/18;06:00;364;864;42,13;0;1\n06/10/18;06:30;364;864;42,13;1;0\n06/10/18;07:00;364;864;42,13;3;1\n06/10/18;07:30;367;864;42,48;6;4\n06/10/18;08:00;368;864;42,59;17;8\n06/10/18;08:30;388;864;44,91;31;8\n06/10/18;09:00;409;864;47,34;55;8\n06/10/18;09:30;492;864;56,94;98;22\n06/10/18;10:00;543;864;62,85;116;25\n06/10/18;10:30;671;864;77,66;128;44\n06/10/18;11:00;706;864;81,71;110;65\n06/10/18;11:30;773;864;89,47;119;83\n06/10/18;12:00;781;864;90,39;109;74\n06/10/18;12:30;811;864;93,87;59;59\n06/10/18;13:00;813;864;94,10;61;61\n06/10/18;13:30;812;864;93,98;49;48\n06/10/18;14:00;811;864;93,87;61;60\n06/10/18;14:30;811;864;93,87;59;65\n06/10/18;15:00;804;864;93,06;98;97\n06/10/18;15:30;789;864;91,32;80;85\n06/10/18;16:00;804;864;93,06;86;82\n06/10/18;16:30;802;864;92,82;88;84\n06/10/18;17:00;802;864;92,82;95;99\n06/10/18;17:30;795;864;92,01;98;103\n06/10/18;18:00;794;864;91,90;95;130\n06/10/18;18:30;745;864;86,23;89;141\n06/10/18;19:00;694;864;80,32;60;137\n06/10/18;19:30;613;864;70,95;68;76\n06/10/18;20:00;627;864;72,57;75;41\n06/10/18;20:30;682;864;78,94;74;39\n06/10/18;21:00;693;864;80,21;48;54\n06/10/18;21:30;678;864;78,47;34;45\n06/10/18;22:00;672;864;77,78;15;56\n06/10/18;22:30;618;864;71,53;13;43\n06/10/18;23:00;589;864;68,17;13;75\n06/10/18;23:30;510;864;59,03;4;53\n07/10/18;00:00;480;864;55,56;3;41\n07/10/18;00:30;424;864;49,07;4;39\n07/10/18;01:00;417;864;48,26;0;18\n07/10/18;01:30;399;864;46,18;1;9\n07/10/18;02:00;390;864;45,14;0;7\n07/10/18;02:30;383;864;44,33;1;5\n07/10/18;03:00;380;864;43,98;0;5\n07/10/18;03:30;374;864;43,29;0;4\n07/10/18;04:00;372;864;43,06;1;1\n07/10/18;04:30;372;864;43,06;0;2\n07/10/18;05:00;371;864;42,94;0;0\n07/10/18;05:30;371;864;42,94;2;2\n07/10/18;06:00;371;864;42,94;1;0\n07/10/18;06:30;373;864;43,17;2;1\n07/10/18;07:00;373;864;43,17;14;2\n07/10/18;07:30;394;864;45,60;10;1\n07/10/18;08:00;394;864;45,60;2;6\n07/10/18;08:30;386;864;44,68;1;4\n07/10/18;09:00;384;864;44,44;0;5\n07/10/18;09:30;372;864;43,06;5;12\n07/10/18;10:00;368;864;42,59;6;9\n07/10/18;10:30;365;864;42,25;4;10\n07/10/18;11:00;362;864;41,90;4;14\n07/10/18;11:30;347;864;40,16;2;11\n07/10/18;12:00;342;864;39,58;5;10\n07/10/18;12:30;331;864;38,31;7;11\n07/10/18;13:00;330;864;38,19;0;9\n07/10/18;13:30;323;864;37,38;4;11\n07/10/18;14:00;317;864;36,69;2;6\n07/10/18;14:30;310;864;35,88;8;10\n07/10/18;15:00;312;864;36,11;8;15\n07/10/18;15:30;303;864;35,07;10;11\n07/10/18;16:00;306;864;35,42;18;11\n07/10/18;16:30;309;864;35,76;18;20\n07/10/18;17:00;308;864;35,65;20;6\n07/10/18;17:30;322;864;37,27;23;16\n07/10/18;18:00;327;864;37,85;18;17\n07/10/18;18:30;328;864;37,96;9;13\n07/10/18;19:00;326;864;37,73;12;12\n07/10/18;19:30;332;864;38,43;22;8\n07/10/18;20:00;339;864;39,24;9;11\n07/10/18;20:30;338;864;39,12;12;9\n07/10/18;21:00;342;864;39,58;16;11\n07/10/18;21:30;344;864;39,81;5;6\n07/10/18;22:00;342;864;39,58;4;5\n07/10/18;22:30;341;864;39,47;3;6\n07/10/18;23:00;338;864;39,12;2;3\n07/10/18;23:30;335;864;38,77;2;4\n08/10/18;00:00;336;864;38,89;0;4\n08/10/18;00:30;331;864;38,31;0;1\n08/10/18;01:00;331;864;38,31;0;0\n08/10/18;01:30;331;864;38,31;0;0\n08/10/18;02:00;331;864;38,31;0;0\n08/10/18;02:30;331;864;38,31;1;0\n08/10/18;03:00;332;864;38,43;0;0\n08/10/18;03:30;332;864;38,43;0;0\n08/10/18;04:00;332;864;38,43;0;0\n08/10/18;04:30;332;864;38,43;0;1\n08/10/18;05:00;331;864;38,31;2;2\n08/10/18;05:30;331;864;38,31;2;0\n08/10/18;06:00;334;864;38,66;2;2\n08/10/18;06:30;334;864;38,66;7;7\n08/10/18;07:00;339;864;39,24;16;8\n08/10/18;07:30;350;864;40,51;41;22\n08/10/18;08:00;363;864;42,01;60;23\n08/10/18;08:30;450;864;52,08;98;8\n08/10/18;09:00;496;864;57,41;95;22\n08/10/18;09:30;605;864;70,02;87;19\n08/10/18;10:00;637;864;73,73;90;21\n08/10/18;10:30;719;864;83,22;77;40\n08/10/18;11:00;732;864;84,72;63;52\n08/10/18;11:30;760;864;87,96;81;52\n08/10/18;12:00;786;864;90,97;88;69\n08/10/18;12:30;794;864;91,90;58;55\n08/10/18;13:00;788;864;91,20;49;67\n08/10/18;13:30;779;864;90,16;70;59\n08/10/18;14:00;786;864;90,97;85;79\n08/10/18;14:30;801;864;92,71;69;57\n08/10/18;15:00;803;864;92,94;80;90\n08/10/18;15:30;776;864;89,81;61;86\n08/10/18;16:00;765;864;88,54;70;102\n08/10/18;16:30;718;864;83,10;61;91\n08/10/18;17:00;698;864;80,79;45;78\n08/10/18;17:30;628;864;72,69;46;95\n08/10/18;18:00;618;864;71,53;54;82\n08/10/18;18:30;551;864;63,77;34;91\n08/10/18;19:00;531;864;61,46;36;102\n08/10/18;19:30;441;864;51,04;23;51\n08/10/18;20:00;438;864;50,69;21;28\n08/10/18;20:30;430;864;49,77;10;19\n08/10/18;21:00;426;864;49,31;11;10\n08/10/18;21:30;414;864;47,92;6;20\n08/10/18;22:00;409;864;47,34;3;16\n08/10/18;22:30;386;864;44,68;5;18\n08/10/18;23:00;385;864;44,56;2;9\n08/10/18;23:30;375;864;43,40;0;3\n09/10/18;00:00;372;864;43,06;0;4\n09/10/18;00:30;368;864;42,59;0;2\n09/10/18;01:00;367;864;42,48;1;0\n09/10/18;01:30;367;864;42,48;0;1\n09/10/18;02:00;367;864;42,48;0;0\n09/10/18;02:30;367;864;42,48;0;1\n09/10/18;03:00;366;864;42,36;0;0\n09/10/18;03:30;366;864;42,36;0;0\n09/10/18;04:00;366;864;42,36;0;0\n09/10/18;04:30;366;864;42,36;0;0\n09/10/18;05:00;366;864;42,36;0;1\n09/10/18;05:30;367;864;42,48;3;0\n09/10/18;06:00;367;864;42,48;1;3\n09/10/18;06:30;368;864;42,59;13;8\n09/10/18;07:00;374;864;43,29;22;12\n09/10/18;07:30;393;864;45,49;43;18\n09/10/18;08:00;419;864;48,50;50;27\n09/10/18;08:30;443;864;51,27;105;16\n09/10/18;09:00;541;864;62,62;101;13\n09/10/18;09:30;657;864;76,04;101;20\n09/10/18;10:00;699;864;80,90;101;28\n09/10/18;10:30;783;864;90,63;70;43\n09/10/18;11:00;801;864;92,71;78;55\n09/10/18;11:30;809;864;93,63;59;55\n09/10/18;12:00;811;864;93,87;62;62\n09/10/18;12:30;814;864;94,21;51;46\n09/10/18;13:00;817;864;94,56;37;42\n09/10/18;13:30;814;864;94,21;77;76\n09/10/18;14:00;815;864;94,33;59;58\n09/10/18;14:30;811;864;93,87;68;68\n09/10/18;15:00;814;864;94,21;50;63\n09/10/18;15:30;798;864;92,36;62;72\n09/10/18;16:00;796;864;92,13;64;72\n09/10/18;16:30;761;864;88,08;59;88\n09/10/18;17:00;747;864;86,46;44;83\n09/10/18;17:30;703;864;81,37;60;92\n09/10/18;18:00;653;864;75,58;49;92\n09/10/18;18:30;603;864;69,79;60;92\n09/10/18;19:00;598;864;69,21;52;109\n09/10/18;19:30;536;864;62,04;58;66\n09/10/18;20:00;536;864;62,04;41;32\n09/10/18;20:30;541;864;62,62;26;31\n09/10/18;21:00;542;864;62,73;12;19\n09/10/18;21:30;524;864;60,65;6;24\n09/10/18;22:00;515;864;59,61;5;41\n09/10/18;22:30;474;864;54,86;5;39\n09/10/18;23:00;438;864;50,69;1;19\n09/10/18;23:30;411;864;47,57;2;21\n10/10/18;00:00;402;864;46,53;0;14\n10/10/18;00:30;392;864;45,37;1;2\n10/10/18;01:00;392;864;45,37;2;1\n10/10/18;01:30;393;864;45,49;0;0\n10/10/18;02:00;393;864;45,49;0;0\n10/10/18;02:30;393;864;45,49;0;0\n10/10/18;03:00;393;864;45,49;0;0\n10/10/18;03:30;393;864;45,49;0;0\n10/10/18;04:00;393;864;45,49;0;1\n10/10/18;04:30;392;864;45,37;0;0\n10/10/18;05:00;392;864;45,37;0;0\n10/10/18;05:30;392;864;45,37;6;0\n10/10/18;06:00;398;864;46,06;3;1\n10/10/18;06:30;401;864;46,41;13;11\n10/10/18;07:00;405;864;46,88;28;14\n10/10/18;07:30;422;864;48,84;32;21\n10/10/18;08:00;436;864;50,46;65;14\n10/10/18;08:30;499;864;57,75;69;25\n10/10/18;09:00;533;864;61,69;97;16\n10/10/18;09:30;650;864;75,23;95;23\n10/10/18;10:00;690;864;79,86;98;25\n10/10/18;10:30;776;864;89,81;84;45\n10/10/18;11:00;794;864;91,90;78;50\n10/10/18;11:30;822;864;95,14;79;70\n10/10/18;12:00;819;864;94,79;74;72\n10/10/18;12:30;824;864;95,37;54;54\n10/10/18;13:00;821;864;95,02;45;45\n10/10/18;13:30;827;864;95,72;69;66\n10/10/18;14:00;827;864;95,72;65;65\n10/10/18;14:30;820;864;94,91;45;52\n10/10/18;15:00;824;864;95,37;65;69\n10/10/18;15:30;813;864;94,10;76;79\n10/10/18;16:00;818;864;94,68;69;89\n10/10/18;16:30;776;864;89,81;55;69\n10/10/18;17:00;777;864;89,93;63;74\n10/10/18;17:30;749;864;86,69;70;94\n10/10/18;18:00;744;864;86,11;52;100\n10/10/18;18:30;663;864;76,74;58;107\n10/10/18;19:00;640;864;74,07;33;109\n10/10/18;19:30;559;864;64,70;60;60\n10/10/18;20:00;564;864;65,28;36;41\n10/10/18;20:30;575;864;66,55;33;19\n10/10/18;21:00;576;864;66,67;11;25\n10/10/18;21:30;541;864;62,62;7;31\n10/10/18;22:00;530;864;61,34;3;57\n10/10/18;22:30;457;864;52,89;6;38\n10/10/18;23:00;448;864;51,85;10;30\n10/10/18;23:30;422;864;48,84;1;13\n11/10/18;00:00;420;864;48,61;1;12\n11/10/18;00:30;401;864;46,41;0;10\n11/10/18;01:00;399;864;46,18;0;5\n11/10/18;01:30;394;864;45,60;1;0\n11/10/18;02:00;395;864;45,72;0;0\n11/10/18;02:30;395;864;45,72;0;1\n11/10/18;03:00;394;864;45,60;0;1\n11/10/18;03:30;393;864;45,49;0;0\n11/10/18;04:00;393;864;45,49;0;0\n11/10/18;04:30;392;864;45,37;0;1\n11/10/18;05:00;392;864;45,37;1;1\n11/10/18;05:30;392;864;45,37;3;2\n11/10/18;06:00;393;864;45,49;2;4\n11/10/18;06:30;392;864;45,37;10;8\n11/10/18;07:00;395;864;45,72;26;6\n11/10/18;07:30;415;864;48,03;38;30\n11/10/18;08:00;424;864;49,07;51;22\n11/10/18;08:30;497;864;57,52;87;11\n11/10/18;09:00;554;864;64,12;120;18\n11/10/18;09:30;648;864;75,00;103;27\n11/10/18;10:00;741;864;85,76;96;25\n11/10/18;10:30;803;864;92,94;93;51\n11/10/18;11:00;816;864;94,44;55;55\n11/10/18;11:30;815;864;94,33;49;52\n11/10/18;12:00;814;864;94,21;48;50\n11/10/18;12:30;814;864;94,21;38;37\n11/10/18;13:00;812;864;93,98;52;54\n11/10/18;13:30;813;864;94,10;56;58\n11/10/18;14:00;810;864;93,75;69;63\n11/10/18;14:30;820;864;94,91;54;51\n11/10/18;15:00;819;864;94,79;57;62\n11/10/18;15:30;825;864;95,49;72;72\n11/10/18;16:00;809;864;93,63;67;64\n11/10/18;16:30;793;864;91,78;53;94\n11/10/18;17:00;771;864;89,24;59;80\n11/10/18;17:30;734;864;84,95;73;89\n11/10/18;18:00;735;864;85,07;67;104\n11/10/18;18:30;695;864;80,44;77;93\n11/10/18;19:00;682;864;78,94;57;92\n11/10/18;19:30;648;864;75,00;75;71\n11/10/18;20:00;651;864;75,35;53;40\n11/10/18;20:30;661;864;76,50;37;46\n11/10/18;21:00;651;864;75,35;12;39\n11/10/18;21:30;614;864;71,06;7;27\n11/10/18;22:00;607;864;70,25;9;50\n11/10/18;22:30;547;864;63,31;4;43\n11/10/18;23:00;516;864;59,72;5;41\n11/10/18;23:30;479;864;55,44;3;19\n12/10/18;00:00;474;864;54,86;3;21\n12/10/18;00:30;449;864;51,97;1;10\n12/10/18;01:00;449;864;51,97;0;6\n12/10/18;01:30;442;864;51,16;0;1\n12/10/18;02:00;442;864;51,16;0;2\n12/10/18;02:30;436;864;50,46;0;4\n12/10/18;03:00;436;864;50,46;0;0\n12/10/18;03:30;434;864;50,23;0;2\n12/10/18;04:00;434;864;50,23;0;1\n12/10/18;04:30;433;864;50,12;0;0\n12/10/18;05:00;433;864;50,12;1;1\n12/10/18;05:30;433;864;50,12;1;0\n12/10/18;06:00;434;864;50,23;1;2\n12/10/18;06:30;439;864;50,81;17;6\n12/10/18;07:00;444;864;51,39;21;16\n12/10/18;07:30;468;864;54,17;48;22\n12/10/18;08:00;477;864;55,21;55;26\n12/10/18;08:30;548;864;63,43;96;25\n12/10/18;09:00;590;864;68,29;112;22\n12/10/18;09:30;695;864;80,44;86;33\n12/10/18;10:00;726;864;84,03;62;34\n12/10/18;10:30;751;864;86,92;55;48\n12/10/18;11:00;749;864;86,69;48;48\n12/10/18;11:30;767;864;88,77;81;51\n12/10/18;12:00;788;864;91,20;98;52\n12/10/18;12:30;821;864;95,02;45;45\n12/10/18;13:00;825;864;95,49;45;46\n12/10/18;13:30;824;864;95,37;60;57\n12/10/18;14:00;828;864;95,83;58;57\n12/10/18;14:30;820;864;94,91;86;97\n12/10/18;15:00;816;864;94,44;81;81\n12/10/18;15:30;824;864;95,37;83;82\n12/10/18;16:00;814;864;94,21;70;99\n12/10/18;16:30;783;864;90,63;80;100\n12/10/18;17:00;766;864;88,66;60;107\n12/10/18;17:30;700;864;81,02;76;91\n12/10/18;18:00;699;864;80,90;59;78\n12/10/18;18:30;670;864;77,55;62;86\n12/10/18;19:00;651;864;75,35;80;99\n12/10/18;19:30;628;864;72,69;64;75\n12/10/18;20:00;632;864;73,15;66;35\n12/10/18;20:30;678;864;78,47;52;32\n12/10/18;21:00;683;864;79,05;29;34\n12/10/18;21:30;679;864;78,59;30;31\n12/10/18;22:00;676;864;78,24;17;56\n12/10/18;22:30;615;864;71,18;9;42\n12/10/18;23:00;594;864;68,75;3;44\n12/10/18;23:30;535;864;61,92;2;45\n13/10/18;00:00;514;864;59,49;2;41\n13/10/18;00:30;469;864;54,28;4;25\n13/10/18;01:00;461;864;53,36;3;11\n13/10/18;01:30;449;864;51,97;1;6\n13/10/18;02:00;449;864;51,97;0;2\n13/10/18;02:30;445;864;51,50;0;3\n13/10/18;03:00;445;864;51,50;1;3\n13/10/18;03:30;440;864;50,93;1;1\n13/10/18;04:00;441;864;51,04;2;1\n13/10/18;04:30;440;864;50,93;0;3\n13/10/18;05:00;439;864;50,81;0;0\n13/10/18;05:30;441;864;51,04;2;1\n13/10/18;06:00;439;864;50,81;0;2\n13/10/18;06:30;439;864;50,81;3;3\n13/10/18;07:00;437;864;50,58;3;2\n13/10/18;07:30;437;864;50,58;3;5\n13/10/18;08:00;434;864;50,23;8;9\n13/10/18;08:30;441;864;51,04;17;8\n13/10/18;09:00;449;864;51,97;55;14\n13/10/18;09:30;528;864;61,11;86;15\n13/10/18;10:00;573;864;66,32;115;23\n13/10/18;10:30;703;864;81,37;122;48\n13/10/18;11:00;732;864;84,72;113;72\n13/10/18;11:30;790;864;91,44;119;88\n13/10/18;12:00;798;864;92,36;104;72\n13/10/18;12:30;837;864;96,88;82;71\n13/10/18;13:00;836;864;96,76;55;53\n13/10/18;13:30;836;864;96,76;50;49\n13/10/18;14:00;826;864;95,60;70;88\n13/10/18;14:30;822;864;95,14;93;79\n13/10/18;15:00;830;864;96,06;88;81\n13/10/18;15:30;831;864;96,18;94;94\n13/10/18;16:00;833;864;96,41;81;84\n13/10/18;16:30;834;864;96,53;91;88\n13/10/18;17:00;835;864;96,64;103;100\n13/10/18;17:30;836;864;96,76;86;90\n13/10/18;18:00;834;864;96,53;95;102\n13/10/18;18:30;785;864;90,86;54;121\n13/10/18;19:00;750;864;86,81;82;132\n13/10/18;19:30;709;864;82,06;98;83\n13/10/18;20:00;737;864;85,30;109;41\n13/10/18;20:30;841;864;97,34;86;35\n13/10/18;21:00;843;864;97,57;39;44\n13/10/18;21:30;832;864;96,30;38;39\n13/10/18;22:00;822;864;95,14;23;68\n13/10/18;22:30;756;864;87,50;18;66\n13/10/18;23:00;728;864;84,26;11;87\n13/10/18;23:30;618;864;71,53;4;68\n14/10/18;00:00;594;864;68,75;0;67\n14/10/18;00:30;511;864;59,14;8;40\n14/10/18;01:00;501;864;57,99;3;28\n14/10/18;01:30;469;864;54,28;2;19\n14/10/18;02:00;460;864;53,24;1;9\n14/10/18;02:30;449;864;51,97;1;8\n14/10/18;03:00;447;864;51,74;1;3\n14/10/18;03:30;443;864;51,27;1;2\n14/10/18;04:00;443;864;51,27;0;4\n14/10/18;04:30;437;864;50,58;0;3\n14/10/18;05:00;435;864;50,35;0;1\n14/10/18;05:30;435;864;50,35;2;0\n14/10/18;06:00;435;864;50,35;0;1\n14/10/18;06:30;434;864;50,23;0;2\n14/10/18;07:00;430;864;49,77;0;4\n14/10/18;07:30;425;864;49,19;0;5\n14/10/18;08:00;424;864;49,07;1;3\n14/10/18;08:30;419;864;48,50;1;4\n14/10/18;09:00;418;864;48,38;1;6\n14/10/18;09:30;401;864;46,41;6;20\n14/10/18;10:00;399;864;46,18;17;17\n14/10/18;10:30;404;864;46,76;19;9\n14/10/18;11:00;410;864;47,45;21;13\n14/10/18;11:30;416;864;48,15;25;17\n14/10/18;12:00;423;864;48,96;29;19\n14/10/18;12:30;450;864;52,08;35;11\n14/10/18;13:00;459;864;53,13;22;10\n14/10/18;13:30;462;864;53,47;13;28\n14/10/18;14:00;452;864;52,31;20;24\n14/10/18;14:30;450;864;52,08;28;36\n14/10/18;15:00;450;864;52,08;28;28\n14/10/18;15:30;439;864;50,81;21;30\n14/10/18;16:00;436;864;50,46;25;30\n14/10/18;16:30;436;864;50,46;28;17\n14/10/18;17:00;444;864;51,39;26;31\n14/10/18;17:30;435;864;50,35;22;26\n14/10/18;18:00;430;864;49,77;25;39\n14/10/18;18:30;409;864;47,34;15;25\n14/10/18;19:00;408;864;47,22;18;16\n14/10/18;19:30;415;864;48,03;19;11\n14/10/18;20:00;420;864;48,61;23;9\n14/10/18;20:30;439;864;50,81;13;8\n14/10/18;21:00;440;864;50,93;5;6\n14/10/18;21:30;436;864;50,46;5;5\n14/10/18;22:00;436;864;50,46;1;10\n14/10/18;22:30;420;864;48,61;2;12\n14/10/18;23:00;417;864;48,26;2;8\n14/10/18;23:30;409;864;47,34;1;4\n15/10/18;00:00;409;864;47,34;1;0\n15/10/18;00:30;409;864;47,34;0;1\n15/10/18;01:00;408;864;47,22;1;1\n15/10/18;01:30;409;864;47,34;0;0\n15/10/18;02:00;409;864;47,34;0;0\n15/10/18;02:30;409;864;47,34;0;0\n15/10/18;03:00;409;864;47,34;0;0\n15/10/18;03:30;409;864;47,34;0;0\n15/10/18;04:00;409;864;47,34;0;0\n15/10/18;04:30;409;864;47,34;0;0\n15/10/18;05:00;409;864;47,34;1;0\n15/10/18;05:30;410;864;47,45;1;1\n15/10/18;06:00;411;864;47,57;1;3\n15/10/18;06:30;405;864;46,88;6;8\n15/10/18;07:00;416;864;48,15;35;7\n15/10/18;07:30;452;864;52,31;37;11\n15/10/18;08:00;466;864;53,94;52;22\n15/10/18;08:30;531;864;61,46;103;10\n15/10/18;09:00;579;864;67,01;99;16\n15/10/18;09:30;704;864;81,48;97;19\n15/10/18;10:00;742;864;85,88;80;19\n15/10/18;10:30;819;864;94,79;70;39\n15/10/18;11:00;828;864;95,83;74;44\n15/10/18;11:30;877;864;101,50;88;66\n15/10/18;12:00;881;864;101,97;72;74\n15/10/18;12:30;877;864;101,50;57;56\n15/10/18;13:00;878;864;101,62;48;54\n15/10/18;13:30;871;864;100,81;72;65\n15/10/18;14:00;878;864;101,62;77;79\n15/10/18;14:30;880;864;101,85;65;65\n15/10/18;15:00;875;864;101,27;68;90\n15/10/18;15:30;851;864;98,50;63;65\n15/10/18;16:00;853;864;98,73;45;72\n15/10/18;16:30;795;864;92,01;49;95\n15/10/18;17:00;779;864;90,16;61;70\n15/10/18;17:30;755;864;87,38;68;93\n15/10/18;18:00;742;864;85,88;46;105\n15/10/18;18:30;648;864;75,00;40;107\n15/10/18;19:00;615;864;71,18;38;81\n15/10/18;19:30;551;864;63,77;31;65\n15/10/18;20:00;537;864;62,15;24;31\n15/10/18;20:30;522;864;60,42;14;28\n15/10/18;21:00;515;864;59,61;7;13\n15/10/18;21:30;497;864;57,52;2;24\n15/10/18;22:00;487;864;56,37;5;19\n15/10/18;22:30;463;864;53,59;5;26\n15/10/18;23:00;454;864;52,55;0;10\n15/10/18;23:30;443;864;51,27;3;10\n16/10/18;00:00;437;864;50,58;0;0\n16/10/18;00:30;437;864;50,58;0;2\n16/10/18;01:00;435;864;50,35;0;0\n16/10/18;01:30;436;864;50,46;1;1\n16/10/18;02:00;435;864;50,35;0;1\n16/10/18;02:30;434;864;50,23;0;0\n16/10/18;03:00;434;864;50,23;0;0\n16/10/18;03:30;434;864;50,23;0;0\n16/10/18;04:00;434;864;50,23;0;0\n16/10/18;04:30;434;864;50,23;0;0\n16/10/18;05:00;434;864;50,23;0;0\n16/10/18;05:30;434;864;50,23;1;0\n16/10/18;06:00;435;864;50,35;2;1\n16/10/18;06:30;439;864;50,81;13;4\n16/10/18;07:00;444;864;51,39;36;16\n16/10/18;07:30;472;864;54,63;41;16\n16/10/18;08:00;489;864;56,60;50;26\n16/10/18;08:30;553;864;64,00;88;20\n16/10/18;09:00;582;864;67,36;112;17\n16/10/18;09:30;713;864;82,52;103;19\n16/10/18;10:00;759;864;87,85;106;29\n16/10/18;10:30;857;864;99,19;89;42\n16/10/18;11:00;885;864;102,43;58;57\n16/10/18;11:30;881;864;101,97;73;72\n16/10/18;12:00;886;864;102,55;72;73\n16/10/18;12:30;884;864;102,31;45;44\n16/10/18;13:00;884;864;102,31;47;49\n16/10/18;13:30;882;864;102,08;70;64\n16/10/18;14:00;884;864;102,31;63;67\n16/10/18;14:30;887;864;102,66;79;75\n16/10/18;15:00;884;864;102,31;59;57\n16/10/18;15:30;885;864;102,43;57;68\n16/10/18;16:00;874;864;101,16;58;80\n16/10/18;16:30;846;864;97,92;61;82\n16/10/18;17:00;831;864;96,18;63;97\n16/10/18;17:30;780;864;90,28;58;89\n16/10/18;18:00;764;864;88,43;64;74\n16/10/18;18:30;731;864;84,61;46;89\n16/10/18;19:00;710;864;82,18;55;118\n16/10/18;19:30;627;864;72,57;64;77\n16/10/18;20:00;628;864;72,69;32;26\n16/10/18;20:30;630;864;72,92;25;29\n16/10/18;21:00;630;864;72,92;10;29\n16/10/18;21:30;598;864;69,21;9;29\n16/10/18;22:00;591;864;68,40;6;43\n16/10/18;22:30;539;864;62,38;7;45\n16/10/18;23:00;516;864;59,72;3;36\n16/10/18;23:30;474;864;54,86;1;18\n17/10/18;00:00;467;864;54,05;2;20\n17/10/18;00:30;450;864;52,08;1;1\n17/10/18;01:00;449;864;51,97;0;1\n17/10/18;01:30;448;864;51,85;1;2\n17/10/18;02:00;447;864;51,74;0;2\n17/10/18;02:30;445;864;51,50;0;0\n17/10/18;03:00;445;864;51,50;0;0\n17/10/18;03:30;443;864;51,27;0;3\n17/10/18;04:00;442;864;51,16;0;0\n17/10/18;04:30;442;864;51,16;0;0\n17/10/18;05:00;442;864;51,16;0;1\n17/10/18;05:30;444;864;51,39;3;0\n17/10/18;06:00;444;864;51,39;4;0\n17/10/18;06:30;451;864;52,20;13;5\n17/10/18;07:00;454;864;52,55;24;9\n17/10/18;07:30;484;864;56,02;41;14\n17/10/18;08:00;498;864;57,64;52;19\n17/10/18;08:30;579;864;67,01;80;17\n17/10/18;09:00;593;864;68,63;113;21\n17/10/18;09:30;715;864;82,75;87;24\n17/10/18;10:00;746;864;86,34;103;21\n17/10/18;10:30;851;864;98,50;72;52\n17/10/18;11:00;851;864;98,50;52;52\n17/10/18;11:30;854;864;98,84;68;69\n17/10/18;12:00;847;864;98,03;60;52\n17/10/18;12:30;855;864;98,96;45;44\n17/10/18;13:00;854;864;98,84;50;61\n17/10/18;13:30;853;864;98,73;66;45\n17/10/18;14:00;864;864;100,00;81;69\n17/10/18;14:30;870;864;100,69;65;63\n17/10/18;15:00;878;864;101,62;67;67\n17/10/18;15:30;870;864;100,69;74;76\n17/10/18;16:00;877;864;101,50;57;91\n17/10/18;16:30;831;864;96,18;71;88\n17/10/18;17:00;825;864;95,49;76;95\n17/10/18;17:30;792;864;91,67;58;96\n17/10/18;18:00;765;864;88,54;56;101\n17/10/18;18:30;718;864;83,10;56;96\n17/10/18;19:00;681;864;78,82;53;108\n17/10/18;19:30;629;864;72,80;61;56\n17/10/18;20:00;629;864;72,80;72;40\n17/10/18;20:30;663;864;76,74;35;34\n17/10/18;21:00;662;864;76,62;12;26\n17/10/18;21:30;637;864;73,73;9;23\n17/10/18;22:00;634;864;73,38;7;51\n17/10/18;22:30;571;864;66,09;4;51\n17/10/18;23:00;543;864;62,85;10;52\n17/10/18;23:30;482;864;55,79;1;25\n18/10/18;00:00;477;864;55,21;0;13\n18/10/18;00:30;455;864;52,66;1;14\n18/10/18;01:00;451;864;52,20;0;4\n18/10/18;01:30;446;864;51,62;0;2\n18/10/18;02:00;445;864;51,50;0;1\n18/10/18;02:30;444;864;51,39;0;0\n18/10/18;03:00;444;864;51,39;0;0\n18/10/18;03:30;444;864;51,39;0;1\n18/10/18;04:00;443;864;51,27;0;0\n18/10/18;04:30;333;864;38,54;1;0\n18/10/18;05:00;333;864;38,54;1;0\n18/10/18;05:30;333;864;38,54;0;0\n18/10/18;06:00;333;864;38,54;7;1\n18/10/18;06:30;338;864;39,12;8;10\n18/10/18;07:00;337;864;39,00;30;3\n18/10/18;07:30;370;864;42,82;44;21\n18/10/18;08:00;387;864;44,79;49;24\n18/10/18;08:30;436;864;50,46;78;20\n18/10/18;09:00;471;864;54,51;118;15\n18/10/18;09:30;608;864;70,37;119;23\n18/10/18;10:00;714;864;82,64;114;42\n18/10/18;10:30;752;864;87,04;67;53\n18/10/18;11:00;754;864;87,27;43;44\n18/10/18;11:30;748;864;86,57;59;56\n18/10/18;12:00;752;864;87,04;48;49\n18/10/18;12:30;751;864;86,92;48;47\n18/10/18;13:00;751;864;86,92;39;36\n18/10/18;13:30;751;864;86,92;59;61\n18/10/18;14:00;750;864;86,81;71;48\n18/10/18;14:30;770;864;89,12;60;61\n18/10/18;15:00;772;864;89,35;58;75\n18/10/18;15:30;759;864;87,85;79;78\n18/10/18;16:00;757;864;87,62;68;81\n18/10/18;16:30;741;864;85,76;62;69\n18/10/18;17:00;734;864;84,95;52;82\n18/10/18;17:30;690;864;79,86;77;92\n18/10/18;18:00;687;864;79,51;62;89\n18/10/18;18:30;645;864;74,65;76;103\n18/10/18;19:00;634;864;73,38;72;123\n18/10/18;19:30;583;864;67,48;85;77\n18/10/18;20:00;588;864;68,06;92;36\n18/10/18;20:30;654;864;75,69;48;35\n18/10/18;21:00;658;864;76,16;23;28\n18/10/18;21:30;641;864;74,19;6;55\n18/10/18;22:00;605;864;70,02;11;50\n18/10/18;22:30;529;864;61,23;5;69\n18/10/18;23:00;501;864;57,99;5;67\n18/10/18;23:30;410;864;47,45;2;50\n19/10/18;00:00;393;864;45,49;3;22\n19/10/18;00:30;370;864;42,82;1;13\n19/10/18;01:00;360;864;41,67;0;7\n19/10/18;01:30;351;864;40,63;0;3\n19/10/18;02:00;349;864;40,39;0;4\n19/10/18;02:30;344;864;39,81;0;1\n19/10/18;03:00;344;864;39,81;0;1\n19/10/18;03:30;343;864;39,70;0;2\n19/10/18;04:00;341;864;39,47;1;0\n19/10/18;04:30;342;864;39,58;0;0\n19/10/18;05:00;342;864;39,58;2;3\n19/10/18;05:30;341;864;39,47;1;1\n19/10/18;06:00;341;864;39,47;7;0\n19/10/18;06:30;350;864;40,51;11;9\n19/10/18;07:00;351;864;40,63;32;12\n19/10/18;07:30;378;864;43,75;38;15\n19/10/18;08:00;393;864;45,49;57;29\n19/10/18;08:30;443;864;51,27;73;13\n19/10/18;09:00;532;864;61,57;118;22\n19/10/18;09:30;608;864;70,37;101;24\n19/10/18;10:00;652;864;75,46;104;30\n19/10/18;10:30;746;864;86,34;96;62\n19/10/18;11:00;757;864;87,62;74;71\n19/10/18;11:30;758;864;87,73;75;72\n19/10/18;12:00;765;864;88,54;71;68\n19/10/18;12:30;767;864;88,77;55;54\n19/10/18;13:00;769;864;89,00;42;44\n19/10/18;13:30;766;864;88,66;52;55\n19/10/18;14:00;764;864;88,43;59;67\n19/10/18;14:30;760;864;87,96;83;74\n19/10/18;15:00;764;864;88,43;74;72\n19/10/18;15:30;765;864;88,54;62;77\n19/10/18;16:00;746;864;86,34;62;63\n19/10/18;16:30;722;864;83,56;63;88\n19/10/18;17:00;718;864;83,10;49;97\n19/10/18;17:30;653;864;75,58;54;97\n19/10/18;18:00;627;864;72,57;62;107\n19/10/18;18:30;566;864;65,51;48;98\n19/10/18;19:00;530;864;61,34;45;88\n19/10/18;19:30;471;864;54,51;44;63\n19/10/18;20:00;469;864;54,28;53;27\n19/10/18;20:30;510;864;59,03;42;24\n19/10/18;21:00;512;864;59,26;35;26\n19/10/18;21:30;523;864;60,53;22;19\n19/10/18;22:00;523;864;60,53;14;39\n19/10/18;22:30;485;864;56,13;9;27\n19/10/18;23:00;480;864;55,56;6;38\n19/10/18;23:30;429;864;49,65;6;45\n20/10/18;00:00;409;864;47,34;6;25\n20/10/18;00:30;379;864;43,87;5;21\n20/10/18;01:00;372;864;43,06;1;18\n20/10/18;01:30;355;864;41,09;2;9\n20/10/18;02:00;348;864;40,28;0;5\n20/10/18;02:30;341;864;39,47;0;3\n20/10/18;03:00;340;864;39,35;0;3\n20/10/18;03:30;336;864;38,89;1;3\n20/10/18;04:00;335;864;38,77;0;0\n20/10/18;04:30;335;864;38,77;0;0\n20/10/18;05:00;335;864;38,77;2;0\n20/10/18;05:30;338;864;39,12;2;1\n20/10/18;06:00;338;864;39,12;1;2\n20/10/18;06:30;337;864;39,00;1;3\n20/10/18;07:00;335;864;38,77;5;2\n20/10/18;07:30;338;864;39,12;2;3\n20/10/18;08:00;337;864;39,00;10;4\n20/10/18;08:30;357;864;41,32;28;11\n20/10/18;09:00;360;864;41,67;38;14\n20/10/18;09:30;404;864;46,76;90;21\n20/10/18;10:00;450;864;52,08;107;31\n20/10/18;10:30;565;864;65,39;114;40\n20/10/18;11:00;600;864;69,44;110;58\n20/10/18;11:30;683;864;79,05;117;58\n20/10/18;12:00;713;864;82,52;115;71\n20/10/18;12:30;762;864;88,19;78;65\n20/10/18;13:00;767;864;88,77;64;61\n20/10/18;13:30;768;864;88,89;64;68\n20/10/18;14:00;765;864;88,54;69;67\n20/10/18;14:30;764;864;88,43;61;61\n20/10/18;15:00;768;864;88,89;93;91\n20/10/18;15:30;769;864;89,00;81;81\n20/10/18;16:00;768;864;88,89;94;93\n20/10/18;16:30;765;864;88,54;86;88\n20/10/18;17:00;767;864;88,77;95;94\n20/10/18;17:30;760;864;87,96;98;114\n20/10/18;18:00;749;864;86,69;91;129\n20/10/18;18:30;693;864;80,21;79;124\n20/10/18;19:00;666;864;77,08;65;136\n20/10/18;19:30;582;864;67,36;83;79\n20/10/18;20:00;595;864;68,87;78;41\n20/10/18;20:30;654;864;75,69;76;35\n20/10/18;21:00;670;864;77,55;45;39\n20/10/18;21:30;687;864;79,51;44;44\n20/10/18;22:00;677;864;78,36;19;61\n20/10/18;22:30;592;864;68,52;23;65\n20/10/18;23:00;592;864;68,52;13;61\n20/10/18;23:30;519;864;60,07;4;56\n21/10/18;00:00;491;864;56,83;6;62\n21/10/18;00:30;416;864;48,15;1;40\n21/10/18;01:00;397;864;45,95;7;22\n21/10/18;01:30;371;864;42,94;2;17\n21/10/18;02:00;364;864;42,13;1;12\n21/10/18;02:30;347;864;40,16;0;9\n21/10/18;03:00;344;864;39,81;1;7\n21/10/18;03:30;338;864;39,12;0;0\n21/10/18;04:00;338;864;39,12;0;1\n21/10/18;04:30;336;864;38,89;0;1\n21/10/18;05:00;336;864;38,89;0;1\n21/10/18;05:30;335;864;38,77;0;1\n21/10/18;06:00;334;864;38,66;1;1\n21/10/18;06:30;333;864;38,54;0;3\n21/10/18;07:00;330;864;38,19;0;3\n21/10/18;07:30;324;864;37,50;0;5\n21/10/18;08:00;323;864;37,38;1;4\n21/10/18;08:30;317;864;36,69;0;7\n21/10/18;09:00;313;864;36,23;2;5\n21/10/18;09:30;307;864;35,53;2;10\n21/10/18;10:00;302;864;34,95;8;14\n21/10/18;10:30;298;864;34,49;12;14\n21/10/18;11:00;296;864;34,26;19;16\n21/10/18;11:30;303;864;35,07;16;13\n21/10/18;12:00;300;864;34,72;25;17\n21/10/18;12:30;318;864;36,81;30;13\n21/10/18;13:00;328;864;37,96;27;16\n21/10/18;13:30;341;864;39,47;18;10\n21/10/18;14:00;348;864;40,28;20;11\n21/10/18;14:30;355;864;41,09;17;19\n21/10/18;15:00;354;864;40,97;25;23\n21/10/18;15:30;356;864;41,20;22;22\n21/10/18;16:00;353;864;40,86;23;29\n21/10/18;16:30;343;864;39,70;21;26\n21/10/18;17:00;342;864;39,58;20;28\n21/10/18;17:30;325;864;37,62;14;27\n21/10/18;18:00;320;864;37,04;14;13\n21/10/18;18:30;323;864;37,38;18;17\n21/10/18;19:00;322;864;37,27;25;19\n21/10/18;19:30;328;864;37,96;26;8\n21/10/18;20:00;347;864;40,16;15;10\n21/10/18;20:30;351;864;40,63;12;7\n21/10/18;21:00;353;864;40,86;6;9\n21/10/18;21:30;345;864;39,93;8;14\n21/10/18;22:00;344;864;39,81;5;6\n21/10/18;22:30;340;864;39,35;1;5\n21/10/18;23:00;337;864;39,00;2;5\n21/10/18;23:30;335;864;38,77;2;3\n22/10/18;00:00;333;864;38,54;2;7\n22/10/18;00:30;329;864;38,08;1;2\n22/10/18;01:00;329;864;38,08;0;2\n22/10/18;01:30;327;864;37,85;0;0\n22/10/18;02:00;327;864;37,85;0;0\n22/10/18;02:30;328;864;37,96;1;0\n22/10/18;03:00;328;864;37,96;0;0\n22/10/18;03:30;328;864;37,96;0;0\n22/10/18;04:00;328;864;37,96;0;0\n22/10/18;04:30;326;864;37,73;0;2\n22/10/18;05:00;326;864;37,73;0;0\n22/10/18;05:30;327;864;37,85;2;0\n22/10/18;06:00;328;864;37,96;2;2\n22/10/18;06:30;334;864;38,66;11;5\n22/10/18;07:00;363;864;42,01;31;6\n22/10/18;07:30;373;864;43,17;38;22\n22/10/18;08:00;378;864;43,75;53;30\n22/10/18;08:30;447;864;51,74;72;19\n22/10/18;09:00;479;864;55,44;75;18\n22/10/18;09:30;575;864;66,55;86;16\n22/10/18;10:00;593;864;68,63;75;26\n22/10/18;10:30;676;864;78,24;80;29\n22/10/18;11:00;685;864;79,28;69;43\n22/10/18;11:30;719;864;83,22;74;58\n22/10/18;12:00;745;864;86,23;85;63\n22/10/18;12:30;755;864;87,38;66;52\n22/10/18;13:00;754;864;87,27;47;46\n22/10/18;13:30;755;864;87,38;58;59\n22/10/18;14:00;756;864;87,50;80;61\n22/10/18;14:30;773;864;89,47;77;80\n22/10/18;15:00;775;864;89,70;65;72\n22/10/18;15:30;742;864;85,88;78;98\n22/10/18;16:00;742;864;85,88;70;88\n22/10/18;16:30;703;864;81,37;66;90\n22/10/18;17:00;685;864;79,28;58;88\n22/10/18;17:30;635;864;73,50;54;90\n22/10/18;18:00;630;864;72,92;57;110\n22/10/18;18:30;524;864;60,65;44;108\n22/10/18;19:00;485;864;56,13;46;111\n22/10/18;19:30;432;864;50,00;38;54\n22/10/18;20:00;440;864;50,93;33;17\n22/10/18;20:30;439;864;50,81;10;21\n22/10/18;21:00;434;864;50,23;4;13\n22/10/18;21:30;405;864;46,88;3;29\n22/10/18;22:00;394;864;45,60;3;21\n22/10/18;22:30;365;864;42,25;3;24\n22/10/18;23:00;354;864;40,97;1;13\n22/10/18;23:30;348;864;40,28;1;6\n23/10/18;00:00;344;864;39,81;1;4\n23/10/18;00:30;345;864;39,93;0;0\n23/10/18;01:00;345;864;39,93;0;1\n23/10/18;01:30;344;864;39,81;0;0\n23/10/18;02:00;344;864;39,81;0;0\n23/10/18;02:30;344;864;39,81;0;0\n23/10/18;03:00;344;864;39,81;0;0\n23/10/18;03:30;344;864;39,81;0;0\n23/10/18;04:00;344;864;39,81;0;0\n23/10/18;04:30;344;864;39,81;0;0\n23/10/18;05:00;343;864;39,70;0;1\n23/10/18;05:30;344;864;39,81;1;0\n23/10/18;06:00;345;864;39,93;4;1\n23/10/18;06:30;352;864;40,74;12;7\n23/10/18;07:00;352;864;40,74;24;11\n23/10/18;07:30;383;864;44,33;36;17\n23/10/18;08:00;445;864;51,50;56;22\n23/10/18;08:30;490;864;56,71;98;18\n23/10/18;09:00;546;864;63,19;109;19\n23/10/18;09:30;646;864;74,77;83;17\n23/10/18;10:00;679;864;78,59;89;27\n23/10/18;10:30;753;864;87,15;83;43\n23/10/18;11:00;752;864;87,04;46;41\n23/10/18;11:30;758;864;87,73;65;69\n23/10/18;12:00;758;864;87,73;68;63\n23/10/18;12:30;764;864;88,43;35;37\n23/10/18;13:00;763;864;88,31;43;42\n23/10/18;13:30;763;864;88,31;63;62\n23/10/18;14:00;760;864;87,96;52;51\n23/10/18;14:30;773;864;89,47;54;47\n23/10/18;15:00;771;864;89,24;59;64\n23/10/18;15:30;772;864;89,35;70;67\n23/10/18;16:00;772;864;89,35;68;71\n23/10/18;16:30;749;864;86,69;75;95\n23/10/18;17:00;726;864;84,03;60;98\n23/10/18;17:30;673;864;77,89;66;98\n23/10/18;18:00;674;864;78,01;78;95\n23/10/18;18:30;610;864;70,60;60;111\n23/10/18;19:00;600;864;69,44;57;103\n23/10/18;19:30;545;864;63,08;64;73\n23/10/18;20:00;554;864;64,12;52;33\n23/10/18;20:30;561;864;64,93;23;31\n23/10/18;21:00;551;864;63,77;14;35\n23/10/18;21:30;506;864;58,56;4;39\n23/10/18;22:00;487;864;56,37;2;49\n23/10/18;22:30;414;864;47,92;2;41\n23/10/18;23:00;393;864;45,49;3;36\n23/10/18;23:30;361;864;41,78;1;21\n24/10/18;00:00;353;864;40,86;0;10\n24/10/18;00:30;343;864;39,70;0;6\n24/10/18;01:00;343;864;39,70;1;1\n24/10/18;01:30;343;864;39,70;0;0\n24/10/18;02:00;342;864;39,58;0;1\n24/10/18;02:30;342;864;39,58;0;0\n24/10/18;03:00;342;864;39,58;0;0\n24/10/18;03:30;342;864;39,58;0;0\n24/10/18;04:00;342;864;39,58;0;0\n24/10/18;04:30;341;864;39,47;0;1\n24/10/18;05:00;341;864;39,47;1;1\n24/10/18;05:30;341;864;39,47;1;1\n24/10/18;06:00;343;864;39,70;3;1\n24/10/18;06:30;348;864;40,28;17;8\n24/10/18;07:00;359;864;41,55;31;8\n24/10/18;07:30;374;864;43,29;31;16\n24/10/18;08:00;394;864;45,60;39;17\n24/10/18;08:30;472;864;54,63;83;21\n24/10/18;09:00;510;864;59,03;102;13\n24/10/18;09:30;628;864;72,69;97;25\n24/10/18;10:00;673;864;77,89;105;28\n24/10/18;10:30;767;864;88,77;96;39\n24/10/18;11:00;776;864;89,81;67;59\n24/10/18;11:30;780;864;90,28;53;52\n24/10/18;12:00;776;864;89,81;69;70\n24/10/18;12:30;779;864;90,16;36;35\n24/10/18;13:00;777;864;89,93;49;46\n24/10/18;13:30;779;864;90,16;59;59\n24/10/18;14:00;779;864;90,16;72;75\n24/10/18;14:30;784;864;90,74;67;58\n24/10/18;15:00;782;864;90,51;79;80\n24/10/18;15:30;781;864;90,39;76;73\n24/10/18;16:00;771;864;89,24;76;85\n24/10/18;16:30;754;864;87,27;69;92\n24/10/18;17:00;734;864;84,95;50;97\n24/10/18;17:30;667;864;77,20;59;95\n24/10/18;18:00;665;864;76,97;79;110\n24/10/18;18:30;602;864;69,68;57;98\n24/10/18;19:00;557;864;64,47;68;133\n24/10/18;19:30;521;864;60,30;56;61\n24/10/18;20:00;536;864;62,04;46;35\n24/10/18;20:30;526;864;60,88;16;27\n24/10/18;21:00;529;864;61,23;11;16\n24/10/18;21:30;499;864;57,75;5;30\n24/10/18;22:00;478;864;55,32;8;53\n24/10/18;22:30;423;864;48,96;4;33\n24/10/18;23:00;401;864;46,41;3;37\n24/10/18;23:30;369;864;42,71;0;19\n25/10/18;00:00;367;864;42,48;1;5\n25/10/18;00:30;359;864;41,55;1;6\n25/10/18;01:00;357;864;41,32;0;3\n25/10/18;01:30;355;864;41,09;0;1\n25/10/18;02:00;355;864;41,09;0;0\n25/10/18;02:30;355;864;41,09;0;0\n25/10/18;03:00;355;864;41,09;0;1\n25/10/18;03:30;354;864;40,97;0;0\n25/10/18;04:00;354;864;40,97;0;0\n25/10/18;04:30;355;864;41,09;1;0\n25/10/18;05:00;355;864;41,09;0;1\n25/10/18;05:30;353;864;40,86;1;2\n25/10/18;06:00;353;864;40,86;3;3\n25/10/18;06:30;364;864;42,13;20;8\n25/10/18;07:00;375;864;43,40;33;8\n25/10/18;07:30;409;864;47,34;28;8\n25/10/18;08:00;425;864;49,19;65;20\n25/10/18;08:30;502;864;58,10;76;23\n25/10/18;09:00;513;864;59,38;98;17\n25/10/18;09:30;641;864;74,19;84;27\n25/10/18;10:00;675;864;78,13;86;31\n25/10/18;10:30;757;864;87,62;98;44\n25/10/18;11:00;781;864;90,39;70;43\n25/10/18;11:30;787;864;91,09;71;64\n25/10/18;12:00;786;864;90,97;62;65\n25/10/18;12:30;783;864;90,63;46;47\n25/10/18;13:00;787;864;91,09;58;52\n25/10/18;13:30;786;864;90,97;63;64\n25/10/18;14:00;788;864;91,20;63;63\n25/10/18;14:30;784;864;90,74;55;57\n25/10/18;15:00;786;864;90,97;55;55\n25/10/18;15:30;781;864;90,39;60;66\n25/10/18;16:00;765;864;88,54;64;98\n25/10/18;16:30;732;864;84,72;73;84\n25/10/18;17:00;716;864;82,87;58;74\n25/10/18;17:30;685;864;79,28;61;96\n25/10/18;18:00;663;864;76,74;57;98\n25/10/18;18:30;600;864;69,44;58;101\n25/10/18;19:00;592;864;68,52;58;99\n25/10/18;19:30;545;864;63,08;67;75\n25/10/18;20:00;552;864;63,89;66;27\n25/10/18;20:30;603;864;69,79;46;35\n25/10/18;21:00;591;864;68,40;17;30\n25/10/18;21:30;561;864;64,93;17;44\n25/10/18;22:00;545;864;63,08;8;52\n25/10/18;22:30;464;864;53,70;3;57\n25/10/18;23:00;454;864;52,55;4;37\n25/10/18;23:30;399;864;46,18;1;33\n26/10/18;00:00;381;864;44,10;1;17\n26/10/18;00:30;373;864;43,17;0;9\n26/10/18;01:00;369;864;42,71;0;7\n26/10/18;01:30;363;864;42,01;0;3\n26/10/18;02:00;360;864;41,67;0;2\n26/10/18;02:30;359;864;41,55;0;1\n26/10/18;03:00;359;864;41,55;0;1\n26/10/18;03:30;358;864;41,44;0;0\n26/10/18;04:00;358;864;41,44;0;0\n26/10/18;04:30;357;864;41,32;0;1\n26/10/18;05:00;358;864;41,44;3;2\n26/10/18;05:30;357;864;41,32;2;3\n26/10/18;06:00;358;864;41,44;1;0\n26/10/18;06:30;358;864;41,44;18;5\n26/10/18;07:00;374;864;43,29;26;9\n26/10/18;07:30;399;864;46,18;29;12\n26/10/18;08:00;421;864;48,73;61;22\n26/10/18;08:30;491;864;56,83;76;25\n26/10/18;09:00;555;864;64,24;86;23\n26/10/18;09:30;624;864;72,22;84;15\n26/10/18;10:00;673;864;77,89;90;26\n26/10/18;10:30;749;864;86,69;118;55\n26/10/18;11:00;785;864;90,86;79;48\n26/10/18;11:30;776;864;89,81;77;85\n26/10/18;12:00;776;864;89,81;87;77\n26/10/18;12:30;782;864;90,51;54;53\n26/10/18;13:00;778;864;90,05;51;56\n26/10/18;13:30;780;864;90,28;65;60\n26/10/18;14:00;778;864;90,05;77;77\n26/10/18;14:30;779;864;90,16;82;82\n26/10/18;15:00;781;864;90,39;75;76\n26/10/18;15:30;771;864;89,24;70;77\n26/10/18;16:00;776;864;89,81;88;85\n26/10/18;16:30;743;864;86,00;68;99\n26/10/18;17:00;732;864;84,72;73;89\n26/10/18;17:30;686;864;79,40;63;104\n26/10/18;18:00;652;864;75,46;48;116\n26/10/18;18:30;581;864;67,25;66;105\n26/10/18;19:00;539;864;62,38;61;97\n26/10/18;19:30;543;864;62,85;61;54\n26/10/18;20:00;552;864;63,89;53;39\n26/10/18;20:30;579;864;67,01;42;24\n26/10/18;21:00;587;864;67,94;39;26\n26/10/18;21:30;579;864;67,01;18;30\n26/10/18;22:00;560;864;64,81;13;54\n26/10/18;22:30;503;864;58,22;11;46\n26/10/18;23:00;489;864;56,60;4;27\n26/10/18;23:30;440;864;50,93;2;41\n27/10/18;00:00;423;864;48,96;4;26\n27/10/18;00:30;403;864;46,64;4;18\n27/10/18;01:00;396;864;45,83;1;9\n27/10/18;01:30;387;864;44,79;0;10\n27/10/18;02:00;385;864;44,56;2;3\n27/10/18;02:30;378;864;43,75;0;6\n27/10/18;03:00;374;864;43,29;0;4\n27/10/18;03:30;370;864;42,82;0;4\n27/10/18;04:00;369;864;42,71;0;0\n27/10/18;04:30;369;864;42,71;0;0\n27/10/18;05:00;369;864;42,71;0;0\n27/10/18;05:30;370;864;42,82;1;0\n27/10/18;06:00;370;864;42,82;0;1\n27/10/18;06:30;367;864;42,48;0;2\n27/10/18;07:00;369;864;42,71;3;2\n27/10/18;07:30;374;864;43,29;9;3\n27/10/18;08:00;376;864;43,52;13;4\n27/10/18;08:30;395;864;45,72;19;6\n27/10/18;09:00;404;864;46,76;38;14\n27/10/18;09:30;479;864;55,44;82;17\n27/10/18;10:00;521;864;60,30;103;32\n27/10/18;10:30;623;864;72,11;113;43\n27/10/18;11:00;630;864;72,92;117;55\n27/10/18;11:30;717;864;82,99;104;75\n27/10/18;12:00;734;864;84,95;114;66\n27/10/18;12:30;767;864;88,77;85;78\n27/10/18;13:00;784;864;90,74;80;72\n27/10/18;13:30;780;864;90,28;59;59\n27/10/18;14:00;777;864;89,93;76;73\n27/10/18;14:30;783;864;90,63;91;87\n27/10/18;15:00;788;864;91,20;100;103\n27/10/18;15:30;785;864;90,86;87;87\n27/10/18;16:00;783;864;90,63;94;90\n27/10/18;16:30;786;864;90,97;107;107\n27/10/18;17:00;781;864;90,39;88;94\n27/10/18;17:30;772;864;89,35;93;95\n27/10/18;18:00;770;864;89,12;80;115\n27/10/18;18:30;710;864;82,18;62;103\n27/10/18;19:00;646;864;74,77;45;145\n27/10/18;19:30;580;864;67,13;60;78\n27/10/18;20:00;581;864;67,25;59;39\n27/10/18;20:30;603;864;69,79;33;31\n27/10/18;21:00;605;864;70,02;27;32\n27/10/18;21:30;606;864;70,14;36;30\n27/10/18;22:00;590;864;68,29;13;45\n27/10/18;22:30;543;864;62,85;13;42\n27/10/18;23:00;526;864;60,88;6;50\n27/10/18;23:30;469;864;54,28;0;31\n28/10/18;00:00;446;864;51,62;2;50\n28/10/18;00:30;403;864;46,64;2;21\n28/10/18;01:00;386;864;44,68;0;20\n28/10/18;01:30;375;864;43,40;1;6\n28/10/18;02:00;373;864;43,17;2;6\n28/10/18;02:30;368;864;42,59;0;6\n28/10/18;03:00;364;864;42,13;0;2\n28/10/18;03:30;362;864;41,90;0;1\n28/10/18;04:00;361;864;41,78;0;1\n28/10/18;04:30;361;864;41,78;0;0\n28/10/18;05:00;363;864;42,01;2;3\n28/10/18;05:30;359;864;41,55;0;1\n28/10/18;06:00;359;864;41,55;0;0\n28/10/18;06:30;358;864;41,44;0;2\n28/10/18;07:00;357;864;41,32;0;2\n28/10/18;07:30;350;864;40,51;0;5\n28/10/18;08:00;349;864;40,39;0;10\n28/10/18;08:30;335;864;38,77;1;7\n28/10/18;09:00;329;864;38,08;0;8\n28/10/18;09:30;317;864;36,69;4;13\n28/10/18;10:00;315;864;36,46;9;10\n28/10/18;10:30;317;864;36,69;15;13\n28/10/18;11:00;320;864;37,04;14;8\n28/10/18;11:30;336;864;38,89;30;17\n28/10/18;12:00;341;864;39,47;25;17\n28/10/18;12:30;360;864;41,67;29;14\n28/10/18;13:00;360;864;41,67;19;15\n28/10/18;13:30;372;864;43,06;27;18\n28/10/18;14:00;375;864;43,40;13;20\n28/10/18;14:30;357;864;41,32;19;28\n28/10/18;15:00;351;864;40,63;22;33\n28/10/18;15:30;339;864;39,24;17;21\n28/10/18;16:00;338;864;39,12;22;24\n28/10/18;16:30;336;864;38,89;22;23\n28/10/18;17:00;344;864;39,81;34;32\n28/10/18;17:30;329;864;38,08;13;24\n28/10/18;18:00;324;864;37,50;10;14\n28/10/18;18:30;334;864;38,66;19;9\n28/10/18;19:00;333;864;38,54;19;18\n28/10/18;19:30;352;864;40,74;27;10\n28/10/18;20:00;357;864;41,32;18;7\n28/10/18;20:30;365;864;42,25;7;4\n28/10/18;21:00;364;864;42,13;6;12\n28/10/18;21:30;352;864;40,74;3;11\n28/10/18;22:00;346;864;40,05;0;11\n28/10/18;22:30;339;864;39,24;1;3\n28/10/18;23:00;335;864;38,77;3;9\n28/10/18;23:30;333;864;38,54;1;1\n29/10/18;00:00;332;864;38,43;0;6\n29/10/18;00:30;327;864;37,85;0;0\n29/10/18;01:00;327;864;37,85;0;0\n29/10/18;01:30;327;864;37,85;0;0\n29/10/18;02:00;327;864;37,85;0;0\n29/10/18;02:30;327;864;37,85;0;0\n29/10/18;03:00;327;864;37,85;0;0\n29/10/18;03:30;327;864;37,85;0;0\n29/10/18;04:00;327;864;37,85;0;0\n29/10/18;04:30;327;864;37,85;0;1\n29/10/18;05:00;326;864;37,73;1;2\n29/10/18;05:30;326;864;37,73;2;0\n29/10/18;06:00;330;864;38,19;5;1\n29/10/18;06:30;337;864;39,00;13;6\n29/10/18;07:00;338;864;39,12;24;10\n29/10/18;07:30;374;864;43,29;39;9\n29/10/18;08:00;385;864;44,56;59;23\n29/10/18;08:30;457;864;52,89;66;18\n29/10/18;09:00;497;864;57,52;93;17\n29/10/18;09:30;590;864;68,29;71;20\n29/10/18;10:00;608;864;70,37;88;25\n29/10/18;10:30;701;864;81,13;86;37\n29/10/18;11:00;704;864;81,48;68;57\n29/10/18;11:30;738;864;85,42;91;55\n29/10/18;12:00;743;864;86,00;95;83\n29/10/18;12:30;751;864;86,92;63;64\n29/10/18;13:00;773;864;89,47;59;54\n29/10/18;13:30;756;864;87,50;79;75\n29/10/18;14:00;768;864;88,89;94;74\n29/10/18;14:30;785;864;90,86;74;74\n29/10/18;15:00;789;864;91,32;73;80\n29/10/18;15:30;760;864;87,96;72;84\n29/10/18;16:00;762;864;88,19;55;91\n29/10/18;16:30;698;864;80,79;59;102\n29/10/18;17:00;644;864;74,54;42;106\n29/10/18;17:30;583;864;67,48;53;100\n29/10/18;18:00;559;864;64,70;36;94\n29/10/18;18:30;468;864;54,17;32;89\n29/10/18;19:00;431;864;49,88;31;88\n29/10/18;19:30;400;864;46,30;31;34\n29/10/18;20:00;399;864;46,18;21;26\n29/10/18;20:30;398;864;46,06;18;16\n29/10/18;21:00;394;864;45,60;4;15\n29/10/18;21:30;379;864;43,87;5;22\n29/10/18;22:00;354;864;40,97;4;25\n29/10/18;22:30;338;864;39,12;1;14\n29/10/18;23:00;334;864;38,66;2;3\n29/10/18;23:30;333;864;38,54;1;2\n30/10/18;00:00;333;864;38,54;0;0\n30/10/18;00:30;332;864;38,43;0;1\n30/10/18;01:00;332;864;38,43;1;1\n30/10/18;01:30;332;864;38,43;0;0\n30/10/18;02:00;332;864;38,43;1;0\n30/10/18;02:30;333;864;38,54;0;0\n30/10/18;03:00;333;864;38,54;0;0\n30/10/18;03:30;333;864;38,54;0;0\n30/10/18;04:00;333;864;38,54;0;0\n30/10/18;04:30;333;864;38,54;0;0\n30/10/18;05:00;332;864;38,43;1;1\n30/10/18;05:30;333;864;38,54;2;1\n30/10/18;06:00;333;864;38,54;2;3\n30/10/18;06:30;335;864;38,77;16;9\n30/10/18;07:00;342;864;39,58;19;9\n30/10/18;07:30;373;864;43,17;47;13\n30/10/18;08:00;391;864;45,25;55;29\n30/10/18;08:30;488;864;56,48;93;16\n30/10/18;09:00;520;864;60,19;109;19\n30/10/18;09:30;603;864;69,79;80;27\n30/10/18;10:00;650;864;75,23;90;37\n30/10/18;10:30;735;864;85,07;108;42\n30/10/18;11:00;772;864;89,35;102;60\n30/10/18;11:30;784;864;90,74;81;82\n30/10/18;12:00;787;864;91,09;49;51\n30/10/18;12:30;788;864;91,20;50;50\n30/10/18;13:00;788;864;91,20;57;59\n30/10/18;13:30;786;864;90,97;62;65\n30/10/18;14:00;785;864;90,86;63;62\n30/10/18;14:30;786;864;90,97;50;51\n30/10/18;15:00;785;864;90,86;85;82\n30/10/18;15:30;784;864;90,74;71;73\n30/10/18;16:00;782;864;90,51;65;70\n30/10/18;16:30;753;864;87,15;58;97\n30/10/18;17:00;732;864;84,72;73;94\n30/10/18;17:30;694;864;80,32;72;97\n30/10/18;18:00;673;864;77,89;71;109\n30/10/18;18:30;611;864;70,72;65;122\n30/10/18;19:00;507;864;58,68;42;111\n30/10/18;19:30;498;864;57,64;50;77\n30/10/18;20:00;503;864;58,22;39;38\n30/10/18;20:30;500;864;57,87;25;30\n30/10/18;21:00;494;864;57,18;7;13\n30/10/18;21:30;478;864;55,32;4;23\n30/10/18;22:00;471;864;54,51;3;40\n30/10/18;22:30;420;864;48,61;6;31\n30/10/18;23:00;398;864;46,06;2;32\n30/10/18;23:30;363;864;42,01;0;18\n31/10/18;00:00;356;864;41,20;2;17\n31/10/18;00:30;344;864;39,81;0;3\n31/10/18;01:00;344;864;39,81;0;2\n31/10/18;01:30;342;864;39,58;0;0\n31/10/18;02:00;342;864;39,58;0;0\n31/10/18;02:30;342;864;39,58;0;0\n31/10/18;03:00;342;864;39,58;0;0\n31/10/18;03:30;342;864;39,58;0;0\n31/10/18;04:00;342;864;39,58;0;0\n31/10/18;04:30;342;864;39,58;0;1\n31/10/18;05:00;341;864;39,47;0;0\n31/10/18;05:30;340;864;39,35;1;1\n31/10/18;06:00;339;864;39,24;2;2\n31/10/18;06:30;349;864;40,39;17;7\n31/10/18;07:00;359;864;41,55;29;8\n31/10/18;07:30;384;864;44,44;35;14\n31/10/18;08:00;441;864;51,04;49;19\n31/10/18;08:30;442;864;51,16;85;25\n31/10/18;09:00;507;864;58,68;83;24\n31/10/18;09:30;601;864;69,56;91;20\n31/10/18;10:00;675;864;78,13;107;31\n31/10/18;10:30;730;864;84,49;109;58\n31/10/18;11:00;782;864;90,51;99;55\n31/10/18;11:30;783;864;90,63;70;70\n31/10/18;12:00;782;864;90,51;88;85\n31/10/18;12:30;788;864;91,20;69;69\n31/10/18;13:00;783;864;90,63;55;67\n31/10/18;13:30;773;864;89,47;89;80\n31/10/18;14:00;780;864;90,28;70;71\n31/10/18;14:30;780;864;90,28;81;83\n31/10/18;15:00;778;864;90,05;81;80\n31/10/18;15:30;775;864;89,70;87;99\n31/10/18;16:00;765;864;88,54;66;96\n31/10/18;16:30;716;864;82,87;62;93\n31/10/18;17:00;692;864;80,09;70;117\n31/10/18;17:30;633;864;73,26;66;95\n31/10/18;18:00;603;864;69,79;55;115\n31/10/18;18:30;530;864;61,34;41;77\n31/10/18;19:00;515;864;59,61;57;91\n31/10/18;19:30;494;864;57,18;49;51\n31/10/18;20:00;510;864;59,03;59;35\n31/10/18;20:30;542;864;62,73;53;23\n31/10/18;21:00;550;864;63,66;37;23\n31/10/18;21:30;561;864;64,93;24;28\n31/10/18;22:00;555;864;64,24;12;34\n31/10/18;22:30;522;864;60,42;12;33\n31/10/18;23:00;509;864;58,91;11;29\n31/10/18;23:30;465;864;53,82;2;36\n01/11/18;00:00;454;864;52,55;1;24\n01/11/18;00:30;414;864;47,92;4;31\n01/11/18;01:00;411;864;47,57;0;13\n01/11/18;01:30;391;864;45,25;0;7\n01/11/18;02:00;390;864;45,14;1;5\n01/11/18;02:30;384;864;44,44;1;4\n01/11/18;03:00;383;864;44,33;0;3\n01/11/18;03:30;380;864;43,98;0;2\n01/11/18;04:00;379;864;43,87;0;0\n01/11/18;04:30;376;864;43,52;0;4\n01/11/18;05:00;375;864;43,40;0;0\n01/11/18;05:30;375;864;43,40;0;0\n01/11/18;06:00;374;864;43,29;0;3\n01/11/18;06:30;369;864;42,71;0;3\n01/11/18;07:00;370;864;42,82;4;1\n01/11/18;07:30;370;864;42,82;2;6\n01/11/18;08:00;366;864;42,36;2;4\n01/11/18;08:30;363;864;42,01;2;6\n01/11/18;09:00;360;864;41,67;4;9\n01/11/18;09:30;352;864;40,74;10;16\n01/11/18;10:00;356;864;41,20;30;9\n01/11/18;10:30;386;864;44,68;42;22\n01/11/18;11:00;398;864;46,06;36;28\n01/11/18;11:30;413;864;47,80;43;25\n01/11/18;12:00;419;864;48,50;58;35\n01/11/18;12:30;478;864;55,32;76;23\n01/11/18;13:00;505;864;58,45;52;31\n01/11/18;13:30;520;864;60,19;40;30\n01/11/18;14:00;533;864;61,69;48;43\n01/11/18;14:30;538;864;62,27;72;55\n01/11/18;15:00;551;864;63,77;76;47\n01/11/18;15:30;584;864;67,59;70;60\n01/11/18;16:00;594;864;68,75;75;56\n01/11/18;16:30;617;864;71,41;81;71\n01/11/18;17:00;607;864;70,25;71;84\n01/11/18;17:30;565;864;65,39;42;87\n01/11/18;18:00;541;864;62,62;46;87\n01/11/18;18:30;472;864;54,63;29;79\n01/11/18;19:00;445;864;51,50;39;48\n01/11/18;19:30;450;864;52,08;29;27\n01/11/18;20:00;458;864;53,01;26;9\n01/11/18;20:30;469;864;54,28;15;18\n01/11/18;21:00;466;864;53,94;8;16\n01/11/18;21:30;445;864;51,50;12;29\n01/11/18;22:00;439;864;50,81;3;30\n01/11/18;22:30;401;864;46,41;1;18\n01/11/18;23:00;397;864;45,95;4;29\n01/11/18;23:30;360;864;41,67;1;18\n02/11/18;00:00;356;864;41,20;3;6\n02/11/18;00:30;351;864;40,63;2;5\n02/11/18;01:00;352;864;40,74;1;0\n02/11/18;01:30;352;864;40,74;0;0\n02/11/18;02:00;352;864;40,74;1;0\n02/11/18;02:30;354;864;40,97;1;0\n02/11/18;03:00;354;864;40,97;0;0\n02/11/18;03:30;354;864;40,97;0;0\n02/11/18;04:00;352;864;40,74;0;1\n02/11/18;04:30;352;864;40,74;0;0\n02/11/18;05:00;352;864;40,74;0;0\n02/11/18;05:30;353;864;40,86;1;0\n02/11/18;06:00;354;864;40,97;3;0\n02/11/18;06:30;356;864;41,20;7;4\n02/11/18;07:00;361;864;41,78;10;5\n02/11/18;07:30;374;864;43,29;24;6\n02/11/18;08:00;385;864;44,56;20;6\n02/11/18;08:30;422;864;48,84;40;9\n02/11/18;09:00;437;864;50,58;51;16\n02/11/18;09:30;527;864;61,00;109;18\n02/11/18;10:00;582;864;67,36;119;29\n02/11/18;10:30;704;864;81,48;112;43\n02/11/18;11:00;734;864;84,95;116;62\n02/11/18;11:30;779;864;90,16;72;58\n02/11/18;12:00;784;864;90,74;84;75\n02/11/18;12:30;795;864;92,01;58;51\n02/11/18;13:00;795;864;92,01;48;49\n02/11/18;13:30;796;864;92,13;48;46\n02/11/18;14:00;793;864;91,78;67;66\n02/11/18;14:30;789;864;91,32;73;74\n02/11/18;15:00;794;864;91,90;80;78\n02/11/18;15:30;788;864;91,20;89;97\n02/11/18;16:00;785;864;90,86;101;102\n02/11/18;16:30;789;864;91,32;109;106\n02/11/18;17:00;787;864;91,09;93;110\n02/11/18;17:30;752;864;87,04;87;121\n02/11/18;18:00;716;864;82,87;58;119\n02/11/18;18:30;615;864;71,18;46;120\n02/11/18;19:00;591;864;68,40;44;118\n02/11/18;19:30;540;864;62,50;63;47\n02/11/18;20:00;547;864;63,31;47;21\n02/11/18;20:30;573;864;66,32;39;32\n02/11/18;21:00;575;864;66,55;23;28\n02/11/18;21:30;560;864;64,81;17;38\n02/11/18;22:00;538;864;62,27;7;55\n02/11/18;22:30;476;864;55,09;6;40\n02/11/18;23:00;465;864;53,82;8;30\n02/11/18;23:30;422;864;48,84;3;36\n03/11/18;00:00;406;864;46,99;2;16\n03/11/18;00:30;382;864;44,21;3;18\n03/11/18;01:00;384;864;44,44;2;10\n03/11/18;01:30;373;864;43,17;1;5\n03/11/18;02:00;371;864;42,94;1;1\n03/11/18;02:30;367;864;42,48;0;4\n03/11/18;03:00;367;864;42,48;0;0\n03/11/18;03:30;366;864;42,36;0;1\n03/11/18;04:00;366;864;42,36;0;2\n03/11/18;04:30;364;864;42,13;0;0\n03/11/18;05:00;364;864;42,13;0;0\n03/11/18;05:30;365;864;42,25;1;0\n03/11/18;06:00;365;864;42,25;1;1\n03/11/18;06:30;366;864;42,36;2;0\n03/11/18;07:00;367;864;42,48;1;0\n03/11/18;07:30;368;864;42,59;4;1\n03/11/18;08:00;372;864;43,06;6;6\n03/11/18;08:30;379;864;43,87;13;5\n03/11/18;09:00;384;864;44,44;31;12\n03/11/18;09:30;453;864;52,43;86;17\n03/11/18;10:00;493;864;57,06;110;15\n03/11/18;10:30;638;864;73,84;119;28\n03/11/18;11:00;669;864;77,43;111;55\n03/11/18;11:30;738;864;85,42;104;61\n03/11/18;12:00;763;864;88,31;99;70\n03/11/18;12:30;792;864;91,67;71;56\n03/11/18;13:00;793;864;91,78;60;59\n03/11/18;13:30;797;864;92,25;55;54\n03/11/18;14:00;797;864;92,25;56;56\n03/11/18;14:30;793;864;91,78;68;67\n03/11/18;15:00;796;864;92,13;87;87\n03/11/18;15:30;786;864;90,97;98;104\n03/11/18;16:00;794;864;91,90;97;94\n03/11/18;16:30;794;864;91,90;88;85\n03/11/18;17:00;797;864;92,25;84;87\n03/11/18;17:30;768;864;88,89;90;121\n03/11/18;18:00;749;864;86,69;78;134\n03/11/18;18:30;651;864;75,35;58;118\n03/11/18;19:00;630;864;72,92;70;101\n03/11/18;19:30;608;864;70,37;59;56\n03/11/18;20:00;614;864;71,06;55;28\n03/11/18;20:30;660;864;76,39;55;31\n03/11/18;21:00;673;864;77,89;40;35\n03/11/18;21:30;654;864;75,69;19;45\n03/11/18;22:00;642;864;74,31;11;37\n03/11/18;22:30;573;864;66,32;11;65\n03/11/18;23:00;546;864;63,19;8;50\n03/11/18;23:30;491;864;56,83;4;38\n04/11/18;00:00;470;864;54,40;2;42\n04/11/18;00:30;429;864;49,65;3;25\n04/11/18;01:00;418;864;48,38;1;29\n04/11/18;01:30;395;864;45,72;3;5\n04/11/18;02:00;391;864;45,25;0;9\n04/11/18;02:30;384;864;44,44;0;2\n04/11/18;03:00;384;864;44,44;1;1\n04/11/18;03:30;384;864;44,44;0;0\n04/11/18;04:00;384;864;44,44;0;0\n04/11/18;04:30;381;864;44,10;0;3\n04/11/18;05:00;381;864;44,10;0;0\n04/11/18;05:30;381;864;44,10;1;0\n04/11/18;06:00;381;864;44,10;0;0\n04/11/18;06:30;379;864;43,87;0;2\n04/11/18;07:00;379;864;43,87;1;0\n04/11/18;07:30;379;864;43,87;0;2\n04/11/18;08:00;376;864;43,52;1;7\n04/11/18;08:30;364;864;42,13;2;11\n04/11/18;09:00;359;864;41,55;1;12\n04/11/18;09:30;346;864;40,05;2;9\n04/11/18;10:00;344;864;39,81;8;11\n04/11/18;10:30;339;864;39,24;12;13\n04/11/18;11:00;345;864;39,93;22;15\n04/11/18;11:30;351;864;40,63;30;19\n04/11/18;12:00;357;864;41,32;18;19\n04/11/18;12:30;360;864;41,67;23;18\n04/11/18;13:00;359;864;41,55;20;14\n04/11/18;13:30;370;864;42,82;14;11\n04/11/18;14:00;366;864;42,36;16;18\n04/11/18;14:30;370;864;42,82;22;21\n04/11/18;15:00;364;864;42,13;16;27\n04/11/18;15:30;356;864;41,20;23;23\n04/11/18;16:00;360;864;41,67;29;17\n04/11/18;16:30;357;864;41,32;13;26\n04/11/18;17:00;354;864;40,97;25;27\n04/11/18;17:30;351;864;40,63;13;16\n04/11/18;18:00;349;864;40,39;16;22\n04/11/18;18:30;346;864;40,05;19;13\n04/11/18;19:00;352;864;40,74;12;15\n04/11/18;19:30;353;864;40,86;23;13\n04/11/18;20:00;365;864;42,25;15;6\n04/11/18;20:30;378;864;43,75;14;4\n04/11/18;21:00;377;864;43,63;9;7\n04/11/18;21:30;370;864;42,82;4;13\n04/11/18;22:00;366;864;42,36;5;10\n04/11/18;22:30;360;864;41,67;0;2\n04/11/18;23:00;358;864;41,44;3;6\n04/11/18;23:30;356;864;41,20;2;4\n05/11/18;00:00;352;864;40,74;1;3\n05/11/18;00:30;352;864;40,74;2;3\n05/11/18;01:00;352;864;40,74;0;0\n05/11/18;01:30;352;864;40,74;0;0\n05/11/18;02:00;352;864;40,74;0;1\n05/11/18;02:30;351;864;40,63;0;0\n05/11/18;03:00;351;864;40,63;0;0\n05/11/18;03:30;351;864;40,63;0;0\n05/11/18;04:00;351;864;40,63;1;1\n05/11/18;04:30;349;864;40,39;0;1\n05/11/18;05:00;349;864;40,39;1;1\n05/11/18;05:30;349;864;40,39;1;0\n05/11/18;06:00;351;864;40,63;2;1\n05/11/18;06:30;356;864;41,20;11;3\n05/11/18;07:00;366;864;42,36;27;7\n05/11/18;07:30;384;864;44,44;26;20\n05/11/18;08:00;396;864;45,83;61;13\n05/11/18;08:30;478;864;55,32;94;17\n05/11/18;09:00;520;864;60,19;85;16\n05/11/18;09:30;649;864;75,12;107;13\n05/11/18;10:00;687;864;79,51;70;26\n05/11/18;10:30;734;864;84,95;61;38\n05/11/18;11:00;737;864;85,30;85;52\n05/11/18;11:30;784;864;90,74;78;58\n05/11/18;12:00;786;864;90,97;72;52\n05/11/18;12:30;820;864;94,91;79;65\n05/11/18;13:00;816;864;94,44;47;46\n05/11/18;13:30;816;864;94,44;64;62\n05/11/18;14:00;825;864;95,49;82;82\n05/11/18;14:30;819;864;94,79;66;64\n05/11/18;15:00;821;864;95,02;69;88\n05/11/18;15:30;809;864;93,63;79;69\n05/11/18;16:00;800;864;92,59;59;91\n05/11/18;16:30;736;864;85,19;50;93\n05/11/18;17:00;697;864;80,67;56;85\n05/11/18;17:30;680;864;78,70;50;82\n05/11/18;18:00;665;864;76,97;47;104\n05/11/18;18:30;588;864;68,06;47;76\n05/11/18;19:00;576;864;66,67;32;94\n05/11/18;19:30;504;864;58,33;46;64\n05/11/18;20:00;512;864;59,26;39;28\n05/11/18;20:30;516;864;59,72;12;17\n05/11/18;21:00;509;864;58,91;8;19\n05/11/18;21:30;485;864;56,13;6;20\n05/11/18;22:00;486;864;56,25;4;29\n05/11/18;22:30;440;864;50,93;5;25\n05/11/18;23:00;436;864;50,46;4;19\n05/11/18;23:30;412;864;47,69;1;12\n06/11/18;00:00;411;864;47,57;0;3\n06/11/18;00:30;406;864;46,99;1;3\n06/11/18;01:00;407;864;47,11;0;2\n06/11/18;01:30;405;864;46,88;0;0\n06/11/18;02:00;405;864;46,88;1;0\n06/11/18;02:30;406;864;46,99;0;0\n06/11/18;03:00;406;864;46,99;0;0\n06/11/18;03:30;406;864;46,99;0;0\n06/11/18;04:00;406;864;46,99;1;2\n06/11/18;04:30;404;864;46,76;0;0\n06/11/18;05:00;404;864;46,76;0;0\n06/11/18;05:30;404;864;46,76;1;1\n06/11/18;06:00;404;864;46,76;3;3\n06/11/18;06:30;412;864;47,69;17;7\n06/11/18;07:00;416;864;48,15;21;12\n06/11/18;07:30;441;864;51,04;43;23\n06/11/18;08:00;444;864;51,39;59;23\n06/11/18;08:30;521;864;60,30;82;14\n06/11/18;09:00;648;864;75,00;102;23\n06/11/18;09:30;675;864;78,13;88;23\n06/11/18;10:00;753;864;87,15;95;28\n06/11/18;10:30;806;864;93,29;88;37\n06/11/18;11:00;805;864;93,17;49;50\n06/11/18;11:30;804;864;93,06;58;61\n06/11/18;12:00;803;864;92,94;56;57\n06/11/18;12:30;806;864;93,29;47;47\n06/11/18;13:00;805;864;93,17;43;46\n06/11/18;13:30;793;864;91,78;73;69\n06/11/18;14:00;804;864;93,06;59;56\n06/11/18;14:30;820;864;94,91;75;55\n06/11/18;15:00;820;864;94,91;69;71\n06/11/18;15:30;818;864;94,68;79;83\n06/11/18;16:00;814;864;94,21;58;77\n06/11/18;16:30;774;864;89,58;59;89\n06/11/18;17:00;753;864;87,15;46;104\n06/11/18;17:30;699;864;80,90;57;79\n06/11/18;18:00;682;864;78,94;42;77\n06/11/18;18:30;620;864;71,76;54;90\n06/11/18;19:00;590;864;68,29;42;95\n06/11/18;19:30;528;864;61,11;35;69\n06/11/18;20:00;538;864;62,27;41;31\n06/11/18;20:30;536;864;62,04;17;21\n06/11/18;21:00;533;864;61,69;5;17\n06/11/18;21:30;513;864;59,38;7;23\n06/11/18;22:00;504;864;58,33;4;24\n06/11/18;22:30;475;864;54,98;4;25\n06/11/18;23:00;456;864;52,78;3;28\n06/11/18;23:30;422;864;48,84;2;18\n07/11/18;00:00;424;864;49,07;0;5\n07/11/18;00:30;419;864;48,50;1;2\n07/11/18;01:00;418;864;48,38;0;1\n07/11/18;01:30;417;864;48,26;0;0\n07/11/18;02:00;417;864;48,26;0;1\n07/11/18;02:30;415;864;48,03;0;1\n07/11/18;03:00;415;864;48,03;0;0\n07/11/18;03:30;415;864;48,03;0;0\n07/11/18;04:00;415;864;48,03;0;0\n07/11/18;04:30;418;864;48,38;3;0\n07/11/18;05:00;418;864;48,38;0;0\n07/11/18;05:30;419;864;48,50;1;0\n07/11/18;06:00;420;864;48,61;5;4\n07/11/18;06:30;424;864;49,07;16;9\n07/11/18;07:00;431;864;49,88;24;13\n07/11/18;07:30;442;864;51,16;31;18\n07/11/18;08:00;535;864;61,92;54;18\n07/11/18;08:30;537;864;62,15;82;15\n07/11/18;09:00;575;864;66,55;87;14\n07/11/18;09:30;678;864;78,47;94;24\n07/11/18;10:00;695;864;80,44;78;31\n07/11/18;10:30;786;864;90,97;104;40\n07/11/18;11:00;816;864;94,44;80;77\n07/11/18;11:30;811;864;93,87;77;78\n07/11/18;12:00;822;864;95,14;81;74\n07/11/18;12:30;825;864;95,49;66;56\n07/11/18;13:00;822;864;95,14;47;50\n07/11/18;13:30;822;864;95,14;79;75\n07/11/18;14:00;826;864;95,60;76;71\n07/11/18;14:30;838;864;96,99;80;72\n07/11/18;15:00;833;864;96,41;61;81\n07/11/18;15:30;819;864;94,79;83;79\n07/11/18;16:00;805;864;93,17;40;88\n07/11/18;16:30;757;864;87,62;60;89\n07/11/18;17:00;738;864;85,42;49;83\n07/11/18;17:30;685;864;79,28;46;94\n07/11/18;18:00;649;864;75,12;35;91\n07/11/18;18:30;579;864;67,01;47;86\n07/11/18;19:00;562;864;65,05;41;86\n07/11/18;19:30;503;864;58,22;42;62\n07/11/18;20:00;506;864;58,56;43;23\n07/11/18;20:30;531;864;61,46;25;12\n07/11/18;21:00;535;864;61,92;13;16\n07/11/18;21:30;517;864;59,84;4;22\n07/11/18;22:00;503;864;58,22;1;27\n07/11/18;22:30;471;864;54,51;3;21\n07/11/18;23:00;457;864;52,89;2;25\n07/11/18;23:30;429;864;49,65;4;22\n08/11/18;00:00;424;864;49,07;1;10\n08/11/18;00:30;414;864;47,92;0;3\n08/11/18;01:00;411;864;47,57;0;3\n08/11/18;01:30;412;864;47,69;2;0\n08/11/18;02:00;412;864;47,69;0;0\n08/11/18;02:30;412;864;47,69;0;0\n08/11/18;03:00;412;864;47,69;0;0\n08/11/18;03:30;413;864;47,80;1;0\n08/11/18;04:00;413;864;47,80;0;1\n08/11/18;04:30;412;864;47,69;1;0\n08/11/18;05:00;412;864;47,69;0;0\n08/11/18;05:30;414;864;47,92;2;0\n08/11/18;06:00;414;864;47,92;3;1\n08/11/18;06:30;420;864;48,61;15;5\n08/11/18;07:00;429;864;49,65;31;9\n08/11/18;07:30;472;864;54,63;43;13\n08/11/18;08:00;480;864;55,56;53;25\n08/11/18;08:30;576;864;66,67;103;15\n08/11/18;09:00;623;864;72,11;128;19\n08/11/18;09:30;765;864;88,54;96;16\n08/11/18;10:00;795;864;92,01;59;31\n08/11/18;10:30;813;864;94,10;48;47\n08/11/18;11:00;813;864;94,10;35;35\n08/11/18;11:30;809;864;93,63;47;49\n08/11/18;12:00;813;864;94,10;45;42\n08/11/18;12:30;811;864;93,87;31;33\n08/11/18;13:00;814;864;94,21;30;31\n08/11/18;13:30;811;864;93,87;52;52\n08/11/18;14:00;811;864;93,87;43;43\n08/11/18;14:30;808;864;93,52;45;46\n08/11/18;15:00;808;864;93,52;49;51\n08/11/18;15:30;808;864;93,52;63;66\n08/11/18;16:00;808;864;93,52;62;57\n08/11/18;16:30;789;864;91,32;56;85\n08/11/18;17:00;775;864;89,70;47;101\n08/11/18;17:30;688;864;79,63;54;92\n08/11/18;18:00;676;864;78,24;67;87\n08/11/18;18:30;620;864;71,76;45;90\n08/11/18;19:00;594;864;68,75;40;92\n08/11/18;19:30;562;864;65,05;64;62\n08/11/18;20:00;575;864;66,55;55;33\n08/11/18;20:30;584;864;67,59;26;30\n08/11/18;21:00;576;864;66,67;5;27\n08/11/18;21:30;555;864;64,24;11;20\n08/11/18;22:00;544;864;62,96;4;30\n08/11/18;22:30;506;864;58,56;5;33\n08/11/18;23:00;490;864;56,71;2;31\n08/11/18;23:30;448;864;51,85;2;28\n09/11/18;00:00;440;864;50,93;2;22\n09/11/18;00:30;418;864;48,38;1;7\n09/11/18;01:00;418;864;48,38;2;4\n09/11/18;01:30;416;864;48,15;0;1\n09/11/18;02:00;415;864;48,03;0;2\n09/11/18;02:30;413;864;47,80;0;0\n09/11/18;03:00;412;864;47,69;0;1\n09/11/18;03:30;411;864;47,57;0;1\n09/11/18;04:00;411;864;47,57;0;0\n09/11/18;04:30;410;864;47,45;0;1\n09/11/18;05:00;410;864;47,45;1;1\n09/11/18;05:30;409;864;47,34;1;2\n09/11/18;06:00;409;864;47,34;4;2\n09/11/18;06:30;418;864;48,38;15;8\n09/11/18;07:00;427;864;49,42;27;10\n09/11/18;07:30;446;864;51,62;33;12\n09/11/18;08:00;483;864;55,90;66;25\n09/11/18;08:30;539;864;62,38;82;18\n09/11/18;09:00;586;864;67,82;104;18\n09/11/18;09:30;709;864;82,06;102;18\n09/11/18;10:00;760;864;87,96;125;34\n09/11/18;10:30;824;864;95,37;56;50\n09/11/18;11:00;822;864;95,14;61;59\n09/11/18;11:30;832;864;96,30;80;72\n09/11/18;12:00;832;864;96,30;60;78\n09/11/18;12:30;831;864;96,18;56;37\n09/11/18;13:00;831;864;96,18;48;50\n09/11/18;13:30;831;864;96,18;73;73\n09/11/18;14:00;831;864;96,18;63;61\n09/11/18;14:30;825;864;95,49;63;67\n09/11/18;15:00;823;864;95,25;79;81\n09/11/18;15:30;802;864;92,82;61;89\n09/11/18;16:00;779;864;90,16;73;89\n09/11/18;16:30;775;864;89,70;74;82\n09/11/18;17:00;760;864;87,96;64;101\n09/11/18;17:30;710;864;82,18;57;89\n09/11/18;18:00;694;864;80,32;68;104\n09/11/18;18:30;626;864;72,45;35;84\n09/11/18;19:00;612;864;70,83;53;106\n09/11/18;19:30;542;864;62,73;58;73\n09/11/18;20:00;556;864;64,35;75;38\n09/11/18;20:30;618;864;71,53;56;17\n09/11/18;21:00;625;864;72,34;35;23\n09/11/18;21:30;639;864;73,96;22;17\n09/11/18;22:00;632;864;73,15;7;35\n09/11/18;22:30;590;864;68,29;11;38\n09/11/18;23:00;569;864;65,86;5;46\n09/11/18;23:30;508;864;58,80;7;42\n10/11/18;00:00;502;864;58,10;5;37\n10/11/18;00:30;450;864;52,08;4;33\n10/11/18;01:00;441;864;51,04;5;15\n10/11/18;01:30;432;864;50,00;2;6\n10/11/18;02:00;431;864;49,88;0;1\n10/11/18;02:30;430;864;49,77;0;2\n10/11/18;03:00;428;864;49,54;0;2\n10/11/18;03:30;422;864;48,84;0;4\n10/11/18;04:00;421;864;48,73;0;3\n10/11/18;04:30;419;864;48,50;0;0\n10/11/18;05:00;419;864;48,50;1;1\n10/11/18;05:30;418;864;48,38;1;2\n10/11/18;06:00;418;864;48,38;1;2\n10/11/18;06:30;417;864;48,26;3;1\n10/11/18;07:00;420;864;48,61;2;1\n10/11/18;07:30;423;864;48,96;7;4\n10/11/18;08:00;426;864;49,31;14;6\n10/11/18;08:30;433;864;50,12;22;20\n10/11/18;09:00;445;864;51,50;52;12\n10/11/18;09:30;513;864;59,38;78;24\n10/11/18;10:00;559;864;64,70;118;27\n10/11/18;10:30;660;864;76,39;105;52\n10/11/18;11:00;691;864;79,98;118;56\n10/11/18;11:30;744;864;86,11;112;96\n10/11/18;12:00;756;864;87,50;121;75\n10/11/18;12:30;832;864;96,30;104;67\n10/11/18;13:00;833;864;96,41;73;69\n10/11/18;13:30;835;864;96,64;48;51\n10/11/18;14:00;827;864;95,72;56;58\n10/11/18;14:30;826;864;95,60;78;77\n10/11/18;15:00;825;864;95,49;98;95\n10/11/18;15:30;831;864;96,18;88;91\n10/11/18;16:00;831;864;96,18;80;78\n10/11/18;16:30;829;864;95,95;85;100\n10/11/18;17:00;828;864;95,83;106;93\n10/11/18;17:30;827;864;95,72;109;110\n10/11/18;18:00;824;864;95,37;78;119\n10/11/18;18:30;758;864;87,73;68;105\n10/11/18;19:00;747;864;86,46;49;119\n10/11/18;19:30;670;864;77,55;66;73\n10/11/18;20:00;672;864;77,78;62;33\n10/11/18;20:30;739;864;85,53;92;36\n10/11/18;21:00;760;864;87,96;84;34\n10/11/18;21:30;809;864;93,63;40;40\n10/11/18;22:00;794;864;91,90;24;59\n10/11/18;22:30;739;864;85,53;14;54\n10/11/18;23:00;724;864;83,80;7;85\n10/11/18;23:30;592;864;68,52;4;79\n11/11/18;00:00;562;864;65,05;4;43\n11/11/18;00:30;503;864;58,22;4;42\n11/11/18;01:00;486;864;56,25;0;20\n11/11/18;01:30;468;864;54,17;0;9\n11/11/18;02:00;464;864;53,70;0;14\n11/11/18;02:30;449;864;51,97;2;5\n11/11/18;03:00;448;864;51,85;0;3\n11/11/18;03:30;446;864;51,62;0;1\n11/11/18;04:00;447;864;51,74;1;2\n11/11/18;04:30;441;864;51,04;0;3\n11/11/18;05:00;441;864;51,04;0;1\n11/11/18;05:30;439;864;50,81;0;0\n11/11/18;06:00;438;864;50,69;0;1\n11/11/18;06:30;438;864;50,69;0;0\n11/11/18;07:00;437;864;50,58;0;2\n11/11/18;07:30;432;864;50,00;0;4\n11/11/18;08:00;431;864;49,88;0;4\n11/11/18;08:30;427;864;49,42;2;4\n11/11/18;09:00;426;864;49,31;7;5\n11/11/18;09:30;430;864;49,77;13;9\n11/11/18;10:00;430;864;49,77;15;14\n11/11/18;10:30;440;864;50,93;29;15\n11/11/18;11:00;443;864;51,27;19;24\n11/11/18;11:30;453;864;52,43;29;12\n11/11/18;12:00;467;864;54,05;31;14\n11/11/18;12:30;478;864;55,32;25;25\n11/11/18;13:00;476;864;55,09;21;14\n11/11/18;13:30;482;864;55,79;13;17\n11/11/18;14:00;476;864;55,09;15;20\n11/11/18;14:30;474;864;54,86;17;20\n11/11/18;15:00;470;864;54,40;17;30\n11/11/18;15:30;456;864;52,78;22;27\n11/11/18;16:00;453;864;52,43;26;25\n11/11/18;16:30;446;864;51,62;19;22\n11/11/18;17:00;449;864;51,97;21;17\n11/11/18;17:30;450;864;52,08;18;27\n11/11/18;18:00;442;864;51,16;12;19\n11/11/18;18:30;437;864;50,58;18;15\n11/11/18;19:00;442;864;51,16;20;17\n11/11/18;19:30;451;864;52,20;20;8\n11/11/18;20:00;449;864;51,97;12;18\n11/11/18;20:30;444;864;51,39;8;12\n11/11/18;21:00;439;864;50,81;11;12\n11/11/18;21:30;436;864;50,46;2;13\n11/11/18;22:00;430;864;49,77;2;8\n11/11/18;22:30;421;864;48,73;3;7\n11/11/18;23:00;421;864;48,73;1;4\n11/11/18;23:30;401;864;46,41;1;2\n12/11/18;00:00;402;864;46,53;1;0\n12/11/18;00:30;403;864;46,64;1;0\n12/11/18;01:00;403;864;46,64;0;0\n12/11/18;01:30;402;864;46,53;0;1\n12/11/18;02:00;402;864;46,53;0;0\n12/11/18;02:30;402;864;46,53;0;0\n12/11/18;03:00;402;864;46,53;0;0\n12/11/18;03:30;402;864;46,53;0;0\n12/11/18;04:00;402;864;46,53;0;0\n12/11/18;04:30;402;864;46,53;0;0\n12/11/18;05:00;402;864;46,53;1;0\n12/11/18;05:30;405;864;46,88;3;1\n12/11/18;06:00;407;864;47,11;6;1\n12/11/18;06:30;412;864;47,69;15;8\n12/11/18;07:00;415;864;48,03;22;8\n12/11/18;07:30;443;864;51,27;25;11\n12/11/18;08:00;455;864;52,66;52;18\n12/11/18;08:30;535;864;61,92;97;16\n12/11/18;09:00;584;864;67,59;102;20\n12/11/18;09:30;697;864;80,67;78;16\n12/11/18;10:00;709;864;82,06;36;9\n12/11/18;10:30;735;864;85,07;44;23\n12/11/18;11:00;735;864;85,07;28;28\n12/11/18;11:30;735;864;85,07;48;46\n12/11/18;12:00;734;864;84,95;62;45\n12/11/18;12:30;790;864;91,44;75;24\n12/11/18;13:00;800;864;92,59;73;50\n12/11/18;13:30;826;864;95,60;63;56\n12/11/18;14:00;835;864;96,64;66;57\n12/11/18;14:30;837;864;96,88;62;62\n12/11/18;15:00;839;864;97,11;53;74\n12/11/18;15:30;823;864;95,25;75;77\n12/11/18;16:00;815;864;94,33;64;86\n12/11/18;16:30;784;864;90,74;55;88\n12/11/18;17:00;757;864;87,62;78;81\n12/11/18;17:30;705;864;81,60;46;119\n12/11/18;18:00;678;864;78,47;40;89\n12/11/18;18:30;603;864;69,79;37;102\n12/11/18;19:00;570;864;65,97;33;85\n12/11/18;19:30;513;864;59,38;33;41\n12/11/18;20:00;515;864;59,61;20;25\n12/11/18;20:30;507;864;58,68;20;14\n12/11/18;21:00;511;864;59,14;2;15\n12/11/18;21:30;496;864;57,41;6;18\n12/11/18;22:00;486;864;56,25;1;20\n12/11/18;22:30;465;864;53,82;2;12\n12/11/18;23:00;458;864;53,01;0;12\n12/11/18;23:30;447;864;51,74;2;6\n13/11/18;00:00;444;864;51,39;0;2\n13/11/18;00:30;441;864;51,04;2;2\n13/11/18;01:00;443;864;51,27;1;0\n13/11/18;01:30;444;864;51,39;1;1\n13/11/18;02:00;444;864;51,39;0;0\n13/11/18;02:30;443;864;51,27;0;1\n13/11/18;03:00;443;864;51,27;0;1\n13/11/18;03:30;442;864;51,16;0;0\n13/11/18;04:00;442;864;51,16;0;0\n13/11/18;04:30;442;864;51,16;0;0\n13/11/18;05:00;442;864;51,16;1;0\n13/11/18;05:30;444;864;51,39;3;0\n13/11/18;06:00;445;864;51,50;6;2\n13/11/18;06:30;454;864;52,55;14;7\n13/11/18;07:00;456;864;52,78;27;21\n13/11/18;07:30;476;864;55,09;45;21\n13/11/18;08:00;508;864;58,80;55;23\n13/11/18;08:30;574;864;66,44;91;13\n13/11/18;09:00;611;864;70,72;101;25\n13/11/18;09:30;720;864;83,33;112;18\n13/11/18;10:00;784;864;90,74;103;34\n13/11/18;10:30;862;864;99,77;59;34\n13/11/18;11:00;863;864;99,88;58;57\n13/11/18;11:30;863;864;99,88;55;57\n13/11/18;12:00;860;864;99,54;67;66\n13/11/18;12:30;862;864;99,77;35;33\n13/11/18;13:00;863;864;99,88;42;42\n13/11/18;13:30;869;864;100,58;59;56\n13/11/18;14:00;869;864;100,58;55;55\n13/11/18;14:30;869;864;100,58;53;54\n13/11/18;15:00;869;864;100,58;57;69\n13/11/18;15:30;851;864;98,50;54;73\n13/11/18;16:00;837;864;96,88;47;66\n13/11/18;16:30;781;864;90,39;47;94\n13/11/18;17:00;769;864;89,00;34;67\n13/11/18;17:30;735;864;85,07;62;67\n13/11/18;18:00;736;864;85,19;53;82\n13/11/18;18:30;686;864;79,40;46;80\n13/11/18;19:00;668;864;77,31;79;91\n13/11/18;19:30;650;864;75,23;59;67\n13/11/18;20:00;666;864;77,08;63;39\n13/11/18;20:30;666;864;77,08;25;28\n13/11/18;21:00;664;864;76,85;6;30\n13/11/18;21:30;613;864;70,95;7;39\n13/11/18;22:00;603;864;69,79;4;45\n13/11/18;22:30;534;864;61,81;3;41\n13/11/18;23:00;520;864;60,19;4;28\n13/11/18;23:30;486;864;56,25;4;28\n14/11/18;00:00;479;864;55,44;0;8\n14/11/18;00:30;465;864;53,82;0;5\n14/11/18;01:00;465;864;53,82;1;3\n14/11/18;01:30;463;864;53,59;0;0\n14/11/18;02:00;463;864;53,59;0;2\n14/11/18;02:30;459;864;53,13;0;2\n14/11/18;03:00;459;864;53,13;0;0\n14/11/18;03:30;459;864;53,13;0;0\n14/11/18;04:00;459;864;53,13;0;1\n14/11/18;04:30;460;864;53,24;3;0\n14/11/18;05:00;461;864;53,36;0;0\n14/11/18;05:30;462;864;53,47;7;2\n14/11/18;06:00;467;864;54,05;4;5\n14/11/18;06:30;468;864;54,17;15;8\n14/11/18;07:00;475;864;54,98;24;12\n14/11/18;07:30;498;864;57,64;30;12\n14/11/18;08:00;508;864;58,80;61;17\n14/11/18;08:30;596;864;68,98;87;11\n14/11/18;09:00;634;864;73,38;88;12\n14/11/18;09:30;760;864;87,96;97;26\n14/11/18;10:00;772;864;89,35;106;33\n14/11/18;10:30;857;864;99,19;105;51\n14/11/18;11:00;907;864;104,98;75;64\n14/11/18;11:30;901;864;104,28;72;78\n14/11/18;12:00;907;864;104,98;68;62\n14/11/18;12:30;917;864;106,13;52;50\n14/11/18;13:00;914;864;105,79;30;40\n14/11/18;13:30;910;864;105,32;64;53\n14/11/18;14:00;915;864;105,90;71;70\n14/11/18;14:30;910;864;105,32;58;61\n14/11/18;15:00;909;864;105,21;69;74\n14/11/18;15:30;906;864;104,86;75;70\n14/11/18;16:00;898;864;103,94;52;69\n14/11/18;16:30;883;864;102,20;62;93\n14/11/18;17:00;848;864;98,15;51;86\n14/11/18;17:30;789;864;91,32;46;85\n14/11/18;18:00;766;864;88,66;53;105\n14/11/18;18:30;722;864;83,56;48;71\n14/11/18;19:00;711;864;82,29;53;94\n14/11/18;19:30;667;864;77,20;55;57\n14/11/18;20:00;674;864;78,01;44;33\n14/11/18;20:30;688;864;79,63;27;26\n14/11/18;21:00;687;864;79,51;24;15\n14/11/18;21:30;679;864;78,59;6;27\n14/11/18;22:00;669;864;77,43;10;37\n14/11/18;22:30;627;864;72,57;3;31\n14/11/18;23:00;609;864;70,49;4;37\n14/11/18;23:30;568;864;65,74;3;24\n15/11/18;00:00;563;864;65,16;1;16\n15/11/18;00:30;538;864;62,27;2;13\n15/11/18;01:00;537;864;62,15;0;1\n15/11/18;01:30;536;864;62,04;0;0\n15/11/18;02:00;536;864;62,04;0;0\n15/11/18;02:30;537;864;62,15;1;0\n15/11/18;03:00;537;864;62,15;0;0\n15/11/18;03:30;537;864;62,15;0;0\n15/11/18;04:00;537;864;62,15;0;0\n15/11/18;04:30;537;864;62,15;0;0\n15/11/18;05:00;537;864;62,15;0;1\n15/11/18;05:30;538;864;62,27;7;1\n15/11/18;06:00;544;864;62,96;5;4\n15/11/18;06:30;551;864;63,77;20;4\n15/11/18;07:00;557;864;64,47;28;11\n15/11/18;07:30;582;864;67,36;30;24\n15/11/18;08:00;585;864;67,71;57;32\n15/11/18;08:30;658;864;76,16;89;13\n15/11/18;09:00;795;864;92,01;102;21\n15/11/18;09:30;795;864;92,01;123;23\n15/11/18;10:00;880;864;101,85;79;26\n15/11/18;10:30;951;864;110,07;80;46\n15/11/18;11:00;953;864;110,30;61;57\n15/11/18;11:30;957;864;110,76;60;62\n15/11/18;12:00;956;864;110,65;58;61\n15/11/18;12:30;958;864;110,88;48;45\n15/11/18;13:00;957;864;110,76;42;42\n15/11/18;13:30;955;864;110,53;66;67\n15/11/18;14:00;958;864;110,88;76;75\n15/11/18;14:30;954;864;110,42;64;64\n15/11/18;15:00;953;864;110,30;66;79\n15/11/18;15:30;941;864;108,91;78;73\n15/11/18;16:00;948;864;109,72;72;89\n15/11/18;16:30;912;864;105,56;58;101\n15/11/18;17:00;889;864;102,89;59;78\n15/11/18;17:30;856;864;99,07;75;91\n15/11/18;18:00;842;864;97,45;72;92\n15/11/18;18:30;811;864;93,87;66;80\n15/11/18;19:00;809;864;93,63;76;123\n15/11/18;19:30;771;864;89,24;78;74\n15/11/18;20:00;775;864;89,70;70;33\n15/11/18;20:30;817;864;94,56;41;41\n15/11/18;21:00;811;864;93,87;22;29\n15/11/18;21:30;787;864;91,09;9;34\n15/11/18;22:00;773;864;89,47;6;51\n15/11/18;22:30;704;864;81,48;5;51\n15/11/18;23:00;674;864;78,01;3;54\n15/11/18;23:30;603;864;69,79;1;40\n16/11/18;00:00;592;864;68,52;6;20\n16/11/18;00:30;567;864;65,63;3;16\n16/11/18;01:00;562;864;65,05;0;9\n16/11/18;01:30;553;864;64,00;0;4\n16/11/18;02:00;551;864;63,77;0;4\n16/11/18;02:30;549;864;63,54;1;0\n16/11/18;03:00;549;864;63,54;1;1\n16/11/18;03:30;548;864;63,43;0;1\n16/11/18;04:00;548;864;63,43;2;1\n16/11/18;04:30;549;864;63,54;0;0\n16/11/18;05:00;549;864;63,54;1;1\n16/11/18;05:30;549;864;63,54;1;0\n16/11/18;06:00;551;864;63,77;5;2\n16/11/18;06:30;560;864;64,81;15;7\n16/11/18;07:00;561;864;64,93;19;11\n16/11/18;07:30;572;864;66,20;27;21\n16/11/18;08:00;577;864;66,78;57;29\n16/11/18;08:30;659;864;76,27;90;26\n16/11/18;09:00;679;864;78,59;97;16\n16/11/18;09:30;801;864;92,71;105;17\n16/11/18;10:00;903;864;104,51;115;35\n16/11/18;10:30;940;864;108,80;82;60\n16/11/18;11:00;940;864;108,80;61;63\n16/11/18;11:30;938;864;108,56;60;56\n16/11/18;12:00;939;864;108,68;57;58\n16/11/18;12:30;938;864;108,56;51;51\n16/11/18;13:00;934;864;108,10;41;40\n16/11/18;13:30;937;864;108,45;55;57\n16/11/18;14:00;932;864;107,87;106;76\n16/11/18;14:30;967;864;111,92;72;71\n16/11/18;15:00;969;864;112,15;69;70\n16/11/18;15:30;954;864;110,42;84;94\n16/11/18;16:00;953;864;110,30;66;82\n16/11/18;16:30;918;864;106,25;64;94\n16/11/18;17:00;903;864;104,51;65;99\n16/11/18;17:30;850;864;98,38;67;97\n16/11/18;18:00;843;864;97,57;60;104\n16/11/18;18:30;765;864;88,54;59;103\n16/11/18;19:00;744;864;86,11;63;98\n16/11/18;19:30;717;864;82,99;65;61\n16/11/18;20:00;731;864;84,61;68;29\n16/11/18;20:30;780;864;90,28;55;26\n16/11/18;21:00;788;864;91,20;32;27\n16/11/18;21:30;781;864;90,39;15;31\n16/11/18;22:00;772;864;89,35;18;44\n16/11/18;22:30;727;864;84,14;12;40\n16/11/18;23:00;718;864;83,10;9;38\n16/11/18;23:30;672;864;77,78;2;32\n17/11/18;00:00;642;864;74,31;3;36\n17/11/18;00:30;604;864;69,91;0;41\n17/11/18;01:00;581;864;67,25;1;16\n17/11/18;01:30;571;864;66,09;1;4\n17/11/18;02:00;569;864;65,86;2;8\n17/11/18;02:30;559;864;64,70;0;6\n17/11/18;03:00;558;864;64,58;0;3\n17/11/18;03:30;554;864;64,12;0;1\n17/11/18;04:00;383;864;44,33;0;4\n17/11/18;04:30;382;864;44,21;0;0\n17/11/18;05:00;381;864;44,10;0;2\n17/11/18;05:30;382;864;44,21;2;1\n17/11/18;06:00;381;864;44,10;0;1\n17/11/18;06:30;380;864;43,98;2;2\n17/11/18;07:00;380;864;43,98;3;2\n17/11/18;07:30;381;864;44,10;7;4\n17/11/18;08:00;388;864;44,91;13;6\n17/11/18;08:30;398;864;46,06;15;4\n17/11/18;09:00;401;864;46,41;32;6\n17/11/18;09:30;431;864;49,88;30;8\n17/11/18;10:00;452;864;52,31;46;10\n17/11/18;10:30;525;864;60,76;67;17\n17/11/18;11:00;543;864;62,85;73;35\n17/11/18;11:30;589;864;68,17;58;45\n17/11/18;12:00;591;864;68,40;57;44\n17/11/18;12:30;608;864;70,37;45;34\n17/11/18;13:00;613;864;70,95;38;29\n17/11/18;13:30;620;864;71,76;28;27\n17/11/18;14:00;623;864;72,11;49;32\n17/11/18;14:30;655;864;75,81;66;37\n17/11/18;15:00;670;864;77,55;76;48\n17/11/18;15:30;708;864;81,94;79;55\n17/11/18;16:00;716;864;82,87;79;75\n17/11/18;16:30;721;864;83,45;71;74\n17/11/18;17:00;718;864;83,10;87;82\n17/11/18;17:30;709;864;82,06;62;82\n17/11/18;18:00;700;864;81,02;54;86\n17/11/18;18:30;621;864;71,88;36;100\n17/11/18;19:00;594;864;68,75;38;83\n17/11/18;19:30;549;864;63,54;34;49\n17/11/18;20:00;548;864;63,43;46;21\n17/11/18;20:30;568;864;65,74;32;28\n17/11/18;21:00;577;864;66,78;27;21\n17/11/18;21:30;576;864;66,67;29;33\n17/11/18;22:00;567;864;65,63;10;37\n17/11/18;22:30;528;864;61,11;8;31\n17/11/18;23:00;519;864;60,07;7;42\n17/11/18;23:30;465;864;53,82;5;40\n18/11/18;00:00;449;864;51,97;1;21\n18/11/18;00:30;411;864;47,57;2;33\n18/11/18;01:00;400;864;46,30;3;15\n18/11/18;01:30;379;864;43,87;0;9\n18/11/18;02:00;376;864;43,52;2;6\n18/11/18;02:30;372;864;43,06;1;4\n18/11/18;03:00;371;864;42,94;0;2\n18/11/18;03:30;369;864;42,71;0;0\n18/11/18;04:00;368;864;42,59;0;3\n18/11/18;04:30;365;864;42,25;0;1\n18/11/18;05:00;365;864;42,25;0;0\n18/11/18;05:30;366;864;42,36;2;2\n18/11/18;06:00;364;864;42,13;0;2\n18/11/18;06:30;362;864;41,90;0;3\n18/11/18;07:00;358;864;41,44;0;5\n18/11/18;07:30;351;864;40,63;0;5\n18/11/18;08:00;349;864;40,39;0;4\n18/11/18;08:30;340;864;39,35;2;9\n18/11/18;09:00;338;864;39,12;0;8\n18/11/18;09:30;322;864;37,27;4;13\n18/11/18;10:00;324;864;37,50;18;12\n18/11/18;10:30;330;864;38,19;17;13\n18/11/18;11:00;329;864;38,08;21;13\n18/11/18;11:30;340;864;39,35;23;13\n18/11/18;12:00;357;864;41,32;45;17\n18/11/18;12:30;390;864;45,14;40;20\n18/11/18;13:00;399;864;46,18;18;12\n18/11/18;13:30;404;864;46,76;19;22\n18/11/18;14:00;397;864;45,95;16;22\n18/11/18;14:30;391;864;45,25;22;27\n18/11/18;15:00;384;864;44,44;24;25\n18/11/18;15:30;383;864;44,33;31;26\n18/11/18;16:00;390;864;45,14;37;25\n18/11/18;16:30;408;864;47,22;43;40\n18/11/18;17:00;402;864;46,53;18;38\n18/11/18;17:30;378;864;43,75;24;33\n18/11/18;18:00;375;864;43,40;15;37\n18/11/18;18:30;340;864;39,35;16;26\n18/11/18;19:00;340;864;39,35;17;24\n18/11/18;19:30;336;864;38,89;17;18\n18/11/18;20:00;334;864;38,66;13;8\n18/11/18;20:30;348;864;40,28;12;2\n18/11/18;21:00;350;864;40,51;5;5\n18/11/18;21:30;342;864;39,58;2;16\n18/11/18;22:00;328;864;37,96;5;11\n18/11/18;22:30;362;864;41,90;2;6\n18/11/18;23:00;362;864;41,90;2;1\n18/11/18;23:30;363;864;42,01;1;2\n19/11/18;00:00;362;864;41,90;1;4\n19/11/18;00:30;359;864;41,55;0;0\n19/11/18;01:00;359;864;41,55;0;0\n19/11/18;01:30;358;864;41,44;0;1\n19/11/18;02:00;358;864;41,44;0;0\n19/11/18;02:30;358;864;41,44;0;0\n19/11/18;03:00;358;864;41,44;0;0\n19/11/18;03:30;357;864;41,32;0;1\n19/11/18;04:00;357;864;41,32;0;0\n19/11/18;04:30;356;864;41,20;0;1\n19/11/18;05:00;356;864;41,20;1;1\n19/11/18;05:30;356;864;41,20;2;2\n19/11/18;06:00;357;864;41,32;4;1\n19/11/18;06:30;365;864;42,25;14;6\n19/11/18;07:00;370;864;42,82;16;7\n19/11/18;07:30;388;864;44,91;40;13\n19/11/18;08:00;407;864;47,11;46;24\n19/11/18;08:30;414;864;47,92;76;16\n19/11/18;09:00;504;864;58,33;87;14\n19/11/18;09:30;641;864;74,19;135;15\n19/11/18;10:00;689;864;79,75;75;20\n19/11/18;10:30;753;864;87,15;81;48\n19/11/18;11:00;769;864;89,00;71;59\n19/11/18;11:30;793;864;91,78;85;60\n19/11/18;12:00;800;864;92,59;84;54\n19/11/18;12:30;834;864;96,53;51;49\n19/11/18;13:00;831;864;96,18;45;51\n19/11/18;13:30;821;864;95,02;75;70\n19/11/18;14:00;833;864;96,41;68;68\n19/11/18;14:30;820;864;94,91;63;81\n19/11/18;15:00;814;864;94,21;80;81\n19/11/18;15:30;805;864;93,17;62;79\n19/11/18;16:00;791;864;91,55;57;89\n19/11/18;16:30;723;864;83,68;49;92\n19/11/18;17:00;703;864;81,37;40;78\n19/11/18;17:30;653;864;75,58;49;79\n19/11/18;18:00;638;864;73,84;39;100\n19/11/18;18:30;563;864;65,16;38;85\n19/11/18;19:00;542;864;62,73;40;97\n19/11/18;19:30;462;864;53,47;26;47\n19/11/18;20:00;463;864;53,59;27;30\n19/11/18;20:30;456;864;52,78;16;16\n19/11/18;21:00;459;864;53,13;4;17\n19/11/18;21:30;431;864;49,88;5;25\n19/11/18;22:00;426;864;49,31;0;10\n19/11/18;22:30;408;864;47,22;0;18\n19/11/18;23:00;397;864;45,95;3;12\n19/11/18;23:30;387;864;44,79;3;4\n20/11/18;00:00;388;864;44,91;1;1\n20/11/18;00:30;387;864;44,79;0;1\n20/11/18;01:00;387;864;44,79;0;0\n20/11/18;01:30;388;864;44,91;1;0\n20/11/18;02:00;388;864;44,91;0;0\n20/11/18;02:30;387;864;44,79;0;1\n20/11/18;03:00;387;864;44,79;0;0\n20/11/18;03:30;387;864;44,79;0;0\n20/11/18;04:00;387;864;44,79;0;0\n20/11/18;04:30;386;864;44,68;1;1\n20/11/18;05:00;387;864;44,79;1;1\n20/11/18;05:30;388;864;44,91;3;0\n20/11/18;06:00;390;864;45,14;3;2\n20/11/18;06:30;393;864;45,49;24;8\n20/11/18;07:00;411;864;47,57;30;16\n20/11/18;07:30;427;864;49,42;30;20\n20/11/18;08:00;440;864;50,93;68;13\n20/11/18;08:30;520;864;60,19;77;20\n20/11/18;09:00;548;864;63,43;99;23\n20/11/18;09:30;671;864;77,66;103;18\n20/11/18;10:00;709;864;82,06;78;32\n20/11/18;10:30;777;864;89,93;85;36\n20/11/18;11:00;814;864;94,21;81;45\n20/11/18;11:30;831;864;96,18;55;55\n20/11/18;12:00;830;864;96,06;69;68\n20/11/18;12:30;826;864;95,60;47;50\n20/11/18;13:00;829;864;95,95;43;40\n20/11/18;13:30;834;864;96,53;44;44\n20/11/18;14:00;829;864;95,95;77;81\n20/11/18;14:30;828;864;95,83;33;56\n20/11/18;15:00;807;864;93,40;72;67\n20/11/18;15:30;808;864;93,52;66;69\n20/11/18;16:00;798;864;92,36;61;97\n20/11/18;16:30;762;864;88,19;58;86\n20/11/18;17:00;735;864;85,07;40;95\n20/11/18;17:30;679;864;78,59;62;75\n20/11/18;18:00;670;864;77,55;72;69\n20/11/18;18:30;656;864;75,93;63;86\n20/11/18;19:00;651;864;75,35;87;101\n20/11/18;19:30;613;864;70,95;50;92\n20/11/18;20:00;595;864;68,87;32;40\n20/11/18;20:30;588;864;68,06;23;31\n20/11/18;21:00;581;864;67,25;14;23\n20/11/18;21:30;562;864;65,05;7;38\n20/11/18;22:00;534;864;61,81;3;51\n20/11/18;22:30;471;864;54,51;2;32\n20/11/18;23:00;458;864;53,01;4;38\n20/11/18;23:30;415;864;48,03;2;17\n21/11/18;00:00;414;864;47,92;0;11\n21/11/18;00:30;401;864;46,41;0;4\n21/11/18;01:00;400;864;46,30;1;2\n21/11/18;01:30;398;864;46,06;0;2\n21/11/18;02:00;397;864;45,95;0;1\n21/11/18;02:30;396;864;45,83;0;0\n21/11/18;03:00;396;864;45,83;0;0\n21/11/18;03:30;396;864;45,83;0;0\n21/11/18;04:00;396;864;45,83;0;0\n21/11/18;04:30;396;864;45,83;1;1\n21/11/18;05:00;395;864;45,72;0;1\n21/11/18;05:30;395;864;45,72;2;0\n21/11/18;06:00;397;864;45,95;1;0\n21/11/18;06:30;399;864;46,18;23;13\n21/11/18;07:00;407;864;47,11;24;10\n21/11/18;07:30;438;864;50,69;37;13\n21/11/18;08:00;479;864;55,44;73;21\n21/11/18;08:30;538;864;62,27;90;16\n21/11/18;09:00;592;864;68,52;94;16\n21/11/18;09:30;702;864;81,25;106;26\n21/11/18;10:00;743;864;86,00;93;24\n21/11/18;10:30;805;864;93,17;76;56\n21/11/18;11:00;829;864;95,95;60;44\n21/11/18;11:30;830;864;96,06;84;84\n21/11/18;12:00;836;864;96,76;76;73\n21/11/18;12:30;842;864;97,45;59;53\n21/11/18;13:00;842;864;97,45;35;36\n21/11/18;13:30;841;864;97,34;64;63\n21/11/18;14:00;841;864;97,34;64;69\n21/11/18;14:30;839;864;97,11;57;56\n21/11/18;15:00;838;864;96,99;72;72\n21/11/18;15:30;834;864;96,53;69;71\n21/11/18;16:00;825;864;95,49;61;88\n21/11/18;16:30;797;864;92,25;70;90\n21/11/18;17:00;778;864;90,05;51;84\n21/11/18;17:30;731;864;84,61;64;93\n21/11/18;18:00;710;864;82,18;54;111\n21/11/18;18:30;660;864;76,39;57;100\n21/11/18;19:00;612;864;70,83;42;106\n21/11/18;19:30;562;864;65,05;60;55\n21/11/18;20:00;562;864;65,05;28;29\n21/11/18;20:30;563;864;65,16;21;25\n21/11/18;21:00;555;864;64,24;6;20\n21/11/18;21:30;534;864;61,81;5;19\n21/11/18;22:00;514;864;59,49;5;41\n21/11/18;22:30;473;864;54,75;5;25\n21/11/18;23:00;448;864;51,85;6;34\n21/11/18;23:30;423;864;48,96;1;24\n22/11/18;00:00;418;864;48,38;1;6\n22/11/18;00:30;410;864;47,45;0;6\n22/11/18;01:00;406;864;46,99;0;6\n22/11/18;01:30;400;864;46,30;0;1\n22/11/18;02:00;400;864;46,30;0;0\n22/11/18;02:30;400;864;46,30;0;0\n22/11/18;03:00;400;864;46,30;0;1\n22/11/18;03:30;399;864;46,18;0;0\n22/11/18;04:00;399;864;46,18;0;0\n22/11/18;04:30;399;864;46,18;0;0\n22/11/18;05:00;399;864;46,18;0;1\n22/11/18;05:30;398;864;46,06;3;1\n22/11/18;06:00;403;864;46,64;6;0\n22/11/18;06:30;413;864;47,80;23;4\n22/11/18;07:00;428;864;49,54;18;11\n22/11/18;07:30;436;864;50,46;41;16\n22/11/18;08:00;464;864;53,70;55;26\n22/11/18;08:30;539;864;62,38;94;16\n22/11/18;09:00;571;864;66,09;123;19\n22/11/18;09:30;730;864;84,49;109;26\n22/11/18;10:00;768;864;88,89;99;40\n22/11/18;10:30;809;864;93,63;52;50\n22/11/18;11:00;822;864;95,14;61;42\n22/11/18;11:30;829;864;95,95;58;54\n22/11/18;12:00;833;864;96,41;46;44\n22/11/18;12:30;833;864;96,41;38;41\n22/11/18;13:00;833;864;96,41;31;29\n22/11/18;13:30;833;864;96,41;54;53\n22/11/18;14:00;834;864;96,53;48;47\n22/11/18;14:30;833;864;96,41;58;59\n22/11/18;15:00;835;864;96,64;44;47\n22/11/18;15:30;830;864;96,06;62;65\n22/11/18;16:00;825;864;95,49;71;71\n22/11/18;16:30;818;864;94,68;72;69\n22/11/18;17:00;829;864;95,95;70;83\n22/11/18;17:30;782;864;90,51;63;100\n22/11/18;18:00;770;864;89,12;70;98\n22/11/18;18:30;721;864;83,45;75;110\n22/11/18;19:00;712;864;82,41;66;121\n22/11/18;19:30;688;864;79,63;98;64\n22/11/18;20:00;702;864;81,25;66;38\n22/11/18;20:30;716;864;82,87;22;39\n22/11/18;21:00;703;864;81,37;15;37\n22/11/18;21:30;661;864;76,50;9;46\n22/11/18;22:00;645;864;74,65;11;52\n22/11/18;22:30;565;864;65,39;2;54\n22/11/18;23:00;543;864;62,85;4;63\n22/11/18;23:30;482;864;55,79;2;19\n23/11/18;00:00;472;864;54,63;2;18\n23/11/18;00:30;450;864;52,08;1;15\n23/11/18;01:00;443;864;51,27;0;8\n23/11/18;01:30;439;864;50,81;1;4\n23/11/18;02:00;438;864;50,69;0;0\n23/11/18;02:30;437;864;50,58;0;2\n23/11/18;03:00;435;864;50,35;0;2\n23/11/18;03:30;433;864;50,12;1;2\n23/11/18;04:00;433;864;50,12;0;3\n23/11/18;04:30;430;864;49,77;0;0\n23/11/18;05:00;430;864;49,77;1;1\n23/11/18;05:30;430;864;49,77;2;2\n23/11/18;06:00;430;864;49,77;3;1\n23/11/18;06:30;440;864;50,93;27;11\n23/11/18;07:00;468;864;54,17;33;7\n23/11/18;07:30;480;864;55,56;32;20\n23/11/18;08:00;494;864;57,18;58;17\n23/11/18;08:30;569;864;65,86;89;15\n23/11/18;09:00;609;864;70,49;112;25\n23/11/18;09:30;742;864;85,88;117;26\n23/11/18;10:00;798;864;92,36;74;36\n23/11/18;10:30;819;864;94,79;58;50\n23/11/18;11:00;823;864;95,25;48;49\n23/11/18;11:30;825;864;95,49;64;60\n23/11/18;12:00;825;864;95,49;59;60\n23/11/18;12:30;829;864;95,95;57;52\n23/11/18;13:00;829;864;95,95;64;54\n23/11/18;13:30;840;864;97,22;47;46\n23/11/18;14:00;842;864;97,45;67;65\n23/11/18;14:30;844;864;97,69;73;70\n23/11/18;15:00;840;864;97,22;68;73\n23/11/18;15:30;842;864;97,45;84;90\n23/11/18;16:00;837;864;96,88;76;93\n23/11/18;16:30;798;864;92,36;59;83\n23/11/18;17:00;786;864;90,97;75;103\n23/11/18;17:30;739;864;85,53;56;90\n23/11/18;18:00;719;864;83,22;67;106\n23/11/18;18:30;654;864;75,69;41;101\n23/11/18;19:00;624;864;72,22;36;115\n23/11/18;19:30;538;864;62,27;60;56\n23/11/18;20:00;556;864;64,35;59;41\n23/11/18;20:30;600;864;69,44;51;16\n23/11/18;21:00;614;864;71,06;29;15\n23/11/18;21:30;624;864;72,22;17;14\n23/11/18;22:00;619;864;71,64;10;32\n23/11/18;22:30;591;864;68,40;11;31\n23/11/18;23:00;584;864;67,59;8;35\n23/11/18;23:30;533;864;61,69;11;39\n24/11/18;00:00;520;864;60,19;6;28\n24/11/18;00:30;488;864;56,48;5;22\n24/11/18;01:00;485;864;56,13;3;17\n24/11/18;01:30;468;864;54,17;1;9\n24/11/18;02:00;464;864;53,70;0;4\n24/11/18;02:30;457;864;52,89;0;4\n24/11/18;03:00;457;864;52,89;0;0\n24/11/18;03:30;457;864;52,89;0;1\n24/11/18;04:00;456;864;52,78;1;2\n24/11/18;04:30;455;864;52,66;0;0\n24/11/18;05:00;455;864;52,66;0;1\n24/11/18;05:30;453;864;52,43;1;1\n24/11/18;06:00;454;864;52,55;0;1\n24/11/18;06:30;457;864;52,89;5;0\n24/11/18;07:00;458;864;53,01;7;1\n24/11/18;07:30;465;864;53,82;9;4\n24/11/18;08:00;470;864;54,40;16;1\n24/11/18;08:30;484;864;56,02;15;13\n24/11/18;09:00;496;864;57,41;59;15\n24/11/18;09:30;583;864;67,48;111;16\n24/11/18;10:00;641;864;74,19;115;28\n24/11/18;10:30;775;864;89,70;127;41\n24/11/18;11:00;801;864;92,71;113;57\n24/11/18;11:30;858;864;99,31;61;54\n24/11/18;12:00;859;864;99,42;72;73\n24/11/18;12:30;858;864;99,31;61;59\n24/11/18;13:00;858;864;99,31;61;60\n24/11/18;13:30;856;864;99,07;43;46\n24/11/18;14:00;856;864;99,07;46;44\n24/11/18;14:30;846;864;97,92;42;66\n24/11/18;15:00;822;864;95,14;10;80\n24/11/18;15:30;771;864;89,24;97;74\n24/11/18;16:00;803;864;92,94;123;60\n24/11/18;16:30;851;864;98,50;73;69\n24/11/18;17:00;852;864;98,61;68;71\n24/11/18;17:30;839;864;97,11;81;90\n24/11/18;18:00;837;864;96,88;88;105\n24/11/18;18:30;816;864;94,44;71;100\n24/11/18;19:00;792;864;91,67;58;129\n24/11/18;19:30;685;864;79,28;75;93\n24/11/18;20:00;701;864;81,13;59;40\n24/11/18;20:30;760;864;87,96;82;28\n24/11/18;21:00;775;864;89,70;43;34\n24/11/18;21:30;778;864;90,05;28;37\n24/11/18;22:00;768;864;88,89;11;55\n24/11/18;22:30;708;864;81,94;10;39\n24/11/18;23:00;697;864;80,67;6;55\n24/11/18;23:30;619;864;71,64;5;52\n25/11/18;00:00;602;864;69,68;3;51\n25/11/18;00:30;537;864;62,15;2;37\n25/11/18;01:00;521;864;60,30;4;26\n25/11/18;01:30;493;864;57,06;2;13\n25/11/18;02:00;489;864;56,60;0;10\n25/11/18;02:30;475;864;54,98;1;7\n25/11/18;03:00;476;864;55,09;1;5\n25/11/18;03:30;471;864;54,51;0;0\n25/11/18;04:00;471;864;54,51;0;3\n25/11/18;04:30;467;864;54,05;0;5\n25/11/18;05:00;463;864;53,59;0;0\n25/11/18;05:30;463;864;53,59;1;0\n25/11/18;06:00;464;864;53,70;0;1\n25/11/18;06:30;463;864;53,59;0;3\n25/11/18;07:00;460;864;53,24;0;4\n25/11/18;07:30;455;864;52,66;0;2\n25/11/18;08:00;453;864;52,43;0;3\n25/11/18;08:30;445;864;51,50;0;7\n25/11/18;09:00;440;864;50,93;4;10\n25/11/18;09:30;435;864;50,35;11;13\n25/11/18;10:00;435;864;50,35;23;19\n25/11/18;10:30;469;864;54,28;50;13\n25/11/18;11:00;477;864;55,21;52;38\n25/11/18;11:30;505;864;58,45;48;32\n25/11/18;12:00;504;864;58,33;53;54\n25/11/18;12:30;548;864;63,43;80;17\n25/11/18;13:00;567;864;65,63;38;24\n25/11/18;13:30;582;864;67,36;29;32\n25/11/18;14:00;577;864;66,78;33;31\n25/11/18;14:30;580;864;67,13;46;41\n25/11/18;15:00;584;864;67,59;45;47\n25/11/18;15:30;585;864;67,71;52;52\n25/11/18;16:00;579;864;67,01;49;52\n25/11/18;16:30;582;864;67,36;49;54\n25/11/18;17:00;569;864;65,86;40;68\n25/11/18;17:30;512;864;59,26;33;70\n25/11/18;18:00;507;864;58,68;22;43\n25/11/18;18:30;462;864;53,47;20;52\n25/11/18;19:00;448;864;51,85;9;40\n25/11/18;19:30;426;864;49,31;13;9\n25/11/18;20:00;428;864;49,54;10;9\n25/11/18;20:30;426;864;49,31;6;6\n25/11/18;21:00;428;864;49,54;8;8\n25/11/18;21:30;423;864;48,96;7;11\n25/11/18;22:00;420;864;48,61;1;4\n25/11/18;22:30;419;864;48,50;1;1\n25/11/18;23:00;420;864;48,61;7;3\n25/11/18;23:30;420;864;48,61;0;4\n26/11/18;00:00;419;864;48,50;0;3\n26/11/18;00:30;416;864;48,15;0;0\n26/11/18;01:00;416;864;48,15;0;0\n26/11/18;01:30;416;864;48,15;0;0\n26/11/18;02:00;416;864;48,15;0;0\n26/11/18;02:30;416;864;48,15;0;0\n26/11/18;03:00;416;864;48,15;0;1\n26/11/18;03:30;415;864;48,03;0;0\n26/11/18;04:00;415;864;48,03;0;0\n26/11/18;04:30;414;864;47,92;0;1\n26/11/18;05:00;414;864;47,92;1;2\n26/11/18;05:30;414;864;47,92;3;0\n26/11/18;06:00;417;864;48,26;4;1\n26/11/18;06:30;420;864;48,61;11;8\n26/11/18;07:00;423;864;48,96;22;13\n26/11/18;07:30;436;864;50,46;32;14\n26/11/18;08:00;454;864;52,55;63;16\n26/11/18;08:30;543;864;62,85;92;15\n26/11/18;09:00;592;864;68,52;106;20\n26/11/18;09:30;699;864;80,90;82;21\n26/11/18;10:00;743;864;86,00;87;23\n26/11/18;10:30;816;864;94,44;79;37\n26/11/18;11:00;829;864;95,95;56;59\n26/11/18;11:30;830;864;96,06;70;62\n26/11/18;12:00;837;864;96,88;81;57\n26/11/18;12:30;856;864;99,07;44;44\n26/11/18;13:00;853;864;98,73;45;51\n26/11/18;13:30;849;864;98,26;70;62\n26/11/18;14:00;855;864;98,96;65;56\n26/11/18;14:30;853;864;98,73;70;72\n26/11/18;15:00;861;864;99,65;67;68\n26/11/18;15:30;844;864;97,69;80;93\n26/11/18;16:00;829;864;95,95;59;99\n26/11/18;16:30;773;864;89,47;62;98\n26/11/18;17:00;757;864;87,62;57;96\n26/11/18;17:30;698;864;80,79;55;99\n26/11/18;18:00;681;864;78,82;54;102\n26/11/18;18:30;608;864;70,37;43;80\n26/11/18;19:00;589;864;68,17;36;83\n26/11/18;19:30;532;864;61,57;27;51\n26/11/18;20:00;529;864;61,23;23;33\n26/11/18;20:30;514;864;59,49;13;21\n26/11/18;21:00;512;864;59,26;9;17\n26/11/18;21:30;493;864;57,06;4;17\n26/11/18;22:00;490;864;56,71;6;10\n26/11/18;22:30;471;864;54,51;2;19\n26/11/18;23:00;464;864;53,70;1;13\n26/11/18;23:30;453;864;52,43;0;6\n27/11/18;00:00;450;864;52,08;0;7\n27/11/18;00:30;444;864;51,39;0;5\n27/11/18;01:00;439;864;50,81;1;3\n27/11/18;01:30;437;864;50,58;1;1\n27/11/18;02:00;437;864;50,58;1;0\n27/11/18;02:30;438;864;50,69;0;0\n27/11/18;03:00;438;864;50,69;0;0\n27/11/18;03:30;438;864;50,69;0;0\n27/11/18;04:00;438;864;50,69;0;1\n27/11/18;04:30;437;864;50,58;0;1\n27/11/18;05:00;436;864;50,46;1;0\n27/11/18;05:30;438;864;50,69;2;0\n27/11/18;06:00;442;864;51,16;5;3\n27/11/18;06:30;451;864;52,20;21;9\n27/11/18;07:00;457;864;52,89;31;15\n27/11/18;07:30;476;864;55,09;32;21\n27/11/18;08:00;497;864;57,52;52;27\n27/11/18;08:30;556;864;64,35;91;20\n27/11/18;09:00;596;864;68,98;95;15\n27/11/18;09:30;697;864;80,67;82;23\n27/11/18;10:00;729;864;84,38;105;30\n27/11/18;10:30;826;864;95,60;79;37\n27/11/18;11:00;832;864;96,30;55;52\n27/11/18;11:30;833;864;96,41;54;58\n27/11/18;12:00;831;864;96,18;54;51\n27/11/18;12:30;834;864;96,53;51;50\n27/11/18;13:00;835;864;96,64;33;32\n27/11/18;13:30;837;864;96,88;52;51\n27/11/18;14:00;838;864;96,99;47;49\n27/11/18;14:30;842;864;97,45;59;53\n27/11/18;15:00;840;864;97,22;68;72\n27/11/18;15:30;829;864;95,95;72;73\n27/11/18;16:00;827;864;95,72;48;74\n27/11/18;16:30;786;864;90,97;52;78\n27/11/18;17:00;776;864;89,81;43;72\n27/11/18;17:30;727;864;84,14;60;85\n27/11/18;18:00;717;864;82,99;57;101\n27/11/18;18:30;642;864;74,31;52;113\n27/11/18;19:00;614;864;71,06;68;97\n27/11/18;19:30;591;864;68,40;71;64\n27/11/18;20:00;601;864;69,56;43;31\n27/11/18;20:30;611;864;70,72;32;31\n27/11/18;21:00;601;864;69,56;7;30\n27/11/18;21:30;569;864;65,86;9;29\n27/11/18;22:00;562;864;65,05;4;42\n27/11/18;22:30;509;864;58,91;7;34\n27/11/18;23:00;490;864;56,71;5;33\n27/11/18;23:30;451;864;52,20;3;25\n28/11/18;00:00;449;864;51,97;6;12\n28/11/18;00:30;443;864;51,27;2;7\n28/11/18;01:00;437;864;50,58;0;2\n28/11/18;01:30;437;864;50,58;1;0\n28/11/18;02:00;438;864;50,69;0;0\n28/11/18;02:30;438;864;50,69;0;0\n28/11/18;03:00;438;864;50,69;0;0\n28/11/18;03:30;438;864;50,69;0;0\n28/11/18;04:00;440;864;50,93;2;2\n28/11/18;04:30;437;864;50,58;0;1\n28/11/18;05:00;437;864;50,58;1;2\n28/11/18;05:30;437;864;50,58;3;0\n28/11/18;06:00;439;864;50,81;6;0\n28/11/18;06:30;450;864;52,08;17;9\n28/11/18;07:00;452;864;52,31;29;10\n28/11/18;07:30;488;864;56,48;40;19\n28/11/18;08:00;494;864;57,18;62;28\n28/11/18;08:30;559;864;64,70;72;23\n28/11/18;09:00;580;864;67,13;96;24\n28/11/18;09:30;651;864;75,35;71;31\n28/11/18;10:00;715;864;82,75;102;30\n28/11/18;10:30;798;864;92,36;102;47\n28/11/18;11:00;826;864;95,60;82;47\n28/11/18;11:30;854;864;98,84;77;76\n28/11/18;12:00;846;864;97,92;78;74\n28/11/18;12:30;856;864;99,07;42;42\n28/11/18;13:00;855;864;98,96;46;46\n28/11/18;13:30;854;864;98,84;61;65\n28/11/18;14:00;848;864;98,15;73;71\n28/11/18;14:30;855;864;98,96;65;66\n28/11/18;15:00;856;864;99,07;76;74\n28/11/18;15:30;854;864;98,84;65;73\n28/11/18;16:00;847;864;98,03;66;94\n28/11/18;16:30;805;864;93,17;69;95\n28/11/18;17:00;789;864;91,32;68;107\n28/11/18;17:30;739;864;85,53;65;86\n28/11/18;18:00;732;864;84,72;70;92\n28/11/18;18:30;711;864;82,29;77;82\n28/11/18;19:00;682;864;78,94;54;130\n28/11/18;19:30;646;864;74,77;91;75\n28/11/18;20:00;654;864;75,69;54;29\n28/11/18;20:30;670;864;77,55;28;34\n28/11/18;21:00;665;864;76,97;16;28\n28/11/18;21:30;637;864;73,73;8;39\n28/11/18;22:00;616;864;71,30;2;35\n28/11/18;22:30;570;864;65,97;10;32\n28/11/18;23:00;562;864;65,05;4;39\n28/11/18;23:30;504;864;58,33;2;32\n29/11/18;00:00;493;864;57,06;4;21\n29/11/18;00:30;477;864;55,21;0;8\n29/11/18;01:00;469;864;54,28;0;8\n29/11/18;01:30;467;864;54,05;0;1\n29/11/18;02:00;467;864;54,05;0;1\n29/11/18;02:30;466;864;53,94;0;0\n29/11/18;03:00;466;864;53,94;0;1\n29/11/18;03:30;465;864;53,82;0;0\n29/11/18;04:00;465;864;53,82;0;0\n29/11/18;04:30;467;864;54,05;2;0\n29/11/18;05:00;468;864;54,17;1;0\n29/11/18;05:30;469;864;54,28;1;0\n29/11/18;06:00;473;864;54,75;11;2\n29/11/18;06:30;483;864;55,90;15;1\n29/11/18;07:00;494;864;57,18;22;14\n29/11/18;07:30;505;864;58,45;34;22\n29/11/18;08:00;515;864;59,61;58;29\n29/11/18;08:30;587;864;67,94;84;22\n29/11/18;09:00;627;864;72,57;110;33\n29/11/18;09:30;732;864;84,72;101;31\n29/11/18;10:00;774;864;89,58;108;26\n29/11/18;10:30;859;864;99,42;80;52\n29/11/18;11:00;859;864;99,42;52;48\n29/11/18;11:30;860;864;99,54;57;57\n29/11/18;12:00;862;864;99,77;53;54\n29/11/18;12:30;867;864;100,35;36;35\n29/11/18;13:00;865;864;100,12;28;29\n29/11/18;13:30;864;864;100,00;62;63\n29/11/18;14:00;863;864;99,88;48;48\n29/11/18;14:30;861;864;99,65;75;73\n29/11/18;15:00;861;864;99,65;55;54\n29/11/18;15:30;852;864;98,61;71;79\n29/11/18;16:00;856;864;99,07;64;81\n29/11/18;16:30;831;864;96,18;73;78\n29/11/18;17:00;823;864;95,25;53;95\n29/11/18;17:30;781;864;90,39;65;76\n29/11/18;18:00;776;864;89,81;72;101\n29/11/18;18:30;719;864;83,22;60;105\n29/11/18;19:00;693;864;80,21;67;114\n29/11/18;19:30;650;864;75,23;77;71\n29/11/18;20:00;669;864;77,43;70;40\n29/11/18;20:30;700;864;81,02;48;35\n29/11/18;21:00;700;864;81,02;23;36\n29/11/18;21:30;692;864;80,09;18;25\n29/11/18;22:00;676;864;78,24;6;57\n29/11/18;22:30;594;864;68,75;7;61\n29/11/18;23:00;564;864;65,28;8;56\n29/11/18;23:30;505;864;58,45;2;37\n30/11/18;00:00;496;864;57,41;4;22\n30/11/18;00:30;471;864;54,51;1;11\n30/11/18;01:00;467;864;54,05;0;4\n30/11/18;01:30;459;864;53,13;1;6\n30/11/18;02:00;458;864;53,01;0;1\n30/11/18;02:30;457;864;52,89;0;0\n30/11/18;03:00;457;864;52,89;1;2\n30/11/18;03:30;456;864;52,78;0;0\n30/11/18;04:00;456;864;52,78;0;2\n30/11/18;04:30;453;864;52,43;0;2\n30/11/18;05:00;451;864;52,20;1;3\n30/11/18;05:30;449;864;51,97;4;0\n30/11/18;06:00;453;864;52,43;2;5\n30/11/18;06:30;458;864;53,01;20;6\n30/11/18;07:00;481;864;55,67;29;8\n30/11/18;07:30;484;864;56,02;30;23\n30/11/18;08:00;505;864;58,45;48;29\n30/11/18;08:30;527;864;61,00;93;16\n30/11/18;09:00;648;864;75,00;99;17\n30/11/18;09:30;718;864;83,10;103;33\n30/11/18;10:00;799;864;92,48;117;38\n30/11/18;10:30;855;864;98,96;93;51\n30/11/18;11:00;855;864;98,96;53;47\n30/11/18;11:30;860;864;99,54;77;78\n30/11/18;12:00;864;864;100,00;63;59\n30/11/18;12:30;869;864;100,58;44;45\n30/11/18;13:00;866;864;100,23;50;48\n30/11/18;13:30;863;864;99,88;72;72\n30/11/18;14:00;866;864;100,23;67;70\n30/11/18;14:30;863;864;99,88;69;68\n30/11/18;15:00;865;864;100,12;89;93\n30/11/18;15:30;853;864;98,73;79;94\n30/11/18;16:00;831;864;96,18;56;89\n30/11/18;16:30;782;864;90,51;57;98\n30/11/18;17:00;740;864;85,65;68;98\n30/11/18;17:30;722;864;83,56;68;81\n30/11/18;18:00;714;864;82,64;74;96\n30/11/18;18:30;688;864;79,63;68;82\n30/11/18;19:00;675;864;78,13;60;101\n30/11/18;19:30;645;864;74,65;67;66\n30/11/18;20:00;662;864;76,62;93;32\n30/11/18;20:30;730;864;84,49;56;29\n30/11/18;21:00;734;864;84,95;28;29\n30/11/18;21:30;733;864;84,84;25;35\n30/11/18;22:00;717;864;82,99;11;35\n30/11/18;22:30;675;864;78,13;8;38\n30/11/18;23:00;660;864;76,39;9;50\n30/11/18;23:30;599;864;69,33;5;46\n01/12/18;00:00;585;864;67,71;8;44\n01/12/18;00:30;533;864;61,69;4;27\n01/12/18;01:00;521;864;60,30;3;18\n01/12/18;01:30;506;864;58,56;1;9\n01/12/18;02:00;505;864;58,45;0;9\n01/12/18;02:30;495;864;57,29;0;2\n01/12/18;03:00;494;864;57,18;0;3\n01/12/18;03:30;491;864;56,83;0;1\n01/12/18;04:00;489;864;56,60;0;3\n01/12/18;04:30;488;864;56,48;1;1\n01/12/18;05:00;487;864;56,37;0;1\n01/12/18;05:30;487;864;56,37;0;0\n01/12/18;06:00;487;864;56,37;3;1\n01/12/18;06:30;490;864;56,71;2;2\n01/12/18;07:00;491;864;56,83;3;2\n01/12/18;07:30;487;864;56,37;4;8\n01/12/18;08:00;486;864;56,25;11;10\n01/12/18;08:30;502;864;58,10;30;7\n01/12/18;09:00;520;864;60,19;59;11\n01/12/18;09:30;625;864;72,34;116;23\n01/12/18;10:00;674;864;78,01;119;18\n01/12/18;10:30;808;864;93,52;112;44\n01/12/18;11:00;852;864;98,61;96;52\n01/12/18;11:30;868;864;100,46;89;81\n01/12/18;12:00;867;864;100,35;81;82\n01/12/18;12:30;867;864;100,35;66;66\n01/12/18;13:00;868;864;100,46;63;59\n01/12/18;13:30;872;864;100,93;44;48\n01/12/18;14:00;866;864;100,23;37;35\n01/12/18;14:30;868;864;100,46;69;68\n01/12/18;15:00;871;864;100,81;60;57\n01/12/18;15:30;868;864;100,46;69;69\n01/12/18;16:00;872;864;100,93;81;78\n01/12/18;16:30;873;864;101,04;75;80\n01/12/18;17:00;873;864;101,04;92;101\n01/12/18;17:30;865;864;100,12;107;96\n01/12/18;18:00;871;864;100,81;71;85\n01/12/18;18:30;810;864;93,75;52;102\n01/12/18;19:00;791;864;91,55;65;124\n01/12/18;19:30;737;864;85,30;78;89\n01/12/18;20:00;738;864;85,42;57;33\n01/12/18;20:30;787;864;91,09;76;36\n01/12/18;21:00;805;864;93,17;53;37\n01/12/18;21:30;829;864;95,95;40;37\n01/12/18;22:00;813;864;94,10;23;61\n01/12/18;22:30;760;864;87,96;18;50\n01/12/18;23:00;737;864;85,30;10;50\n01/12/18;23:30;662;864;76,62;7;66\n02/12/18;00:00;637;864;73,73;4;64\n02/12/18;00:30;558;864;64,58;2;38\n02/12/18;01:00;541;864;62,62;1;42\n02/12/18;01:30;507;864;58,68;2;12\n02/12/18;02:00;503;864;58,22;3;8\n02/12/18;02:30;493;864;57,06;0;5\n02/12/18;03:00;490;864;56,71;1;6\n02/12/18;03:30;488;864;56,48;0;2\n02/12/18;04:00;486;864;56,25;0;1\n02/12/18;04:30;481;864;55,67;0;4\n02/12/18;05:00;481;864;55,67;0;0\n02/12/18;05:30;483;864;55,90;2;0\n02/12/18;06:00;482;864;55,79;0;1\n02/12/18;06:30;480;864;55,56;0;3\n02/12/18;07:00;477;864;55,21;0;4\n02/12/18;07:30;471;864;54,51;0;5\n02/12/18;08:00;469;864;54,28;1;9\n02/12/18;08:30;458;864;53,01;2;5\n02/12/18;09:00;457;864;52,89;1;10\n02/12/18;09:30;446;864;51,62;13;13\n02/12/18;10:00;454;864;52,55;42;12\n02/12/18;10:30;517;864;59,84;67;22\n02/12/18;11:00;532;864;61,57;49;31\n02/12/18;11:30;557;864;64,47;53;39\n02/12/18;12:00;567;864;65,63;66;32\n02/12/18;12:30;607;864;70,25;66;39\n02/12/18;13:00;616;864;71,30;48;34\n02/12/18;13:30;629;864;72,80;52;43\n02/12/18;14:00;646;864;74,77;40;30\n02/12/18;14:30;648;864;75,00;68;64\n02/12/18;15:00;651;864;75,35;62;68\n02/12/18;15:30;642;864;74,31;59;62\n02/12/18;16:00;642;864;74,31;63;70\n02/12/18;16:30;623;864;72,11;49;62\n02/12/18;17:00;621;864;71,88;44;83\n02/12/18;17:30;520;864;60,19;22;93\n02/12/18;18:00;492;864;56,94;27;51\n02/12/18;18:30;471;864;54,51;28;35\n02/12/18;19:00;473;864;54,75;24;24\n02/12/18;19:30;481;864;55,67;22;12\n02/12/18;20:00;485;864;56,13;10;8\n02/12/18;20:30;486;864;56,25;8;9\n02/12/18;21:00;490;864;56,71;10;9\n02/12/18;21:30;473;864;54,75;4;20\n02/12/18;22:00;464;864;53,70;2;18\n02/12/18;22:30;452;864;52,31;1;5\n02/12/18;23:00;451;864;52,20;3;8\n02/12/18;23:30;444;864;51,39;3;9\n03/12/18;00:00;440;864;50,93;3;2\n03/12/18;00:30;442;864;51,16;1;1\n03/12/18;01:00;441;864;51,04;0;0\n03/12/18;01:30;442;864;51,16;1;0\n03/12/18;02:00;442;864;51,16;0;0\n03/12/18;02:30;442;864;51,16;0;0\n03/12/18;03:00;442;864;51,16;0;0\n03/12/18;03:30;442;864;51,16;0;0\n03/12/18;04:00;442;864;51,16;0;0\n03/12/18;04:30;442;864;51,16;0;0\n03/12/18;05:00;442;864;51,16;1;2\n03/12/18;05:30;443;864;51,27;5;1\n03/12/18;06:00;446;864;51,62;2;2\n03/12/18;06:30;446;864;51,62;11;7\n03/12/18;07:00;448;864;51,85;23;11\n03/12/18;07:30;470;864;54,40;30;11\n03/12/18;08:00;485;864;56,13;45;23\n03/12/18;08:30;557;864;64,47;89;21\n03/12/18;09:00;595;864;68,87;108;19\n03/12/18;09:30;696;864;80,56;98;20\n03/12/18;10:00;782;864;90,51;92;26\n03/12/18;10:30;835;864;96,64;79;30\n03/12/18;11:00;855;864;98,96;49;37\n03/12/18;11:30;854;864;98,84;63;62\n03/12/18;12:00;859;864;99,42;59;60\n03/12/18;12:30;857;864;99,19;32;35\n03/12/18;13:00;857;864;99,19;44;46\n03/12/18;13:30;879;864;101,74;66;44\n03/12/18;14:00;874;864;101,16;59;61\n03/12/18;14:30;868;864;100,46;50;52\n03/12/18;15:00;867;864;100,35;61;61\n03/12/18;15:30;854;864;98,84;59;72\n03/12/18;16:00;853;864;98,73;69;76\n03/12/18;16:30;835;864;96,64;55;78\n03/12/18;17:00;816;864;94,44;58;90\n03/12/18;17:30;752;864;87,04;51;107\n03/12/18;18:00;727;864;84,14;54;97\n03/12/18;18:30;657;864;76,04;40;95\n03/12/18;19:00;629;864;72,80;43;90\n03/12/18;19:30;573;864;66,32;38;56\n03/12/18;20:00;570;864;65,97;26;24\n03/12/18;20:30;571;864;66,09;18;20\n03/12/18;21:00;566;864;65,51;9;12\n03/12/18;21:30;563;864;65,16;5;15\n03/12/18;22:00;558;864;64,58;4;27\n03/12/18;22:30;535;864;61,92;2;18\n03/12/18;23:00;518;864;59,95;3;14\n03/12/18;23:30;493;864;57,06;0;21\n04/12/18;00:00;486;864;56,25;0;9\n04/12/18;00:30;477;864;55,21;0;2\n04/12/18;01:00;476;864;55,09;0;0\n04/12/18;01:30;476;864;55,09;0;0\n04/12/18;02:00;476;864;55,09;0;0\n04/12/18;02:30;476;864;55,09;0;1\n04/12/18;03:00;475;864;54,98;0;0\n04/12/18;03:30;475;864;54,98;0;0\n04/12/18;04:00;475;864;54,98;0;0\n04/12/18;04:30;475;864;54,98;0;0\n04/12/18;05:00;475;864;54,98;0;0\n04/12/18;05:30;474;864;54,86;6;2\n04/12/18;06:00;479;864;55,44;5;1\n04/12/18;06:30;491;864;56,83;18;7\n04/12/18;07:00;493;864;57,06;25;14\n04/12/18;07:30;511;864;59,14;39;22\n04/12/18;08:00;523;864;60,53;51;26\n04/12/18;08:30;573;864;66,32;74;19\n04/12/18;09:00;615;864;71,18;103;26\n04/12/18;09:30;738;864;85,42;109;23\n04/12/18;10:00;776;864;89,81;122;22\n04/12/18;10:30;871;864;100,81;93;55\n04/12/18;11:00;906;864;104,86;68;66\n04/12/18;11:30;906;864;104,86;49;50\n04/12/18;12:00;899;864;104,05;66;66\n04/12/18;12:30;905;864;104,75;44;44\n04/12/18;13:00;905;864;104,75;37;38\n04/12/18;13:30;906;864;104,86;57;56\n04/12/18;14:00;903;864;104,51;102;65\n04/12/18;14:30;814;864;94,21;49;70\n04/12/18;15:00;921;864;106,60;77;60\n04/12/18;15:30;956;864;110,65;78;65\n04/12/18;16:00;952;864;110,19;66;74\n04/12/18;16:30;935;864;108,22;58;78\n04/12/18;17:00;921;864;106,60;60;70\n04/12/18;17:30;903;864;104,51;57;99\n04/12/18;18:00;861;864;99,65;62;105\n04/12/18;18:30;791;864;91,55;58;91\n04/12/18;19:00;789;864;91,32;58;116\n04/12/18;19:30;720;864;83,33;59;59\n04/12/18;20:00;734;864;84,95;46;40\n04/12/18;20:30;735;864;85,07;22;33\n04/12/18;21:00;713;864;82,52;5;34\n04/12/18;21:30;694;864;80,32;0;36\n04/12/18;22:00;658;864;76,16;5;37\n04/12/18;22:30;617;864;71,41;8;30\n04/12/18;23:00;606;864;70,14;3;26\n04/12/18;23:30;574;864;66,44;3;17\n05/12/18;00:00;570;864;65,97;1;10\n05/12/18;00:30;560;864;64,81;3;9\n05/12/18;01:00;556;864;64,35;1;2\n05/12/18;01:30;555;864;64,24;0;0\n05/12/18;02:00;555;864;64,24;0;2\n05/12/18;02:30;553;864;64,00;0;0\n05/12/18;03:00;553;864;64,00;0;0\n05/12/18;03:30;553;864;64,00;0;0\n05/12/18;04:00;553;864;64,00;0;0\n05/12/18;04:30;553;864;64,00;1;0\n05/12/18;05:00;554;864;64,12;0;0\n05/12/18;05:30;555;864;64,24;5;0\n05/12/18;06:00;559;864;64,70;5;1\n05/12/18;06:30;565;864;65,39;9;9\n05/12/18;07:00;563;864;65,16;27;13\n05/12/18;07:30;588;864;68,06;33;15\n05/12/18;08:00;594;864;68,75;42;24\n05/12/18;08:30;661;864;76,50;84;23\n05/12/18;09:00;676;864;78,24;121;20\n05/12/18;09:30;802;864;92,82;103;30\n05/12/18;10:00;848;864;98,15;117;39\n05/12/18;10:30;951;864;110,07;83;44\n05/12/18;11:00;964;864;111,57;70;72\n05/12/18;11:30;964;864;111,57;54;54\n05/12/18;12:00;961;864;111,23;61;65\n05/12/18;12:30;963;864;111,46;52;45\n05/12/18;13:00;964;864;111,57;41;42\n05/12/18;13:30;964;864;111,57;63;63\n05/12/18;14:00;961;864;111,23;46;50\n05/12/18;14:30;959;864;111,00;57;58\n05/12/18;15:00;956;864;110,65;70;69\n05/12/18;15:30;965;864;111,69;69;66\n05/12/18;16:00;960;864;111,11;85;81\n05/12/18;16:30;935;864;108,22;68;103\n05/12/18;17:00;919;864;106,37;70;112\n05/12/18;17:30;876;864;101,39;74;87\n05/12/18;18:00;837;864;96,88;72;112\n05/12/18;18:30;805;864;93,17;68;95\n05/12/18;19:00;801;864;92,71;85;98\n05/12/18;19:30;779;864;90,16;59;73\n05/12/18;20:00;795;864;92,01;52;26\n05/12/18;20:30;801;864;92,71;30;32\n05/12/18;21:00;775;864;89,70;18;45\n05/12/18;21:30;745;864;86,23;5;38\n05/12/18;22:00;721;864;83,45;6;39\n05/12/18;22:30;654;864;75,69;3;58\n05/12/18;23:00;641;864;74,19;3;40\n05/12/18;23:30;590;864;68,29;5;35\n06/12/18;00:00;579;864;67,01;0;12\n06/12/18;00:30;573;864;66,32;1;2\n06/12/18;01:00;570;864;65,97;0;4\n06/12/18;01:30;567;864;65,63;0;2\n06/12/18;02:00;567;864;65,63;0;0\n06/12/18;02:30;567;864;65,63;0;0\n06/12/18;03:00;567;864;65,63;0;0\n06/12/18;03:30;567;864;65,63;0;0\n06/12/18;04:00;566;864;65,51;0;2\n06/12/18;04:30;565;864;65,39;0;0\n06/12/18;05:00;564;864;65,28;0;3\n06/12/18;05:30;565;864;65,39;3;0\n06/12/18;06:00;566;864;65,51;6;2\n06/12/18;06:30;570;864;65,97;15;7\n06/12/18;07:00;581;864;67,25;19;13\n06/12/18;07:30;600;864;69,44;36;15\n06/12/18;08:00;613;864;70,95;59;32\n06/12/18;08:30;699;864;80,90;87;21\n06/12/18;09:00;699;864;80,90;92;22\n06/12/18;09:30;866;864;100,23;127;23\n06/12/18;10:00;921;864;106,60;106;27\n06/12/18;10:30;963;864;111,46;61;54\n06/12/18;11:00;960;864;111,11;49;48\n06/12/18;11:30;958;864;110,88;54;62\n06/12/18;12:00;954;864;110,42;27;44\n06/12/18;12:30;971;864;112,38;72;48\n06/12/18;13:00;969;864;112,15;37;37\n06/12/18;13:30;972;864;112,50;53;55\n06/12/18;14:00;975;864;112,85;66;59\n06/12/18;14:30;977;864;113,08;69;68\n06/12/18;15:00;977;864;113,08;56;64\n06/12/18;15:30;976;864;112,96;68;60\n06/12/18;16:00;974;864;112,73;68;69\n06/12/18;16:30;957;864;110,76;57;72\n06/12/18;17:00;939;864;108,68;45;76\n06/12/18;17:30;927;864;107,29;69;66\n06/12/18;18:00;916;864;106,02;10;63\n06/12/18;18:30;821;864;95,02;1;60\n06/12/18;19:00;804;864;93,06;0;58\n06/12/18;19:30;710;864;82,18;0;47\n06/12/18;20:00;697;864;80,67;0;26\n06/12/18;20:30;662;864;76,62;0;21\n06/12/18;21:00;657;864;76,04;0;14\n06/12/18;21:30;636;864;73,61;0;13\n06/12/18;22:00;634;864;73,38;0;21\n06/12/18;22:30;603;864;69,79;0;11\n06/12/18;23:00;592;864;68,52;0;26\n06/12/18;23:30;559;864;64,70;4;21\n07/12/18;00:00;556;864;64,35;3;10\n07/12/18;00:30;550;864;63,66;3;6\n07/12/18;01:00;547;864;63,31;0;4\n07/12/18;01:30;545;864;63,08;0;2\n07/12/18;02:00;541;864;62,62;1;53\n07/12/18;02:30;470;864;54,40;0;28\n07/12/18;03:00;470;864;54,40;0;2\n07/12/18;03:30;333;864;38,54;0;0\n07/12/18;04:00;333;864;38,54;1;0\n07/12/18;04:30;333;864;38,54;0;2\n07/12/18;05:00;332;864;38,43;2;2\n07/12/18;05:30;332;864;38,43;2;1\n07/12/18;06:00;334;864;38,66;2;1\n07/12/18;06:30;339;864;39,24;9;3\n07/12/18;07:00;348;864;40,28;28;8\n07/12/18;07:30;384;864;44,44;36;11\n07/12/18;08:00;408;864;47,22;55;10\n07/12/18;08:30;503;864;58,22;83;10\n07/12/18;09:00;512;864;59,26;99;10\n07/12/18;09:30;682;864;78,94;108;12\n07/12/18;10:00;696;864;80,56;110;35\n07/12/18;10:30;766;864;88,66;47;45\n07/12/18;11:00;767;864;88,77;36;38\n07/12/18;11:30;766;864;88,66;64;62\n07/12/18;12:00;760;864;87,96;49;49\n07/12/18;12:30;764;864;88,43;59;59\n07/12/18;13:00;765;864;88,54;50;51\n07/12/18;13:30;764;864;88,43;60;59\n07/12/18;14:00;766;864;88,66;65;59\n07/12/18;14:30;771;864;89,24;68;67\n07/12/18;15:00;770;864;89,12;62;64\n07/12/18;15:30;765;864;88,54;65;71\n07/12/18;16:00;745;864;86,23;52;76\n07/12/18;16:30;699;864;80,90;51;93\n07/12/18;17:00;683;864;79,05;48;89\n07/12/18;17:30;638;864;73,84;42;60\n07/12/18;18:00;631;864;73,03;46;58\n07/12/18;18:30;619;864;71,64;40;44\n07/12/18;19:00;603;864;69,79;0;43\n07/12/18;19:30;526;864;60,88;0;49\n07/12/18;20:00;520;864;60,19;0;20\n07/12/18;20:30;488;864;56,48;0;19\n07/12/18;21:00;478;864;55,32;0;36\n07/12/18;21:30;454;864;52,55;0;19\n07/12/18;22:00;445;864;51,50;0;25\n07/12/18;22:30;414;864;47,92;0;15\n07/12/18;23:00;404;864;46,76;0;26\n07/12/18;23:30;369;864;42,71;0;20\n08/12/18;00:00;365;864;42,25;0;17\n08/12/18;00:30;346;864;40,05;0;5\n08/12/18;01:00;344;864;39,81;8;11\n08/12/18;01:30;340;864;39,35;1;5\n08/12/18;02:00;339;864;39,24;1;2\n08/12/18;02:30;337;864;39,00;0;1\n08/12/18;03:00;337;864;39,00;0;0\n08/12/18;03:30;331;864;38,31;0;0\n08/12/18;04:00;331;864;38,31;1;1\n08/12/18;04:30;331;864;38,31;0;0\n08/12/18;05:00;331;864;38,31;0;0\n08/12/18;05:30;332;864;38,43;1;0\n08/12/18;06:00;332;864;38,43;0;0\n08/12/18;06:30;334;864;38,66;2;0\n08/12/18;07:00;334;864;38,66;4;3\n08/12/18;07:30;343;864;39,70;11;2\n08/12/18;08:00;343;864;39,70;5;3\n08/12/18;08:30;365;864;42,25;30;11\n08/12/18;09:00;381;864;44,10;55;7\n08/12/18;09:30;475;864;54,98;76;8\n08/12/18;10:00;496;864;57,41;93;25\n08/12/18;10:30;596;864;68,98;85;33\n08/12/18;11:00;622;864;71,99;83;50\n08/12/18;11:30;655;864;75,81;87;60\n08/12/18;12:00;665;864;76,97;64;53\n08/12/18;12:30;656;864;75,93;53;67\n08/12/18;13:00;655;864;75,81;49;61\n08/12/18;13:30;660;864;76,39;60;43\n08/12/18;14:00;660;864;76,39;54;39\n08/12/18;14:30;683;864;79,05;55;47\n08/12/18;15:00;702;864;81,25;69;46\n08/12/18;15:30;692;864;80,09;44;54\n08/12/18;16:00;705;864;81,60;59;65\n08/12/18;16:30;662;864;76,62;43;73\n08/12/18;17:00;662;864;76,62;65;50\n08/12/18;17:30;686;864;79,40;66;53\n08/12/18;18:00;690;864;79,86;64;48\n08/12/18;18:30;711;864;82,29;31;23\n08/12/18;19:00;687;864;79,51;0;47\n08/12/18;19:30;635;864;73,50;0;25\n08/12/18;20:00;629;864;72,80;0;10\n08/12/18;20:30;601;864;69,56;0;23\n08/12/18;21:00;594;864;68,75;0;20\n08/12/18;21:30;553;864;64,00;0;27\n08/12/18;22:00;552;864;63,89;0;35\n08/12/18;22:30;488;864;56,48;0;31\n08/12/18;23:00;479;864;55,44;0;30\n08/12/18;23:30;431;864;49,88;0;28\n09/12/18;00:00;411;864;47,57;0;34\n09/12/18;00:30;377;864;43,63;2;20\n09/12/18;01:00;370;864;42,82;2;6\n09/12/18;01:30;363;864;42,01;0;8\n09/12/18;02:00;362;864;41,90;1;4\n09/12/18;02:30;357;864;41,32;1;4\n09/12/18;03:00;357;864;41,32;0;0\n09/12/18;03:30;356;864;41,20;0;3\n09/12/18;04:00;354;864;40,97;0;0\n09/12/18;04:30;353;864;40,86;0;1\n09/12/18;05:00;353;864;40,86;0;0\n09/12/18;05:30;353;864;40,86;2;1\n09/12/18;06:00;354;864;40,97;0;1\n09/12/18;06:30;353;864;40,86;0;0\n09/12/18;07:00;353;864;40,86;1;2\n09/12/18;07:30;349;864;40,39;0;3\n09/12/18;08:00;347;864;40,16;0;2\n09/12/18;08:30;345;864;39,93;3;5\n09/12/18;09:00;342;864;39,58;8;7\n09/12/18;09:30;358;864;41,44;24;10\n09/12/18;10:00;364;864;42,13;69;15\n09/12/18;10:30;469;864;54,28;72;15\n09/12/18;11:00;492;864;56,94;77;33\n09/12/18;11:30;572;864;66,20;102;39\n09/12/18;12:00;589;864;68,17;79;47\n09/12/18;12:30;635;864;73,50;92;62\n09/12/18;13:00;656;864;75,93;76;49\n09/12/18;13:30;681;864;78,82;71;52\n09/12/18;14:00;699;864;80,90;84;53\n09/12/18;14:30;753;864;87,15;98;56\n09/12/18;15:00;763;864;88,31;91;92\n09/12/18;15:30;727;864;84,14;75;101\n09/12/18;16:00;731;864;84,61;94;93\n09/12/18;16:30;720;864;83,33;93;101\n09/12/18;17:00;703;864;81,37;80;87\n09/12/18;17:30;701;864;81,13;78;88\n09/12/18;18:00;662;864;76,62;0;74\n09/12/18;18:30;584;864;67,59;0;43\n09/12/18;19:00;555;864;64,24;0;54\n09/12/18;19:30;485;864;56,13;0;44\n09/12/18;20:00;476;864;55,09;0;28\n09/12/18;20:30;424;864;49,07;0;36\n09/12/18;21:00;414;864;47,92;0;15\n09/12/18;21:30;383;864;44,33;0;25\n09/12/18;22:00;363;864;42,01;0;18\n09/12/18;22:30;350;864;40,51;0;13\n09/12/18;23:00;349;864;40,39;0;17\n09/12/18;23:30;334;864;38,66;8;7\n10/12/18;00:00;334;864;38,66;4;4\n10/12/18;00:30;334;864;38,66;1;1\n10/12/18;01:00;333;864;38,54;0;1\n10/12/18;01:30;333;864;38,54;0;0\n10/12/18;02:00;333;864;38,54;0;0\n10/12/18;02:30;332;864;38,43;0;1\n10/12/18;03:00;332;864;38,43;0;0\n10/12/18;03:30;332;864;38,43;0;0\n10/12/18;04:00;332;864;38,43;0;0\n10/12/18;04:30;331;864;38,31;0;1\n10/12/18;05:00;331;864;38,31;1;1\n10/12/18;05:30;331;864;38,31;2;1\n10/12/18;06:00;332;864;38,43;1;2\n10/12/18;06:30;331;864;38,31;9;7\n10/12/18;07:00;335;864;38,77;20;12\n10/12/18;07:30;350;864;40,51;39;9\n10/12/18;08:00;410;864;47,45;58;19\n10/12/18;08:30;471;864;54,51;71;7\n10/12/18;09:00;523;864;60,53;103;17\n10/12/18;09:30;640;864;74,07;100;14\n10/12/18;10:00;675;864;78,13;75;26\n10/12/18;10:30;695;864;80,44;41;39\n10/12/18;11:00;694;864;80,32;42;42\n10/12/18;11:30;695;864;80,44;34;32\n10/12/18;12:00;710;864;82,18;96;47\n10/12/18;12:30;770;864;89,12;68;44\n10/12/18;13:00;770;864;89,12;54;40\n10/12/18;13:30;788;864;91,20;65;62\n10/12/18;14:00;789;864;91,32;53;52\n10/12/18;14:30;786;864;90,97;68;71\n10/12/18;15:00;786;864;90,97;62;68\n10/12/18;15:30;785;864;90,86;82;78\n10/12/18;16:00;770;864;89,12;68;86\n10/12/18;16:30;750;864;86,81;80;92\n10/12/18;17:00;739;864;85,53;61;89\n10/12/18;17:30;687;864;79,51;71;103\n10/12/18;18:00;673;864;77,89;49;122\n10/12/18;18:30;546;864;63,19;40;109\n10/12/18;19:00;502;864;58,10;31;110\n10/12/18;19:30;439;864;50,81;29;60\n10/12/18;20:00;428;864;49,54;18;33\n10/12/18;20:30;417;864;48,26;14;18\n10/12/18;21:00;414;864;47,92;4;7\n10/12/18;21:30;397;864;45,95;2;20\n10/12/18;22:00;389;864;45,02;4;21\n10/12/18;22:30;368;864;42,59;5;16\n10/12/18;23:00;365;864;42,25;2;7\n10/12/18;23:30;359;864;41,55;2;7\n11/12/18;00:00;353;864;40,86;0;6\n11/12/18;00:30;352;864;40,74;0;0\n11/12/18;01:00;352;864;40,74;0;0\n11/12/18;01:30;352;864;40,74;0;0\n11/12/18;02:00;353;864;40,86;1;0\n11/12/18;02:30;353;864;40,86;0;0\n11/12/18;03:00;353;864;40,86;0;0\n11/12/18;03:30;353;864;40,86;0;0\n11/12/18;04:00;353;864;40,86;0;0\n11/12/18;04:30;352;864;40,74;1;1\n11/12/18;05:00;354;864;40,97;1;1\n11/12/18;05:30;354;864;40,97;1;0\n11/12/18;06:00;354;864;40,97;3;0\n11/12/18;06:30;368;864;42,59;15;4\n11/12/18;07:00;374;864;43,29;21;7\n11/12/18;07:30;386;864;44,68;24;14\n11/12/18;08:00;467;864;54,05;65;22\n11/12/18;08:30;520;864;60,19;100;12\n11/12/18;09:00;549;864;63,54;101;28\n11/12/18;09:30;698;864;80,79;127;21\n11/12/18;10:00;710;864;82,18;95;26\n11/12/18;10:30;767;864;88,77;46;51\n11/12/18;11:00;766;864;88,66;72;51\n11/12/18;11:30;780;864;90,28;60;60\n11/12/18;12:00;779;864;90,16;55;54\n11/12/18;12:30;778;864;90,05;35;38\n11/12/18;13:00;778;864;90,05;50;51\n11/12/18;13:30;778;864;90,05;63;62\n11/12/18;14:00;778;864;90,05;53;54\n11/12/18;14:30;778;864;90,05;61;59\n11/12/18;15:00;776;864;89,81;57;61\n11/12/18;15:30;775;864;89,70;60;59\n11/12/18;16:00;771;864;89,24;69;81\n11/12/18;16:30;747;864;86,46;60;74\n11/12/18;17:00;727;864;84,14;72;93\n11/12/18;17:30;681;864;78,82;65;109\n11/12/18;18:00;668;864;77,31;62;100\n11/12/18;18:30;592;864;68,52;66;117\n11/12/18;19:00;587;864;67,94;62;129\n11/12/18;19:30;531;864;61,46;71;63\n11/12/18;20:00;542;864;62,73;40;30\n11/12/18;20:30;540;864;62,50;21;26\n11/12/18;21:00;540;864;62,50;14;28\n11/12/18;21:30;494;864;57,18;3;34\n11/12/18;22:00;491;864;56,83;4;27\n11/12/18;22:30;440;864;50,93;6;39\n11/12/18;23:00;436;864;50,46;5;43\n11/12/18;23:30;382;864;44,21;0;18\n12/12/18;00:00;377;864;43,63;0;9\n12/12/18;00:30;369;864;42,71;0;4\n12/12/18;01:00;367;864;42,48;1;4\n12/12/18;01:30;361;864;41,78;0;4\n12/12/18;02:00;361;864;41,78;0;1\n12/12/18;02:30;361;864;41,78;1;0\n12/12/18;03:00;361;864;41,78;0;0\n12/12/18;03:30;361;864;41,78;0;0\n12/12/18;04:00;361;864;41,78;0;0\n12/12/18;04:30;360;864;41,67;0;1\n12/12/18;05:00;360;864;41,67;0;0\n12/12/18;05:30;365;864;42,25;7;1\n12/12/18;06:00;366;864;42,36;4;2\n12/12/18;06:30;370;864;42,82;9;7\n12/12/18;07:00;373;864;43,17;18;11\n12/12/18;07:30;396;864;45,83;36;17\n12/12/18;08:00;408;864;47,22;51;31\n12/12/18;08:30;422;864;48,84;94;20\n12/12/18;09:00;531;864;61,46;98;13\n12/12/18;09:30;663;864;76,74;103;18\n12/12/18;10:00;681;864;78,82;129;47\n12/12/18;10:30;774;864;89,58;86;59\n12/12/18;11:00;777;864;89,93;64;52\n12/12/18;11:30;789;864;91,32;75;73\n12/12/18;12:00;785;864;90,86;72;70\n12/12/18;12:30;788;864;91,20;60;59\n12/12/18;13:00;790;864;91,44;54;51\n12/12/18;13:30;790;864;91,44;64;65\n12/12/18;14:00;788;864;91,20;70;72\n12/12/18;14:30;788;864;91,20;84;84\n12/12/18;15:00;787;864;91,09;67;64\n12/12/18;15:30;791;864;91,55;61;61\n12/12/18;16:00;789;864;91,32;83;93\n12/12/18;16:30;765;864;88,54;90;95\n12/12/18;17:00;764;864;88,43;74;99\n12/12/18;17:30;713;864;82,52;69;94\n12/12/18;18:00;709;864;82,06;77;100\n12/12/18;18:30;684;864;79,17;74;106\n12/12/18;19:00;619;864;71,64;58;131\n12/12/18;19:30;576;864;66,67;71;73\n12/12/18;20:00;579;864;67,01;55;49\n12/12/18;20:30;592;864;68,52;37;33\n12/12/18;21:00;586;864;67,82;11;30\n12/12/18;21:30;554;864;64,12;12;30\n12/12/18;22:00;538;864;62,27;4;31\n12/12/18;22:30;489;864;56,60;4;41\n12/12/18;23:00;456;864;52,78;4;57\n12/12/18;23:30;409;864;47,34;3;29\n13/12/18;00:00;398;864;46,06;1;18\n13/12/18;00:30;383;864;44,33;0;9\n13/12/18;01:00;383;864;44,33;0;2\n13/12/18;01:30;379;864;43,87;0;2\n13/12/18;02:00;379;864;43,87;0;2\n13/12/18;02:30;377;864;43,63;0;0\n13/12/18;03:00;377;864;43,63;0;0\n13/12/18;03:30;377;864;43,63;0;0\n13/12/18;04:00;378;864;43,75;1;0\n13/12/18;04:30;377;864;43,63;0;0\n13/12/18;05:00;377;864;43,63;0;0\n13/12/18;05:30;379;864;43,87;2;0\n13/12/18;06:00;377;864;43,63;7;2\n13/12/18;06:30;380;864;43,98;7;6\n13/12/18;07:00;393;864;45,49;28;16\n13/12/18;07:30;406;864;46,99;29;22\n13/12/18;08:00;419;864;48,50;71;19\n13/12/18;08:30;520;864;60,19;88;21\n13/12/18;09:00;547;864;63,31;118;16\n13/12/18;09:30;696;864;80,56;102;24\n13/12/18;10:00;740;864;85,65;107;35\n13/12/18;10:30;786;864;90,97;56;44\n13/12/18;11:00;790;864;91,44;58;55\n13/12/18;11:30;789;864;91,32;53;52\n13/12/18;12:00;788;864;91,20;64;63\n13/12/18;12:30;789;864;91,32;41;42\n13/12/18;13:00;789;864;91,32;53;54\n13/12/18;13:30;788;864;91,20;56;55\n13/12/18;14:00;790;864;91,44;54;53\n13/12/18;14:30;790;864;91,44;69;70\n13/12/18;15:00;788;864;91,20;75;76\n13/12/18;15:30;785;864;90,86;70;71\n13/12/18;16:00;781;864;90,39;76;87\n13/12/18;16:30;765;864;88,54;78;89\n13/12/18;17:00;742;864;85,88;68;88\n13/12/18;17:30;717;864;82,99;63;89\n13/12/18;18:00;717;864;82,99;80;108\n13/12/18;18:30;632;864;73,15;60;117\n13/12/18;19:00;597;864;69,10;77;112\n13/12/18;19:30;604;864;69,91;83;68\n13/12/18;20:00;654;864;75,69;96;51\n13/12/18;20:30;657;864;76,04;28;29\n13/12/18;21:00;655;864;75,81;31;31\n13/12/18;21:30;637;864;73,73;11;29\n13/12/18;22:00;613;864;70,95;6;50\n13/12/18;22:30;529;864;61,23;4;67\n13/12/18;23:00;505;864;58,45;4;55\n13/12/18;23:30;434;864;50,23;3;46\n14/12/18;00:00;423;864;48,96;3;31\n14/12/18;00:30;393;864;45,49;3;15\n14/12/18;01:00;388;864;44,91;3;9\n14/12/18;01:30;379;864;43,87;0;7\n14/12/18;02:00;378;864;43,75;1;4\n14/12/18;02:30;376;864;43,52;1;1\n14/12/18;03:00;376;864;43,52;0;1\n14/12/18;03:30;375;864;43,40;0;0\n14/12/18;04:00;374;864;43,29;0;1\n14/12/18;04:30;374;864;43,29;0;0\n14/12/18;05:00;374;864;43,29;0;1\n14/12/18;05:30;374;864;43,29;2;1\n14/12/18;06:00;375;864;43,40;3;1\n14/12/18;06:30;386;864;44,68;16;5\n14/12/18;07:00;384;864;44,44;14;14\n14/12/18;07:30;401;864;46,41;35;19\n14/12/18;08:00;415;864;48,03;63;26\n14/12/18;08:30;458;864;53,01;67;19\n14/12/18;09:00;520;864;60,19;94;15\n14/12/18;09:30;674;864;78,01;133;28\n14/12/18;10:00;721;864;83,45;119;36\n14/12/18;10:30;783;864;90,63;64;37\n14/12/18;11:00;783;864;90,63;54;53\n14/12/18;11:30;781;864;90,39;74;71\n14/12/18;12:00;783;864;90,63;69;68\n14/12/18;12:30;783;864;90,63;50;52\n14/12/18;13:00;782;864;90,51;45;47\n14/12/18;13:30;783;864;90,63;64;65\n14/12/18;14:00;783;864;90,63;69;70\n14/12/18;14:30;786;864;90,97;83;78\n14/12/18;15:00;779;864;90,16;69;75\n14/12/18;15:30;781;864;90,39;87;91\n14/12/18;16:00;776;864;89,81;84;91\n14/12/18;16:30;754;864;87,27;78;89\n14/12/18;17:00;758;864;87,73;90;105\n14/12/18;17:30;708;864;81,94;94;130\n14/12/18;18:00;698;864;80,79;86;99\n14/12/18;18:30;639;864;73,96;58;115\n14/12/18;19:00;608;864;70,37;58;135\n14/12/18;19:30;565;864;65,39;67;55\n14/12/18;20:00;577;864;66,78;72;48\n14/12/18;20:30;600;864;69,44;40;25\n14/12/18;21:00;604;864;69,91;24;24\n14/12/18;21:30;588;864;68,06;14;27\n14/12/18;22:00;581;864;67,25;12;34\n14/12/18;22:30;542;864;62,73;11;37\n14/12/18;23:00;527;864;61,00;12;53\n14/12/18;23:30;460;864;53,24;7;47\n15/12/18;00:00;450;864;52,08;4;30\n15/12/18;00:30;406;864;46,99;5;33\n15/12/18;01:00;402;864;46,53;1;13\n15/12/18;01:30;382;864;44,21;0;11\n15/12/18;02:00;376;864;43,52;1;9\n15/12/18;02:30;367;864;42,48;0;7\n15/12/18;03:00;367;864;42,48;0;2\n15/12/18;03:30;365;864;42,25;0;0\n15/12/18;04:00;365;864;42,25;0;1\n15/12/18;04:30;363;864;42,01;1;2\n15/12/18;05:00;363;864;42,01;0;0\n15/12/18;05:30;364;864;42,13;2;1\n15/12/18;06:00;364;864;42,13;0;2\n15/12/18;06:30;364;864;42,13;2;0\n15/12/18;07:00;364;864;42,13;6;3\n15/12/18;07:30;368;864;42,59;4;3\n15/12/18;08:00;370;864;42,82;5;4\n15/12/18;08:30;384;864;44,44;23;8\n15/12/18;09:00;391;864;45,25;56;10\n15/12/18;09:30;523;864;60,53;114;15\n15/12/18;10:00;583;864;67,48;127;16\n15/12/18;10:30;694;864;80,32;116;59\n15/12/18;11:00;732;864;84,72;123;63\n15/12/18;11:30;783;864;90,63;100;71\n15/12/18;12:00;787;864;91,09;72;71\n15/12/18;12:30;779;864;90,16;79;79\n15/12/18;13:00;786;864;90,97;54;55\n15/12/18;13:30;784;864;90,74;47;47\n15/12/18;14:00;780;864;90,28;59;60\n15/12/18;14:30;779;864;90,16;75;77\n15/12/18;15:00;772;864;89,35;89;87\n15/12/18;15:30;776;864;89,81;68;70\n15/12/18;16:00;774;864;89,58;83;81\n15/12/18;16:30;765;864;88,54;99;109\n15/12/18;17:00;777;864;89,93;106;102\n15/12/18;17:30;743;864;86,00;94;124\n15/12/18;18:00;723;864;83,68;81;109\n15/12/18;18:30;661;864;76,50;58;115\n15/12/18;19:00;631;864;73,03;59;127\n15/12/18;19:30;569;864;65,86;62;82\n15/12/18;20:00;574;864;66,44;44;37\n15/12/18;20:30;585;864;67,71;46;34\n15/12/18;21:00;570;864;65,97;19;41\n15/12/18;21:30;545;864;63,08;13;34\n15/12/18;22:00;542;864;62,73;12;30\n15/12/18;22:30;507;864;58,68;11;30\n15/12/18;23:00;491;864;56,83;8;38\n15/12/18;23:30;439;864;50,81;5;43\n16/12/18;00:00;428;864;49,54;4;33\n16/12/18;00:30;400;864;46,30;2;12\n16/12/18;01:00;394;864;45,60;2;13\n16/12/18;01:30;372;864;43,06;1;15\n16/12/18;02:00;369;864;42,71;1;6\n16/12/18;02:30;367;864;42,48;0;0\n16/12/18;03:00;366;864;42,36;0;1\n16/12/18;03:30;365;864;42,25;0;1\n16/12/18;04:00;362;864;41,90;0;3\n16/12/18;04:30;359;864;41,55;0;3\n16/12/18;05:00;359;864;41,55;0;1\n16/12/18;05:30;357;864;41,32;0;1\n16/12/18;06:00;357;864;41,32;0;0\n16/12/18;06:30;356;864;41,20;0;1\n16/12/18;07:00;356;864;41,20;0;0\n16/12/18;07:30;354;864;40,97;2;4\n16/12/18;08:00;350;864;40,51;1;5\n16/12/18;08:30;346;864;40,05;2;6\n16/12/18;09:00;352;864;40,74;15;1\n16/12/18;09:30;400;864;46,30;60;14\n16/12/18;10:00;501;864;57,99;112;16\n16/12/18;10:30;575;864;66,55;116;40\n16/12/18;11:00;655;864;75,81;120;37\n16/12/18;11:30;703;864;81,37;110;63\n16/12/18;12:00;724;864;83,80;107;74\n16/12/18;12:30;756;864;87,50;87;69\n16/12/18;13:00;761;864;88,08;81;63\n16/12/18;13:30;793;864;91,78;77;58\n16/12/18;14:00;791;864;91,55;57;68\n16/12/18;14:30;784;864;90,74;90;86\n16/12/18;15:00;781;864;90,39;87;86\n16/12/18;15:30;785;864;90,86;96;99\n16/12/18;16:00;774;864;89,58;101;111\n16/12/18;16:30;776;864;89,81;99;96\n16/12/18;17:00;727;864;84,14;75;139\n16/12/18;17:30;648;864;75,00;57;123\n16/12/18;18:00;587;864;67,94;33;150\n16/12/18;18:30;443;864;51,27;18;105\n16/12/18;19:00;405;864;46,88;24;74\n16/12/18;19:30;363;864;42,01;15;44\n16/12/18;20:00;355;864;41,09;17;24\n16/12/18;20:30;347;864;40,16;6;15\n16/12/18;21:00;347;864;40,16;8;10\n16/12/18;21:30;338;864;39,12;2;9\n16/12/18;22:00;336;864;38,89;4;12\n16/12/18;22:30;325;864;37,62;4;9\n16/12/18;23:00;324;864;37,50;2;8\n16/12/18;23:30;320;864;37,04;2;1\n17/12/18;00:00;319;864;36,92;3;3\n17/12/18;00:30;317;864;36,69;0;4\n17/12/18;01:00;316;864;36,57;0;2\n17/12/18;01:30;302;864;34,95;0;1\n17/12/18;02:00;302;864;34,95;0;0\n17/12/18;02:30;302;864;34,95;0;0\n17/12/18;03:00;302;864;34,95;0;0\n17/12/18;03:30;302;864;34,95;0;0\n17/12/18;04:00;302;864;34,95;0;0\n17/12/18;04:30;302;864;34,95;0;0\n17/12/18;05:00;302;864;34,95;0;0\n17/12/18;05:30;305;864;35,30;5;1\n17/12/18;06:00;308;864;35,65;2;3\n17/12/18;06:30;307;864;35,53;12;9\n17/12/18;07:00;314;864;36,34;23;6\n17/12/18;07:30;339;864;39,24;39;22\n17/12/18;08:00;346;864;40,05;62;28\n17/12/18;08:30;401;864;46,41;84;18\n17/12/18;09:00;459;864;53,13;100;12\n17/12/18;09:30;588;864;68,06;112;19\n17/12/18;10:00;644;864;74,54;107;25\n17/12/18;10:30;747;864;86,46;79;26\n17/12/18;11:00;762;864;88,19;57;51\n17/12/18;11:30;761;864;88,08;73;74\n17/12/18;12:00;764;864;88,43;70;68\n17/12/18;12:30;764;864;88,43;39;37\n17/12/18;13:00;764;864;88,43;38;42\n17/12/18;13:30;762;864;88,19;63;62\n17/12/18;14:00;761;864;88,08;61;58\n17/12/18;14:30;762;864;88,19;55;58\n17/12/18;15:00;763;864;88,31;78;81\n17/12/18;15:30;764;864;88,43;74;69\n17/12/18;16:00;758;864;87,73;77;76\n17/12/18;16:30;752;864;87,04;84;109\n17/12/18;17:00;728;864;84,26;64;113\n17/12/18;17:30;656;864;75,93;62;104\n17/12/18;18:00;642;864;74,31;76;104\n17/12/18;18:30;580;864;67,13;54;103\n17/12/18;19:00;561;864;64,93;49;123\n17/12/18;19:30;479;864;55,44;51;63\n17/12/18;20:00;485;864;56,13;23;33\n17/12/18;20:30;468;864;54,17;11;25\n17/12/18;21:00;457;864;52,89;13;28\n17/12/18;21:30;440;864;50,93;2;24\n17/12/18;22:00;418;864;48,38;4;27\n17/12/18;22:30;379;864;43,87;2;29\n17/12/18;23:00;369;864;42,71;2;20\n17/12/18;23:30;344;864;39,81;2;14\n18/12/18;00:00;340;864;39,35;1;5\n18/12/18;00:30;339;864;39,24;0;0\n18/12/18;01:00;339;864;39,24;0;1\n18/12/18;01:30;337;864;39,00;0;3\n18/12/18;02:00;336;864;38,89;0;0\n18/12/18;02:30;336;864;38,89;0;0\n18/12/18;03:00;336;864;38,89;0;0\n18/12/18;03:30;336;864;38,89;0;0\n18/12/18;04:00;336;864;38,89;0;1\n18/12/18;04:30;335;864;38,77;0;0\n18/12/18;05:00;335;864;38,77;0;0\n18/12/18;05:30;337;864;39,00;4;1\n18/12/18;06:00;341;864;39,47;5;2\n18/12/18;06:30;343;864;39,70;12;7\n18/12/18;07:00;359;864;41,55;19;8\n18/12/18;07:30;367;864;42,48;35;14\n18/12/18;08:00;397;864;45,95;60;26\n18/12/18;08:30;453;864;52,43;83;18\n18/12/18;09:00;543;864;62,85;122;24\n18/12/18;09:30;659;864;76,27;121;22\n18/12/18;10:00;693;864;80,21;124;32\n18/12/18;10:30;764;864;88,43;42;41\n18/12/18;11:00;764;864;88,43;52;52\n18/12/18;11:30;763;864;88,31;74;76\n18/12/18;12:00;762;864;88,19;72;76\n18/12/18;12:30;766;864;88,66;52;44\n18/12/18;13:00;767;864;88,77;48;48\n18/12/18;13:30;766;864;88,66;55;57\n18/12/18;14:00;766;864;88,66;68;70\n18/12/18;14:30;763;864;88,31;66;66\n18/12/18;15:00;763;864;88,31;87;88\n18/12/18;15:30;765;864;88,54;63;61\n18/12/18;16:00;761;864;88,08;99;103\n18/12/18;16:30;762;864;88,19;73;80\n18/12/18;17:00;746;864;86,34;75;95\n18/12/18;17:30;727;864;84,14;104;101\n18/12/18;18:00;725;864;83,91;94;126\n18/12/18;18:30;691;864;79,98;64;111\n18/12/18;19:00;652;864;75,46;104;122\n18/12/18;19:30;639;864;73,96;105;100\n18/12/18;20:00;666;864;77,08;67;42\n18/12/18;20:30;666;864;77,08;29;36\n18/12/18;21:00;652;864;75,46;7;32\n18/12/18;21:30;609;864;70,49;7;33\n18/12/18;22:00;593;864;68,63;2;59\n18/12/18;22:30;535;864;61,92;6;68\n18/12/18;23:00;472;864;54,63;1;54\n18/12/18;23:30;411;864;47,57;4;36\n19/12/18;00:00;400;864;46,30;1;12\n19/12/18;00:30;377;864;43,63;1;14\n19/12/18;01:00;377;864;43,63;0;4\n19/12/18;01:30;371;864;42,94;0;2\n19/12/18;02:00;371;864;42,94;0;2\n19/12/18;02:30;368;864;42,59;0;4\n19/12/18;03:00;364;864;42,13;0;2\n19/12/18;03:30;363;864;42,01;0;0\n19/12/18;04:00;363;864;42,01;0;0\n19/12/18;04:30;362;864;41,90;1;1\n19/12/18;05:00;361;864;41,78;1;0\n19/12/18;05:30;366;864;42,36;7;0\n19/12/18;06:00;370;864;42,82;6;3\n19/12/18;06:30;371;864;42,94;10;8\n19/12/18;07:00;383;864;44,33;21;15\n19/12/18;07:30;381;864;44,10;30;20\n19/12/18;08:00;391;864;45,25;63;25\n19/12/18;08:30;453;864;52,43;78;25\n19/12/18;09:00;501;864;57,99;104;24\n19/12/18;09:30;623;864;72,11;114;22\n19/12/18;10:00;674;864;78,01;66;32\n19/12/18;10:30;692;864;80,09;54;56\n19/12/18;11:00;690;864;79,86;56;55\n19/12/18;11:30;688;864;79,63;45;48\n19/12/18;12:00;688;864;79,63;61;60\n19/12/18;12:30;690;864;79,86;37;36\n19/12/18;13:00;690;864;79,86;36;35\n19/12/18;13:30;691;864;79,98;47;47\n19/12/18;14:00;690;864;79,86;47;49\n19/12/18;14:30;691;864;79,98;47;46\n19/12/18;15:00;690;864;79,86;60;63\n19/12/18;15:30;687;864;79,51;81;67\n19/12/18;16:00;713;864;82,52;115;75\n19/12/18;16:30;746;864;86,34;87;85\n19/12/18;17:00;744;864;86,11;81;79\n19/12/18;17:30;726;864;84,03;76;99\n19/12/18;18:00;709;864;82,06;91;131\n19/12/18;18:30;639;864;73,96;62;129\n19/12/18;19:00;612;864;70,83;66;138\n19/12/18;19:30;525;864;60,76;81;76\n19/12/18;20:00;551;864;63,77;69;39\n19/12/18;20:30;583;864;67,48;38;25\n19/12/18;21:00;580;864;67,13;14;19\n19/12/18;21:30;559;864;64,70;9;36\n19/12/18;22:00;542;864;62,73;4;42\n19/12/18;22:30;486;864;56,25;4;43\n19/12/18;23:00;461;864;53,36;0;45\n19/12/18;23:30;396;864;45,83;4;51\n20/12/18;00:00;382;864;44,21;2;16\n20/12/18;00:30;358;864;41,44;2;10\n20/12/18;01:00;358;864;41,44;0;12\n20/12/18;01:30;346;864;40,05;0;1\n20/12/18;02:00;346;864;40,05;0;0\n20/12/18;02:30;344;864;39,81;0;2\n20/12/18;03:00;344;864;39,81;0;1\n20/12/18;03:30;343;864;39,70;0;0\n20/12/18;04:00;343;864;39,70;0;0\n20/12/18;04:30;349;864;40,39;0;0\n20/12/18;05:00;349;864;40,39;1;0\n20/12/18;05:30;351;864;40,63;4;0\n20/12/18;06:00;355;864;41,09;4;3\n20/12/18;06:30;360;864;41,67;13;5\n20/12/18;07:00;365;864;42,25;18;4\n20/12/18;07:30;376;864;43,52;25;23\n20/12/18;08:00;389;864;45,02;58;27\n20/12/18;08:30;456;864;52,78;78;13\n20/12/18;09:00;493;864;57,06;107;19\n20/12/18;09:30;639;864;73,96;129;25\n20/12/18;10:00;692;864;80,09;121;33\n20/12/18;10:30;755;864;87,38;49;50\n20/12/18;11:00;754;864;87,27;52;50\n20/12/18;11:30;756;864;87,50;50;44\n20/12/18;12:00;764;864;88,43;65;63\n20/12/18;12:30;774;864;89,58;55;45\n20/12/18;13:00;777;864;89,93;36;37\n20/12/18;13:30;776;864;89,81;51;50\n20/12/18;14:00;775;864;89,70;77;70\n20/12/18;14:30;773;864;89,47;58;61\n20/12/18;15:00;776;864;89,81;51;51\n20/12/18;15:30;777;864;89,93;93;96\n20/12/18;16:00;779;864;90,16;79;74\n20/12/18;16:30;775;864;89,70;83;91\n20/12/18;17:00;778;864;90,05;98;92\n20/12/18;17:30;768;864;88,89;80;103\n20/12/18;18:00;746;864;86,34;75;108\n20/12/18;18:30;692;864;80,09;65;116\n20/12/18;19:00;649;864;75,12;80;149\n20/12/18;19:30;592;864;68,52;98;89\n20/12/18;20:00;613;864;70,95;88;65\n20/12/18;20:30;642;864;74,31;68;38\n20/12/18;21:00;664;864;76,85;34;28\n20/12/18;21:30;657;864;76,04;7;31\n20/12/18;22:00;630;864;72,92;8;37\n20/12/18;22:30;585;864;67,71;9;54\n20/12/18;23:00;560;864;64,81;3;51\n20/12/18;23:30;483;864;55,90;5;55\n21/12/18;00:00;456;864;52,78;4;43\n21/12/18;00:30;412;864;47,69;1;20\n21/12/18;01:00;406;864;46,99;0;15\n21/12/18;01:30;387;864;44,79;0;10\n21/12/18;02:00;382;864;44,21;0;3\n21/12/18;02:30;380;864;43,98;0;4\n21/12/18;03:00;376;864;43,52;0;5\n21/12/18;03:30;370;864;42,82;0;2\n21/12/18;04:00;370;864;42,82;0;3\n21/12/18;04:30;368;864;42,59;1;0\n21/12/18;05:00;369;864;42,71;2;5\n21/12/18;05:30;367;864;42,48;4;0\n21/12/18;06:00;369;864;42,71;3;2\n21/12/18;06:30;374;864;43,29;13;6\n21/12/18;07:00;379;864;43,87;16;11\n21/12/18;07:30;380;864;43,98;32;20\n21/12/18;08:00;398;864;46,06;57;21\n21/12/18;08:30;485;864;56,13;96;20\n21/12/18;09:00;527;864;61,00;103;29\n21/12/18;09:30;665;864;76,97;123;21\n21/12/18;10:00;704;864;81,48;117;40\n21/12/18;10:30;758;864;87,73;85;77\n21/12/18;11:00;765;864;88,54;73;72\n21/12/18;11:30;762;864;88,19;93;96\n21/12/18;12:00;767;864;88,77;85;74\n21/12/18;12:30;783;864;90,63;68;60\n21/12/18;13:00;785;864;90,86;59;62\n21/12/18;13:30;783;864;90,63;62;60\n21/12/18;14:00;782;864;90,51;75;76\n21/12/18;14:30;782;864;90,51;65;66\n21/12/18;15:00;781;864;90,39;70;77\n21/12/18;15:30;769;864;89,00;98;92\n21/12/18;16:00;779;864;90,16;104;108\n21/12/18;16:30;769;864;89,00;93;99\n21/12/18;17:00;766;864;88,66;98;131\n21/12/18;17:30;712;864;82,41;86;111\n21/12/18;18:00;695;864;80,44;80;124\n21/12/18;18:30;612;864;70,83;52;119\n21/12/18;19:00;592;864;68,52;41;134\n21/12/18;19:30;482;864;55,79;37;76\n21/12/18;20:00;469;864;54,28;69;38\n21/12/18;20:30;516;864;59,72;66;29\n21/12/18;21:00;532;864;61,57;27;32\n21/12/18;21:30;537;864;62,15;27;19\n21/12/18;22:00;537;864;62,15;12;36\n21/12/18;22:30;492;864;56,94;5;37\n21/12/18;23:00;470;864;54,40;8;26\n21/12/18;23:30;459;864;53,13;8;25\n22/12/18;00:00;446;864;51,62;5;29\n22/12/18;00:30;413;864;47,80;1;25\n22/12/18;01:00;398;864;46,06;1;13\n22/12/18;01:30;384;864;44,44;3;14\n22/12/18;02:00;375;864;43,40;0;8\n22/12/18;02:30;368;864;42,59;0;1\n22/12/18;03:00;368;864;42,59;0;6\n22/12/18;03:30;362;864;41,90;0;0\n22/12/18;04:00;362;864;41,90;0;1\n22/12/18;04:30;360;864;41,67;0;1\n22/12/18;05:00;360;864;41,67;1;0\n22/12/18;05:30;358;864;41,44;0;4\n22/12/18;06:00;357;864;41,32;1;2\n22/12/18;06:30;358;864;41,44;3;0\n22/12/18;07:00;359;864;41,55;1;2\n22/12/18;07:30;362;864;41,90;13;3\n22/12/18;08:00;370;864;42,82;11;7\n22/12/18;08:30;383;864;44,33;34;8\n22/12/18;09:00;401;864;46,41;79;12\n22/12/18;09:30;540;864;62,50;123;20\n22/12/18;10:00;575;864;66,55;126;39\n22/12/18;10:30;704;864;81,48;125;60\n22/12/18;11:00;726;864;84,03;117;84\n22/12/18;11:30;776;864;89,81;112;89\n22/12/18;12:00;773;864;89,47;109;114\n22/12/18;12:30;780;864;90,28;100;86\n22/12/18;13:00;787;864;91,09;76;74\n22/12/18;13:30;775;864;89,70;79;88\n22/12/18;14:00;788;864;91,20;76;70\n22/12/18;14:30;786;864;90,97;87;86\n22/12/18;15:00;785;864;90,86;65;64\n22/12/18;15:30;785;864;90,86;91;95\n22/12/18;16:00;787;864;91,09;96;92\n22/12/18;16:30;780;864;90,28;74;79\n22/12/18;17:00;781;864;90,39;97;107\n22/12/18;17:30;780;864;90,28;98;105\n22/12/18;18:00;736;864;85,19;66;110\n22/12/18;18:30;684;864;79,17;58;136\n22/12/18;19:00;636;864;73,61;40;131\n22/12/18;19:30;505;864;58,45;45;93\n22/12/18;20:00;502;864;58,10;62;36\n22/12/18;20:30;539;864;62,38;39;24\n22/12/18;21:00;542;864;62,73;26;18\n22/12/18;21:30;540;864;62,50;22;43\n22/12/18;22:00;528;864;61,11;8;34\n22/12/18;22:30;485;864;56,13;2;43\n22/12/18;23:00;460;864;53,24;2;32\n22/12/18;23:30;407;864;47,11;0;39\n23/12/18;00:00;390;864;45,14;5;22\n23/12/18;00:30;359;864;41,55;2;27\n23/12/18;01:00;350;864;40,51;3;6\n23/12/18;01:30;349;864;40,39;2;7\n23/12/18;02:00;342;864;39,58;0;5\n23/12/18;02:30;338;864;39,12;0;0\n23/12/18;03:00;339;864;39,24;3;2\n23/12/18;03:30;339;864;39,24;0;0\n23/12/18;04:00;339;864;39,24;1;1\n23/12/18;04:30;338;864;39,12;0;1\n23/12/18;05:00;338;864;39,12;0;0\n23/12/18;05:30;337;864;39,00;0;1\n23/12/18;06:00;336;864;38,89;1;1\n23/12/18;06:30;335;864;38,77;0;2\n23/12/18;07:00;334;864;38,66;1;2\n23/12/18;07:30;331;864;38,31;0;4\n23/12/18;08:00;326;864;37,73;3;6\n23/12/18;08:30;325;864;37,62;9;7\n23/12/18;09:00;328;864;37,96;18;7\n23/12/18;09:30;375;864;43,40;76;8\n23/12/18;10:00;414;864;47,92;107;20\n23/12/18;10:30;523;864;60,53;109;43\n23/12/18;11:00;567;864;65,63;112;54\n23/12/18;11:30;619;864;71,64;97;78\n23/12/18;12:00;637;864;73,73;111;87\n23/12/18;12:30;671;864;77,66;93;66\n23/12/18;13:00;684;864;79,17;93;63\n23/12/18;13:30;745;864;86,23;102;58\n23/12/18;14:00;764;864;88,43;95;76\n23/12/18;14:30;784;864;90,74;94;82\n23/12/18;15:00;791;864;91,55;84;83\n23/12/18;15:30;787;864;91,09;93;94\n23/12/18;16:00;792;864;91,67;100;100\n23/12/18;16:30;786;864;90,97;101;115\n23/12/18;17:00;771;864;89,24;103;118\n23/12/18;17:30;731;864;84,61;89;139\n23/12/18;18:00;698;864;80,79;35;142\n23/12/18;18:30;537;864;62,15;35;133\n23/12/18;19:00;489;864;56,60;21;106\n23/12/18;19:30;404;864;46,76;20;37\n23/12/18;20:00;395;864;45,72;15;25\n23/12/18;20:30;393;864;45,49;17;15\n23/12/18;21:00;386;864;44,68;6;28\n23/12/18;21:30;354;864;40,97;7;23\n23/12/18;22:00;348;864;40,28;3;21\n23/12/18;22:30;328;864;37,96;3;7\n23/12/18;23:00;326;864;37,73;2;7\n23/12/18;23:30;313;864;36,23;3;15\n24/12/18;00:00;312;864;36,11;4;2\n24/12/18;00:30;308;864;35,65;1;7\n24/12/18;01:00;308;864;35,65;1;1\n24/12/18;01:30;308;864;35,65;0;0\n24/12/18;02:00;308;864;35,65;1;1\n24/12/18;02:30;308;864;35,65;0;0\n24/12/18;03:00;308;864;35,65;0;0\n24/12/18;03:30;308;864;35,65;0;0\n24/12/18;04:00;308;864;35,65;0;1\n24/12/18;04:30;307;864;35,53;1;0\n24/12/18;05:00;308;864;35,65;0;0\n24/12/18;05:30;308;864;35,65;1;0\n24/12/18;06:00;309;864;35,76;2;3\n24/12/18;06:30;310;864;35,88;3;0\n24/12/18;07:00;312;864;36,11;5;1\n24/12/18;07:30;315;864;36,46;11;3\n24/12/18;08:00;324;864;37,50;29;5\n24/12/18;08:30;363;864;42,01;31;6\n24/12/18;09:00;375;864;43,40;61;9\n24/12/18;09:30;461;864;53,36;93;11\n24/12/18;10:00;554;864;64,12;120;31\n24/12/18;10:30;622;864;71,99;114;70\n24/12/18;11:00;641;864;74,19;113;75\n24/12/18;11:30;687;864;79,51;121;92\n24/12/18;12:00;705;864;81,60;112;104\n24/12/18;12:30;712;864;82,41;101;96\n24/12/18;13:00;719;864;83,22;93;78\n24/12/18;13:30;751;864;86,92;95;71\n24/12/18;14:00;753;864;87,15;105;93\n24/12/18;14:30;767;864;88,77;114;111\n24/12/18;15:00;759;864;87,85;110;131\n24/12/18;15:30;729;864;84,38;111;138\n24/12/18;16:00;630;864;72,92;100;147\n24/12/18;16:30;630;864;72,92;78;149\n24/12/18;17:00;594;864;68,75;45;142\n24/12/18;17:30;426;864;49,31;22;142\n24/12/18;18:00;375;864;43,40;16;94\n24/12/18;18:30;284;864;32,87;11;38\n24/12/18;19:00;266;864;30,79;4;15\n24/12/18;19:30;260;864;30,09;6;10\n24/12/18;20:00;260;864;30,09;4;6\n24/12/18;20:30;261;864;30,21;5;3\n24/12/18;21:00;260;864;30,09;5;0\n24/12/18;21:30;262;864;30,32;0;4\n24/12/18;22:00;261;864;30,21;2;3\n24/12/18;22:30;260;864;30,09;4;4\n24/12/18;23:00;260;864;30,09;4;8\n24/12/18;23:30;257;864;29,75;3;1\n25/12/18;00:00;258;864;29,86;5;2\n25/12/18;00:30;259;864;29,98;4;4\n25/12/18;01:00;261;864;30,21;4;1\n25/12/18;01:30;261;864;30,21;3;5\n25/12/18;02:00;263;864;30,44;3;4\n25/12/18;02:30;261;864;30,21;2;1\n25/12/18;03:00;262;864;30,32;0;0\n25/12/18;03:30;262;864;30,32;0;0\n25/12/18;04:00;262;864;30,32;0;0\n25/12/18;04:30;262;864;30,32;1;0\n25/12/18;05:00;263;864;30,44;0;0\n25/12/18;05:30;263;864;30,44;1;0\n25/12/18;06:00;264;864;30,56;0;0\n25/12/18;06:30;264;864;30,56;1;1\n25/12/18;07:00;264;864;30,56;2;2\n25/12/18;07:30;264;864;30,56;1;0\n25/12/18;08:00;265;864;30,67;0;1\n25/12/18;08:30;264;864;30,56;0;1\n25/12/18;09:00;263;864;30,44;1;5\n25/12/18;09:30;259;864;29,98;0;6\n25/12/18;10:00;253;864;29,28;0;12\n25/12/18;10:30;235;864;27,20;3;10\n25/12/18;11:00;233;864;26,97;6;5\n25/12/18;11:30;235;864;27,20;8;11\n25/12/18;12:00;232;864;26,85;5;9\n25/12/18;12:30;226;864;26,16;8;12\n25/12/18;13:00;226;864;26,16;6;3\n25/12/18;13:30;228;864;26,39;4;2\n25/12/18;14:00;229;864;26,50;7;4\n25/12/18;14:30;230;864;26,62;4;9\n25/12/18;15:00;227;864;26,27;7;5\n25/12/18;15:30;227;864;26,27;10;15\n25/12/18;16:00;222;864;25,69;16;10\n25/12/18;16:30;225;864;26,04;8;16\n25/12/18;17:00;223;864;25,81;11;11\n25/12/18;17:30;219;864;25,35;11;12\n25/12/18;18:00;219;864;25,35;6;4\n25/12/18;18:30;223;864;25,81;17;4\n25/12/18;19:00;233;864;26,97;13;3\n25/12/18;19:30;249;864;28,82;12;5\n25/12/18;20:00;259;864;29,98;11;1\n25/12/18;20:30;263;864;30,44;7;4\n25/12/18;21:00;261;864;30,21;0;4\n25/12/18;21:30;262;864;30,32;7;7\n25/12/18;22:00;260;864;30,09;1;1\n25/12/18;22:30;263;864;30,44;8;1\n25/12/18;23:00;267;864;30,90;5;3\n25/12/18;23:30;269;864;31,13;1;0\n26/12/18;00:00;270;864;31,25;3;1\n26/12/18;00:30;274;864;31,71;3;0\n26/12/18;01:00;275;864;31,83;0;2\n26/12/18;01:30;274;864;31,71;1;0\n26/12/18;02:00;274;864;31,71;0;0\n26/12/18;02:30;274;864;31,71;0;0\n26/12/18;03:00;274;864;31,71;0;0\n26/12/18;03:30;274;864;31,71;0;0\n26/12/18;04:00;274;864;31,71;1;0\n26/12/18;04:30;274;864;31,71;0;1\n26/12/18;05:00;274;864;31,71;0;0\n26/12/18;05:30;274;864;31,71;0;0\n26/12/18;06:00;274;864;31,71;2;1\n26/12/18;06:30;278;864;32,18;3;2\n26/12/18;07:00;277;864;32,06;8;5\n26/12/18;07:30;279;864;32,29;8;4\n26/12/18;08:00;286;864;33,10;15;4\n26/12/18;08:30;305;864;35,30;31;6\n26/12/18;09:00;324;864;37,50;46;8\n26/12/18;09:30;384;864;44,44;72;8\n26/12/18;10:00;429;864;49,65;83;21\n26/12/18;10:30;521;864;60,30;106;37\n26/12/18;11:00;560;864;64,81;107;46\n26/12/18;11:30;615;864;71,18;102;72\n26/12/18;12:00;653;864;75,58;103;76\n26/12/18;12:30;705;864;81,60;113;55\n26/12/18;13:00;733;864;84,84;101;51\n26/12/18;13:30;780;864;90,28;83;75\n26/12/18;14:00;783;864;90,63;72;75\n26/12/18;14:30;783;864;90,63;89;97\n26/12/18;15:00;778;864;90,05;99;88\n26/12/18;15:30;776;864;89,81;108;108\n26/12/18;16:00;782;864;90,51;92;98\n26/12/18;16:30;771;864;89,24;106;112\n26/12/18;17:00;768;864;88,89;113;127\n26/12/18;17:30;752;864;87,04;96;114\n26/12/18;18:00;737;864;85,30;90;151\n26/12/18;18:30;604;864;69,91;49;141\n26/12/18;19:00;582;864;67,36;34;125\n26/12/18;19:30;458;864;53,01;38;79\n26/12/18;20:00;453;864;52,43;27;27\n26/12/18;20:30;453;864;52,43;30;23\n26/12/18;21:00;457;864;52,89;7;27\n26/12/18;21:30;428;864;49,54;10;22\n26/12/18;22:00;423;864;48,96;1;29\n26/12/18;22:30;390;864;45,14;7;23\n26/12/18;23:00;381;864;44,10;3;23\n26/12/18;23:30;352;864;40,74;1;15\n27/12/18;00:00;347;864;40,16;0;7\n27/12/18;00:30;334;864;38,66;0;7\n27/12/18;01:00;331;864;38,31;0;8\n27/12/18;01:30;323;864;37,38;0;2\n27/12/18;02:00;323;864;37,38;0;0\n27/12/18;02:30;323;864;37,38;0;0\n27/12/18;03:00;323;864;37,38;0;0\n27/12/18;03:30;323;864;37,38;0;0\n27/12/18;04:00;323;864;37,38;0;0\n27/12/18;04:30;323;864;37,38;0;0\n27/12/18;05:00;323;864;37,38;1;0\n27/12/18;05:30;324;864;37,50;0;0\n27/12/18;06:00;323;864;37,38;3;4\n27/12/18;06:30;322;864;37,27;6;3\n27/12/18;07:00;326;864;37,73;7;3\n27/12/18;07:30;333;864;38,54;18;4\n27/12/18;08:00;345;864;39,93;22;11\n27/12/18;08:30;378;864;43,75;38;7\n27/12/18;09:00;388;864;44,91;55;10\n27/12/18;09:30;464;864;53,70;80;21\n27/12/18;10:00;494;864;57,18;109;28\n27/12/18;10:30;610;864;70,60;108;47\n27/12/18;11:00;639;864;73,96;114;66\n27/12/18;11:30;708;864;81,94;114;74\n27/12/18;12:00;724;864;83,80;113;66\n27/12/18;12:30;782;864;90,51;81;64\n27/12/18;13:00;784;864;90,74;56;57\n27/12/18;13:30;786;864;90,97;72;67\n27/12/18;14:00;791;864;91,55;67;73\n27/12/18;14:30;788;864;91,20;80;72\n27/12/18;15:00;791;864;91,55;79;81\n27/12/18;15:30;786;864;90,97;83;83\n27/12/18;16:00;789;864;91,32;104;106\n27/12/18;16:30;790;864;91,44;101;105\n27/12/18;17:00;782;864;90,51;110;113\n27/12/18;17:30;756;864;87,50;80;116\n27/12/18;18:00;741;864;85,76;86;135\n27/12/18;18:30;648;864;75,00;67;130\n27/12/18;19:00;626;864;72,45;41;126\n27/12/18;19:30;523;864;60,53;40;66\n27/12/18;20:00;513;864;59,38;43;40\n27/12/18;20:30;517;864;59,84;29;29\n27/12/18;21:00;517;864;59,84;15;32\n27/12/18;21:30;493;864;57,06;10;25\n27/12/18;22:00;487;864;56,37;6;42\n27/12/18;22:30;438;864;50,69;2;30\n27/12/18;23:00;423;864;48,96;4;34\n27/12/18;23:30;382;864;44,21;3;22\n28/12/18;00:00;373;864;43,17;2;15\n28/12/18;00:30;352;864;40,74;1;15\n28/12/18;01:00;348;864;40,28;0;3\n28/12/18;01:30;344;864;39,81;0;1\n28/12/18;02:00;344;864;39,81;0;1\n28/12/18;02:30;343;864;39,70;0;0\n28/12/18;03:00;343;864;39,70;0;0\n28/12/18;03:30;343;864;39,70;0;0\n28/12/18;04:00;343;864;39,70;0;1\n28/12/18;04:30;341;864;39,47;0;1\n28/12/18;05:00;341;864;39,47;0;0\n28/12/18;05:30;342;864;39,58;3;2\n28/12/18;06:00;342;864;39,58;1;2\n28/12/18;06:30;341;864;39,47;4;2\n28/12/18;07:00;343;864;39,70;7;3\n28/12/18;07:30;349;864;40,39;9;5\n28/12/18;08:00;352;864;40,74;16;7\n28/12/18;08:30;381;864;44,10;38;7\n28/12/18;09:00;395;864;45,72;53;11\n28/12/18;09:30;457;864;52,89;74;15\n28/12/18;10:00;501;864;57,99;97;20\n28/12/18;10:30;620;864;71,76;117;40\n28/12/18;11:00;649;864;75,12;109;57\n28/12/18;11:30;721;864;83,45;111;81\n28/12/18;12:00;732;864;84,72;122;69\n28/12/18;12:30;779;864;90,16;55;57\n28/12/18;13:00;777;864;89,93;63;60\n28/12/18;13:30;780;864;90,28;64;62\n28/12/18;14:00;784;864;90,74;76;75\n28/12/18;14:30;783;864;90,63;92;89\n28/12/18;15:00;786;864;90,97;70;69\n28/12/18;15:30;775;864;89,70;92;94\n28/12/18;16:00;783;864;90,63;101;101\n28/12/18;16:30;771;864;89,24;103;118\n28/12/18;17:00;762;864;88,19;99;109\n28/12/18;17:30;737;864;85,30;83;109\n28/12/18;18:00;730;864;84,49;70;121\n28/12/18;18:30;641;864;74,19;48;127\n28/12/18;19:00;596;864;68,98;34;126\n28/12/18;19:30;490;864;56,71;45;63\n28/12/18;20:00;490;864;56,71;58;19\n28/12/18;20:30;538;864;62,27;31;20\n28/12/18;21:00;538;864;62,27;17;26\n28/12/18;21:30;524;864;60,65;16;26\n28/12/18;22:00;516;864;59,72;6;41\n28/12/18;22:30;470;864;54,40;3;30\n28/12/18;23:00;455;864;52,66;3;28\n28/12/18;23:30;414;864;47,92;2;29\n29/12/18;00:00;405;864;46,88;1;24\n29/12/18;00:30;373;864;43,17;1;11\n29/12/18;01:00;373;864;43,17;0;18\n29/12/18;01:30;355;864;41,09;1;1\n29/12/18;02:00;355;864;41,09;0;5\n29/12/18;02:30;350;864;40,51;2;1\n29/12/18;03:00;350;864;40,51;0;1\n29/12/18;03:30;350;864;40,51;0;0\n29/12/18;04:00;349;864;40,39;1;1\n29/12/18;04:30;329;864;38,08;1;1\n29/12/18;05:00;329;864;38,08;0;1\n29/12/18;05:30;329;864;38,08;1;0\n29/12/18;06:00;330;864;38,19;2;3\n29/12/18;06:30;329;864;38,08;1;1\n29/12/18;07:00;329;864;38,08;4;0\n29/12/18;07:30;335;864;38,77;3;1\n29/12/18;08:00;336;864;38,89;6;4\n29/12/18;08:30;338;864;39,12;15;6\n29/12/18;09:00;353;864;40,86;34;9\n29/12/18;09:30;393;864;45,49;65;14\n29/12/18;10:00;429;864;49,65;101;19\n29/12/18;10:30;542;864;62,73;103;32\n29/12/18;11:00;576;864;66,67;102;51\n29/12/18;11:30;641;864;74,19;111;85\n29/12/18;12:00;651;864;75,35;111;87\n29/12/18;12:30;678;864;78,47;86;66\n29/12/18;13:00;697;864;80,67;89;61\n29/12/18;13:30;739;864;85,53;74;48\n29/12/18;14:00;741;864;85,76;76;74\n29/12/18;14:30;748;864;86,57;80;78\n29/12/18;15:00;748;864;86,57;94;94\n29/12/18;15:30;748;864;86,57;95;92\n29/12/18;16:00;750;864;86,81;67;65\n29/12/18;16:30;738;864;85,42;103;115\n29/12/18;17:00;738;864;85,42;100;114\n29/12/18;17:30;733;864;84,84;108;104\n29/12/18;18:00;721;864;83,45;72;117\n29/12/18;18:30;656;864;75,93;60;118\n29/12/18;19:00;610;864;70,60;43;154\n29/12/18;19:30;475;864;54,98;34;73\n29/12/18;20:00;476;864;55,09;44;38\n29/12/18;20:30;489;864;56,60;37;34\n29/12/18;21:00;487;864;56,37;23;36\n29/12/18;21:30;459;864;53,13;17;43\n29/12/18;22:00;442;864;51,16;3;29\n29/12/18;22:30;399;864;46,18;4;37\n29/12/18;23:00;384;864;44,44;4;22\n29/12/18;23:30;352;864;40,74;1;26\n30/12/18;00:00;340;864;39,35;5;29\n30/12/18;00:30;316;864;36,57;1;6\n30/12/18;01:00;309;864;35,76;0;5\n30/12/18;01:30;303;864;35,07;0;6\n30/12/18;02:00;303;864;35,07;0;4\n30/12/18;02:30;298;864;34,49;0;1\n30/12/18;03:00;298;864;34,49;0;3\n30/12/18;03:30;294;864;34,03;0;1\n30/12/18;04:00;293;864;33,91;0;1\n30/12/18;04:30;293;864;33,91;0;1\n30/12/18;05:00;292;864;33,80;1;1\n30/12/18;05:30;292;864;33,80;0;0\n30/12/18;06:00;292;864;33,80;0;1\n30/12/18;06:30;291;864;33,68;0;1\n30/12/18;07:00;290;864;33,56;1;1\n30/12/18;07:30;289;864;33,45;0;1\n30/12/18;08:00;289;864;33,45;0;2\n30/12/18;08:30;288;864;33,33;6;3\n30/12/18;09:00;288;864;33,33;5;7\n30/12/18;09:30;282;864;32,64;9;9\n30/12/18;10:00;288;864;33,33;12;11\n30/12/18;10:30;281;864;32,52;15;18\n30/12/18;11:00;285;864;32,99;24;22\n30/12/18;11:30;296;864;34,26;28;13\n30/12/18;12:00;299;864;34,61;35;27\n30/12/18;12:30;318;864;36,81;40;20\n30/12/18;13:00;330;864;38,19;50;8\n30/12/18;13:30;382;864;44,21;39;13\n30/12/18;14:00;396;864;45,83;36;30\n30/12/18;14:30;413;864;47,80;51;29\n30/12/18;15:00;425;864;49,19;70;43\n30/12/18;15:30;459;864;53,13;58;47\n30/12/18;16:00;464;864;53,70;53;54\n30/12/18;16:30;462;864;53,47;63;47\n30/12/18;17:00;477;864;55,21;44;72\n30/12/18;17:30;423;864;48,96;22;55\n30/12/18;18:00;414;864;47,92;23;66\n30/12/18;18:30;363;864;42,01;19;36\n30/12/18;19:00;354;864;40,97;21;35\n30/12/18;19:30;343;864;39,70;19;20\n30/12/18;20:00;340;864;39,35;18;11\n30/12/18;20:30;340;864;39,35;10;14\n30/12/18;21:00;340;864;39,35;6;9\n30/12/18;21:30;330;864;38,19;1;13\n30/12/18;22:00;325;864;37,62;3;20\n30/12/18;22:30;302;864;34,95;5;12\n30/12/18;23:00;303;864;35,07;3;5\n30/12/18;23:30;295;864;34,14;0;12\n31/12/18;00:00;288;864;33,33;0;3\n31/12/18;00:30;285;864;32,99;1;2\n31/12/18;01:00;284;864;32,87;1;0\n31/12/18;01:30;284;864;32,87;0;1\n31/12/18;02:00;283;864;32,75;0;1\n31/12/18;02:30;283;864;32,75;0;0\n31/12/18;03:00;283;864;32,75;0;0\n31/12/18;03:30;283;864;32,75;0;0\n31/12/18;04:00;283;864;32,75;0;0\n31/12/18;04:30;283;864;32,75;0;0\n31/12/18;05:00;283;864;32,75;1;1\n31/12/18;05:30;283;864;32,75;0;0\n31/12/18;06:00;283;864;32,75;2;0\n31/12/18;06:30;285;864;32,99;1;0\n31/12/18;07:00;286;864;33,10;5;4\n31/12/18;07:30;287;864;33,22;9;0\n31/12/18;08:00;298;864;34,49;11;3\n31/12/18;08:30;313;864;36,23;21;7\n31/12/18;09:00;321;864;37,15;30;7\n31/12/18;09:30;354;864;40,97;52;11\n31/12/18;10:00;385;864;44,56;79;18\n31/12/18;10:30;492;864;56,94;101;32\n31/12/18;11:00;516;864;59,72;86;38\n31/12/18;11:30;586;864;67,82;88;57\n31/12/18;12:00;589;864;68,17;107;75\n31/12/18;12:30;653;864;75,58;103;59\n31/12/18;13:00;668;864;77,31;80;50\n31/12/18;13:30;697;864;80,67;83;73\n31/12/18;14:00;703;864;81,37;86;80\n31/12/18;14:30;723;864;83,68;102;83\n31/12/18;15:00;730;864;84,49;107;105\n31/12/18;15:30;714;864;82,64;94;121\n31/12/18;16:00;692;864;80,09;107;128\n31/12/18;16:30;619;864;71,64;61;131\n31/12/18;17:00;589;864;68,17;53;124\n31/12/18;17:30;466;864;53,94;40;122\n31/12/18;18:00;421;864;48,73;28;88\n31/12/18;18:30;387;864;44,79;22;41\n31/12/18;19:00;384;864;44,44;36;26\n31/12/18;19:30;400;864;46,30;30;19\n31/12/18;20:00;408;864;47,22;50;17\n31/12/18;20:30;454;864;52,55;35;15\n31/12/18;21:00;464;864;53,70;24;13\n31/12/18;21:30;461;864;53,36;14;18\n31/12/18;22:00;460;864;53,24;14;21\n31/12/18;22:30;453;864;52,43;10;16\n31/12/18;23:00;442;864;51,16;8;17\n31/12/18;23:30;438;864;50,69;11;13\n01/01/19;00:00;434;864;50,23;7;33\n01/01/19;00:30;391;864;45,25;4;26\n01/01/19;01:00;384;864;44,44;3;23\n01/01/19;01:30;355;864;41,09;2;19\n01/01/19;02:00;348;864;40,28;3;10\n01/01/19;02:30;340;864;39,35;4;10\n01/01/19;03:00;339;864;39,24;1;8\n01/01/19;03:30;332;864;38,43;1;1\n01/01/19;04:00;331;864;38,31;3;6\n01/01/19;04:30;326;864;37,73;0;3\n01/01/19;05:00;326;864;37,73;0;0\n01/01/19;05:30;326;864;37,73;0;0\n01/01/19;06:00;326;864;37,73;0;0\n01/01/19;06:30;327;864;37,85;1;0\n01/01/19;07:00;326;864;37,73;0;3\n01/01/19;07:30;323;864;37,38;0;1\n01/01/19;08:00;323;864;37,38;0;1\n01/01/19;08:30;315;864;36,46;0;7\n01/01/19;09:00;311;864;36,00;0;8\n01/01/19;09:30;298;864;34,49;1;10\n01/01/19;10:00;296;864;34,26;1;7\n01/01/19;10:30;285;864;32,99;4;14\n01/01/19;11:00;281;864;32,52;4;8\n01/01/19;11:30;272;864;31,48;12;22\n01/01/19;12:00;266;864;30,79;16;11\n01/01/19;12:30;281;864;32,52;17;8\n01/01/19;13:00;283;864;32,75;12;9\n01/01/19;13:30;290;864;33,56;9;3\n01/01/19;14:00;290;864;33,56;9;14\n01/01/19;14:30;285;864;32,99;9;11\n01/01/19;15:00;283;864;32,75;11;15\n01/01/19;15:30;271;864;31,37;10;18\n01/01/19;16:00;276;864;31,94;18;12\n01/01/19;16:30;274;864;31,71;12;16\n01/01/19;17:00;282;864;32,64;21;13\n01/01/19;17:30;282;864;32,64;14;14\n01/01/19;18:00;284;864;32,87;20;11\n01/01/19;18:30;293;864;33,91;13;9\n01/01/19;19:00;295;864;34,14;6;3\n01/01/19;19:30;303;864;35,07;13;9\n01/01/19;20:00;298;864;34,49;8;12\n01/01/19;20:30;304;864;35,19;10;3\n01/01/19;21:00;305;864;35,30;4;8\n01/01/19;21:30;301;864;34,84;4;4\n01/01/19;22:00;299;864;34,61;1;6\n01/01/19;22:30;294;864;34,03;1;3\n01/01/19;23:00;294;864;34,03;1;1\n01/01/19;23:30;294;864;34,03;0;0\n02/01/19;00:00;293;864;33,91;0;1\n02/01/19;00:30;293;864;33,91;1;1\n02/01/19;01:00;293;864;33,91;0;0\n02/01/19;01:30;293;864;33,91;0;0\n02/01/19;02:00;294;864;34,03;1;0\n02/01/19;02:30;294;864;34,03;0;0\n02/01/19;03:00;294;864;34,03;0;0\n02/01/19;03:30;294;864;34,03;0;0\n02/01/19;04:00;293;864;33,91;0;0\n02/01/19;04:30;293;864;33,91;0;0\n02/01/19;05:00;293;864;33,91;0;0\n02/01/19;05:30;294;864;34,03;3;2\n02/01/19;06:00;295;864;34,14;1;1\n02/01/19;06:30;295;864;34,14;6;3\n02/01/19;07:00;299;864;34,61;12;5\n02/01/19;07:30;317;864;36,69;17;3\n02/01/19;08:00;320;864;37,04;32;16\n02/01/19;08:30;382;864;44,21;61;7\n02/01/19;09:00;389;864;45,02;53;13\n02/01/19;09:30;473;864;54,75;56;6\n02/01/19;10:00;497;864;57,52;79;29\n02/01/19;10:30;560;864;64,81;77;40\n02/01/19;11:00;578;864;66,90;73;51\n02/01/19;11:30;646;864;74,77;102;40\n02/01/19;12:00;655;864;75,81;94;57\n02/01/19;12:30;719;864;83,22;100;66\n02/01/19;13:00;730;864;84,49;82;57\n02/01/19;13:30;751;864;86,92;64;55\n02/01/19;14:00;757;864;87,62;71;67\n02/01/19;14:30;763;864;88,31;76;69\n02/01/19;15:00;760;864;87,96;84;82\n02/01/19;15:30;761;864;88,08;98;97\n02/01/19;16:00;761;864;88,08;87;102\n02/01/19;16:30;721;864;83,45;76;105\n02/01/19;17:00;705;864;81,60;77;111\n02/01/19;17:30;628;864;72,69;63;120\n02/01/19;18:00;620;864;71,76;45;134\n02/01/19;18:30;469;864;54,28;28;106\n02/01/19;19:00;425;864;49,19;33;84\n02/01/19;19:30;391;864;45,25;33;48\n02/01/19;20:00;394;864;45,60;24;24\n02/01/19;20:30;403;864;46,64;18;6\n02/01/19;21:00;402;864;46,53;7;20\n02/01/19;21:30;375;864;43,40;3;16\n02/01/19;22:00;370;864;42,82;8;26\n02/01/19;22:30;342;864;39,58;2;17\n02/01/19;23:00;332;864;38,43;3;18\n02/01/19;23:30;311;864;36,00;0;20\n03/01/19;00:00;305;864;35,30;3;8\n03/01/19;00:30;299;864;34,61;2;4\n03/01/19;01:00;299;864;34,61;0;2\n03/01/19;01:30;296;864;34,26;0;2\n03/01/19;02:00;296;864;34,26;0;0\n03/01/19;02:30;296;864;34,26;0;0\n03/01/19;03:00;296;864;34,26;0;0\n03/01/19;03:30;296;864;34,26;0;0\n03/01/19;04:00;296;864;34,26;0;0\n03/01/19;04:30;296;864;34,26;0;0\n03/01/19;05:00;296;864;34,26;0;0\n03/01/19;05:30;298;864;34,49;3;1\n03/01/19;06:00;298;864;34,49;1;3\n03/01/19;06:30;293;864;33,91;2;4\n03/01/19;07:00;300;864;34,72;23;9\n03/01/19;07:30;321;864;37,15;22;6\n03/01/19;08:00;342;864;39,58;44;15\n03/01/19;08:30;420;864;48,61;81;8\n03/01/19;09:00;464;864;53,70;79;7\n03/01/19;09:30;556;864;64,35;86;21\n03/01/19;10:00;601;864;69,56;91;22\n03/01/19;10:30;685;864;79,28;103;47\n03/01/19;11:00;705;864;81,60;88;45\n03/01/19;11:30;763;864;88,31;99;65\n03/01/19;12:00;763;864;88,31;88;87\n03/01/19;12:30;762;864;88,19;45;48\n03/01/19;13:00;764;864;88,43;55;52\n03/01/19;13:30;764;864;88,43;48;49\n03/01/19;14:00;763;864;88,31;58;59\n03/01/19;14:30;761;864;88,08;69;69\n03/01/19;15:00;763;864;88,31;63;67\n03/01/19;15:30;761;864;88,08;87;83\n03/01/19;16:00;760;864;87,96;66;86\n03/01/19;16:30;744;864;86,11;83;84\n03/01/19;17:00;714;864;82,64;73;106\n03/01/19;17:30;667;864;77,20;67;111\n03/01/19;18:00;659;864;76,27;55;94\n03/01/19;18:30;536;864;62,04;40;133\n03/01/19;19:00;503;864;58,22;54;114\n03/01/19;19:30;484;864;56,02;59;44\n03/01/19;20:00;488;864;56,48;51;37\n03/01/19;20:30;498;864;57,64;23;26\n03/01/19;21:00;493;864;57,06;8;20\n03/01/19;21:30;464;864;53,70;6;31\n03/01/19;22:00;454;864;52,55;4;36\n03/01/19;22:30;399;864;46,18;4;35\n03/01/19;23:00;384;864;44,44;0;25\n03/01/19;23:30;359;864;41,55;2;16\n04/01/19;00:00;350;864;40,51;2;17\n04/01/19;00:30;337;864;39,00;1;9\n04/01/19;01:00;334;864;38,66;0;2\n04/01/19;01:30;332;864;38,43;0;1\n04/01/19;02:00;331;864;38,31;0;1\n04/01/19;02:30;332;864;38,43;1;0\n04/01/19;03:00;332;864;38,43;0;0\n04/01/19;03:30;332;864;38,43;0;0\n04/01/19;04:00;332;864;38,43;0;0\n04/01/19;04:30;332;864;38,43;0;0\n04/01/19;05:00;331;864;38,31;0;1\n04/01/19;05:30;332;864;38,43;2;1\n04/01/19;06:00;332;864;38,43;4;4\n04/01/19;06:30;332;864;38,43;6;5\n04/01/19;07:00;337;864;39,00;20;8\n04/01/19;07:30;360;864;41,67;22;5\n04/01/19;08:00;371;864;42,94;62;25\n04/01/19;08:30;468;864;54,17;90;12\n04/01/19;09:00;496;864;57,41;66;15\n04/01/19;09:30;574;864;66,44;78;23\n04/01/19;10:00;608;864;70,37;93;28\n04/01/19;10:30;708;864;81,94;110;43\n04/01/19;11:00;713;864;82,52;96;56\n04/01/19;11:30;762;864;88,19;77;69\n04/01/19;12:00;764;864;88,43;82;80\n04/01/19;12:30;764;864;88,43;50;49\n04/01/19;13:00;765;864;88,54;62;65\n04/01/19;13:30;765;864;88,54;69;66\n04/01/19;14:00;764;864;88,43;72;72\n04/01/19;14:30;764;864;88,43;85;83\n04/01/19;15:00;765;864;88,54;79;80\n04/01/19;15:30;756;864;87,50;79;87\n04/01/19;16:00;749;864;86,69;89;89\n04/01/19;16:30;747;864;86,46;94;103\n04/01/19;17:00;723;864;83,68;76;120\n04/01/19;17:30;656;864;75,93;71;117\n04/01/19;18:00;651;864;75,35;81;111\n04/01/19;18:30;585;864;67,71;54;100\n04/01/19;19:00;538;864;62,27;36;131\n04/01/19;19:30;477;864;55,21;43;55\n04/01/19;20:00;487;864;56,37;57;32\n04/01/19;20:30;516;864;59,72;42;24\n04/01/19;21:00;515;864;59,61;13;30\n04/01/19;21:30;504;864;58,33;23;21\n04/01/19;22:00;496;864;57,41;8;32\n04/01/19;22:30;458;864;53,01;6;31\n04/01/19;23:00;438;864;50,69;5;46\n04/01/19;23:30;393;864;45,49;3;33\n05/01/19;00:00;384;864;44,44;4;21\n05/01/19;00:30;356;864;41,20;5;26\n05/01/19;01:00;355;864;41,09;2;5\n05/01/19;01:30;350;864;40,51;0;3\n05/01/19;02:00;350;864;40,51;0;3\n05/01/19;02:30;347;864;40,16;0;0\n05/01/19;03:00;345;864;39,93;0;2\n05/01/19;03:30;345;864;39,93;0;0\n05/01/19;04:00;344;864;39,81;0;1\n05/01/19;04:30;343;864;39,70;0;1\n05/01/19;05:00;343;864;39,70;0;1\n05/01/19;05:30;342;864;39,58;0;0\n05/01/19;06:00;342;864;39,58;0;3\n05/01/19;06:30;322;864;37,27;1;3\n05/01/19;07:00;326;864;37,73;8;2\n05/01/19;07:30;330;864;38,19;4;1\n05/01/19;08:00;332;864;38,43;8;4\n05/01/19;08:30;350;864;40,51;21;6\n05/01/19;09:00;361;864;41,78;38;7\n05/01/19;09:30;428;864;49,54;70;12\n05/01/19;10:00;441;864;51,04;109;29\n05/01/19;10:30;598;864;69,21;114;31\n05/01/19;11:00;624;864;72,22;125;56\n05/01/19;11:30;703;864;81,37;113;78\n05/01/19;12:00;712;864;82,41;115;93\n05/01/19;12:30;743;864;86,00;94;73\n05/01/19;13:00;742;864;85,88;84;76\n05/01/19;13:30;756;864;87,50;70;67\n05/01/19;14:00;766;864;88,66;83;72\n05/01/19;14:30;767;864;88,77;76;78\n05/01/19;15:00;767;864;88,77;83;82\n05/01/19;15:30;763;864;88,31;95;95\n05/01/19;16:00;767;864;88,77;103;107\n05/01/19;16:30;761;864;88,08;105;104\n05/01/19;17:00;758;864;87,73;90;106\n05/01/19;17:30;723;864;83,68;102;129\n05/01/19;18:00;709;864;82,06;89;122\n05/01/19;18:30;598;864;69,21;49;141\n05/01/19;19:00;561;864;64,93;47;120\n05/01/19;19:30;502;864;58,10;51;70\n05/01/19;20:00;515;864;59,61;55;38\n05/01/19;20:30;539;864;62,38;48;22\n05/01/19;21:00;535;864;61,92;24;44\n05/01/19;21:30;502;864;58,10;10;33\n05/01/19;22:00;488;864;56,48;15;34\n05/01/19;22:30;450;864;52,08;7;38\n05/01/19;23:00;433;864;50,12;4;43\n05/01/19;23:30;402;864;46,53;6;30\n06/01/19;00:00;376;864;43,52;3;34\n06/01/19;00:30;331;864;38,31;2;26\n06/01/19;01:00;327;864;37,85;1;12\n06/01/19;01:30;314;864;36,34;3;6\n06/01/19;02:00;316;864;36,57;3;1\n06/01/19;02:30;315;864;36,46;1;2\n06/01/19;03:00;316;864;36,57;0;0\n06/01/19;03:30;315;864;36,46;0;1\n06/01/19;04:00;290;864;33,56;1;1\n06/01/19;04:30;290;864;33,56;0;0\n06/01/19;05:00;290;864;33,56;0;0\n06/01/19;05:30;290;864;33,56;0;1\n06/01/19;06:00;289;864;33,45;0;2\n06/01/19;06:30;287;864;33,22;0;0\n06/01/19;07:00;287;864;33,22;0;0\n06/01/19;07:30;286;864;33,10;1;1\n06/01/19;08:00;287;864;33,22;1;5\n06/01/19;08:30;277;864;32,06;0;7\n06/01/19;09:00;275;864;31,83;2;2\n06/01/19;09:30;277;864;32,06;3;3\n06/01/19;10:00;274;864;31,71;8;19\n06/01/19;10:30;265;864;30,67;9;5\n06/01/19;11:00;268;864;31,02;15;17\n06/01/19;11:30;271;864;31,37;9;5\n06/01/19;12:00;272;864;31,48;30;15\n06/01/19;12:30;304;864;35,19;31;10\n06/01/19;13:00;306;864;35,42;23;16\n06/01/19;13:30;316;864;36,57;16;12\n06/01/19;14:00;319;864;36,92;10;18\n06/01/19;14:30;303;864;35,07;15;26\n06/01/19;15:00;295;864;34,14;19;21\n06/01/19;15:30;292;864;33,80;21;25\n06/01/19;16:00;291;864;33,68;17;25\n06/01/19;16:30;281;864;32,52;11;20\n06/01/19;17:00;277;864;32,06;10;20\n06/01/19;17:30;256;864;29,63;11;20\n06/01/19;18:00;254;864;29,40;15;9\n06/01/19;18:30;263;864;30,44;12;8\n06/01/19;19:00;267;864;30,90;18;7\n06/01/19;19:30;279;864;32,29;11;10\n06/01/19;20:00;281;864;32,52;15;9\n06/01/19;20:30;286;864;33,10;7;5\n06/01/19;21:00;285;864;32,99;2;8\n06/01/19;21:30;282;864;32,64;5;4\n06/01/19;22:00;281;864;32,52;0;5\n06/01/19;22:30;277;864;32,06;3;5\n06/01/19;23:00;275;864;31,83;1;1\n06/01/19;23:30;277;864;32,06;3;1\n07/01/19;00:00;278;864;32,18;2;1\n07/01/19;00:30;278;864;32,18;0;0\n07/01/19;01:00;278;864;32,18;0;0\n07/01/19;01:30;278;864;32,18;0;0\n07/01/19;02:00;298;864;34,49;0;0\n07/01/19;02:30;298;864;34,49;0;1\n07/01/19;03:00;297;864;34,38;0;0\n07/01/19;03:30;297;864;34,38;0;0\n07/01/19;04:00;297;864;34,38;0;0\n07/01/19;04:30;297;864;34,38;1;0\n07/01/19;05:00;298;864;34,49;1;1\n07/01/19;05:30;300;864;34,72;5;0\n07/01/19;06:00;303;864;35,07;2;2\n07/01/19;06:30;305;864;35,30;10;2\n07/01/19;07:00;309;864;35,76;18;9\n07/01/19;07:30;323;864;37,38;29;11\n07/01/19;08:00;342;864;39,58;58;17\n07/01/19;08:30;371;864;42,94;90;7\n07/01/19;09:00;482;864;55,79;90;14\n07/01/19;09:30;561;864;64,93;51;12\n07/01/19;10:00;607;864;70,25;67;24\n07/01/19;10:30;636;864;73,61;51;24\n07/01/19;11:00;653;864;75,58;46;27\n07/01/19;11:30;674;864;78,01;60;45\n07/01/19;12:00;688;864;79,63;79;55\n07/01/19;12:30;714;864;82,64;57;43\n07/01/19;13:00;718;864;83,10;44;58\n07/01/19;13:30;711;864;82,29;66;56\n07/01/19;14:00;714;864;82,64;77;61\n07/01/19;14:30;749;864;86,69;74;55\n07/01/19;15:00;750;864;86,81;57;78\n07/01/19;15:30;724;864;83,80;64;80\n07/01/19;16:00;709;864;82,06;46;75\n07/01/19;16:30;664;864;76,85;50;74\n07/01/19;17:00;652;864;75,46;45;84\n07/01/19;17:30;606;864;70,14;49;83\n07/01/19;18:00;575;864;66,55;34;88\n07/01/19;18:30;505;864;58,45;38;83\n07/01/19;19:00;481;864;55,67;22;89\n07/01/19;19:30;413;864;47,80;31;46\n07/01/19;20:00;402;864;46,53;16;30\n07/01/19;20:30;384;864;44,44;11;17\n07/01/19;21:00;379;864;43,87;6;12\n07/01/19;21:30;374;864;43,29;4;14\n07/01/19;22:00;365;864;42,25;3;11\n07/01/19;22:30;357;864;41,32;3;8\n07/01/19;23:00;350;864;40,51;1;6\n07/01/19;23:30;343;864;39,70;0;5\n08/01/19;00:00;342;864;39,58;0;5\n08/01/19;00:30;336;864;38,89;0;1\n08/01/19;01:00;336;864;38,89;0;0\n08/01/19;01:30;336;864;38,89;0;0\n08/01/19;02:00;336;864;38,89;0;1\n08/01/19;02:30;332;864;38,43;0;2\n08/01/19;03:00;332;864;38,43;0;0\n08/01/19;03:30;332;864;38,43;0;0\n08/01/19;04:00;332;864;38,43;0;0\n08/01/19;04:30;332;864;38,43;1;0\n08/01/19;05:00;333;864;38,54;0;0\n08/01/19;05:30;335;864;38,77;7;0\n08/01/19;06:00;340;864;39,35;3;2\n08/01/19;06:30;338;864;39,12;3;4\n08/01/19;07:00;342;864;39,58;20;12\n08/01/19;07:30;351;864;40,63;22;13\n08/01/19;08:00;362;864;41,90;45;24\n08/01/19;08:30;418;864;48,38;94;19\n08/01/19;09:00;462;864;53,47;103;12\n08/01/19;09:30;581;864;67,25;78;16\n08/01/19;10:00;615;864;71,18;86;18\n08/01/19;10:30;691;864;79,98;82;54\n08/01/19;11:00;719;864;83,22;88;52\n08/01/19;11:30;738;864;85,42;75;72\n08/01/19;12:00;742;864;85,88;55;54\n08/01/19;12:30;741;864;85,76;36;36\n08/01/19;13:00;740;864;85,65;33;34\n08/01/19;13:30;741;864;85,76;48;47\n08/01/19;14:00;740;864;85,65;56;58\n08/01/19;14:30;739;864;85,53;63;64\n08/01/19;15:00;742;864;85,88;56;59\n08/01/19;15:30;733;864;84,84;56;74\n08/01/19;16:00;698;864;80,79;61;77\n08/01/19;16:30;685;864;79,28;46;79\n08/01/19;17:00;660;864;76,39;43;88\n08/01/19;17:30;603;864;69,79;44;77\n08/01/19;18:00;588;864;68,06;51;71\n08/01/19;18:30;584;864;67,59;52;99\n08/01/19;19:00;516;864;59,72;46;102\n08/01/19;19:30;460;864;53,24;60;58\n08/01/19;20:00;473;864;54,75;26;30\n08/01/19;20:30;458;864;53,01;18;25\n08/01/19;21:00;454;864;52,55;7;27\n08/01/19;21:30;433;864;50,12;7;16\n08/01/19;22:00;427;864;49,42;3;30\n08/01/19;22:30;387;864;44,79;5;25\n08/01/19;23:00;372;864;43,06;3;22\n08/01/19;23:30;355;864;41,09;3;15\n09/01/19;00:00;349;864;40,39;1;13\n09/01/19;00:30;336;864;38,89;0;3\n09/01/19;01:00;335;864;38,77;1;5\n09/01/19;01:30;329;864;38,08;0;2\n09/01/19;02:00;329;864;38,08;0;0\n09/01/19;02:30;329;864;38,08;0;0\n09/01/19;03:00;329;864;38,08;0;0\n09/01/19;03:30;329;864;38,08;0;0\n09/01/19;04:00;330;864;38,19;0;1\n09/01/19;04:30;329;864;38,08;0;0\n09/01/19;05:00;329;864;38,08;1;0\n09/01/19;05:30;333;864;38,54;9;0\n09/01/19;06:00;339;864;39,24;2;2\n09/01/19;06:30;339;864;39,24;10;5\n09/01/19;07:00;352;864;40,74;23;20\n09/01/19;07:30;361;864;41,78;31;7\n09/01/19;08:00;373;864;43,17;56;22\n09/01/19;08:30;409;864;47,34;101;14\n09/01/19;09:00;510;864;59,03;114;17\n09/01/19;09:30;636;864;73,61;107;16\n09/01/19;10:00;689;864;79,75;103;37\n09/01/19;10:30;743;864;86,00;55;53\n09/01/19;11:00;744;864;86,11;55;55\n09/01/19;11:30;737;864;85,30;55;54\n09/01/19;12:00;744;864;86,11;61;62\n09/01/19;12:30;742;864;85,88;56;53\n09/01/19;13:00;744;864;86,11;48;52\n09/01/19;13:30;742;864;85,88;46;44\n09/01/19;14:00;742;864;85,88;59;62\n09/01/19;14:30;739;864;85,53;51;52\n09/01/19;15:00;739;864;85,53;50;50\n09/01/19;15:30;742;864;85,88;61;67\n09/01/19;16:00;740;864;85,65;63;66\n09/01/19;16:30;739;864;85,53;66;80\n09/01/19;17:00;724;864;83,80;71;75\n09/01/19;17:30;709;864;82,06;65;71\n09/01/19;18:00;707;864;81,83;61;108\n09/01/19;18:30;614;864;71,06;50;108\n09/01/19;19:00;594;864;68,75;43;135\n09/01/19;19:30;494;864;57,18;50;61\n09/01/19;20:00;497;864;57,52;46;37\n09/01/19;20:30;499;864;57,75;16;29\n09/01/19;21:00;494;864;57,18;6;16\n09/01/19;21:30;480;864;55,56;7;22\n09/01/19;22:00;471;864;54,51;6;27\n09/01/19;22:30;426;864;49,31;2;33\n09/01/19;23:00;415;864;48,03;1;27\n09/01/19;23:30;382;864;44,21;2;17\n10/01/19;00:00;375;864;43,40;1;4\n10/01/19;00:30;370;864;42,82;0;4\n10/01/19;01:00;368;864;42,59;1;7\n10/01/19;01:30;362;864;41,90;0;2\n10/01/19;02:00;362;864;41,90;0;0\n10/01/19;02:30;362;864;41,90;0;1\n10/01/19;03:00;361;864;41,78;0;0\n10/01/19;03:30;361;864;41,78;0;1\n10/01/19;04:00;361;864;41,78;0;1\n10/01/19;04:30;360;864;41,67;0;1\n10/01/19;05:00;359;864;41,55;0;0\n10/01/19;05:30;360;864;41,67;7;0\n10/01/19;06:00;366;864;42,36;3;1\n10/01/19;06:30;369;864;42,71;9;5\n10/01/19;07:00;372;864;43,06;17;5\n10/01/19;07:30;391;864;45,25;29;12\n10/01/19;08:00;403;864;46,64;53;24\n10/01/19;08:30;468;864;54,17;85;22\n10/01/19;09:00;512;864;59,26;121;19\n10/01/19;09:30;639;864;73,96;107;30\n10/01/19;10:00;686;864;79,40;103;25\n10/01/19;10:30;751;864;86,92;40;37\n10/01/19;11:00;752;864;87,04;40;40\n10/01/19;11:30;750;864;86,81;54;54\n10/01/19;12:00;750;864;86,81;52;50\n10/01/19;12:30;753;864;87,15;41;41\n10/01/19;13:00;752;864;87,04;37;41\n10/01/19;13:30;753;864;87,15;60;58\n10/01/19;14:00;751;864;86,92;56;47\n10/01/19;14:30;753;864;87,15;39;39\n10/01/19;15:00;749;864;86,69;66;66\n10/01/19;15:30;749;864;86,69;65;65\n10/01/19;16:00;743;864;86,00;65;82\n10/01/19;16:30;728;864;84,26;73;70\n10/01/19;17:00;737;864;85,30;62;73\n10/01/19;17:30;708;864;81,94;73;101\n10/01/19;18:00;692;864;80,09;64;105\n10/01/19;18:30;633;864;73,26;78;108\n10/01/19;19:00;614;864;71,06;59;126\n10/01/19;19:30;532;864;61,57;63;79\n10/01/19;20:00;548;864;63,43;63;34\n10/01/19;20:30;578;864;66,90;31;22\n10/01/19;21:00;573;864;66,32;9;29\n10/01/19;21:30;549;864;63,54;8;33\n10/01/19;22:00;535;864;61,92;4;42\n10/01/19;22:30;461;864;53,36;2;53\n10/01/19;23:00;445;864;51,50;4;27\n10/01/19;23:30;398;864;46,06;3;35\n11/01/19;00:00;389;864;45,02;1;15\n11/01/19;00:30;374;864;43,29;1;8\n11/01/19;01:00;370;864;42,82;0;1\n11/01/19;01:30;364;864;42,13;0;5\n11/01/19;02:00;364;864;42,13;0;2\n11/01/19;02:30;362;864;41,90;0;1\n11/01/19;03:00;361;864;41,78;2;2\n11/01/19;03:30;361;864;41,78;0;1\n11/01/19;04:00;360;864;41,67;0;0\n11/01/19;04:30;360;864;41,67;0;0\n11/01/19;05:00;360;864;41,67;1;2\n11/01/19;05:30;360;864;41,67;4;1\n11/01/19;06:00;363;864;42,01;5;3\n11/01/19;06:30;362;864;41,90;7;8\n11/01/19;07:00;364;864;42,13;14;9\n11/01/19;07:30;388;864;44,91;45;24\n11/01/19;08:00;391;864;45,25;43;27\n11/01/19;08:30;450;864;52,08;92;20\n11/01/19;09:00;485;864;56,13;104;19\n11/01/19;09:30;612;864;70,83;111;21\n11/01/19;10:00;669;864;77,43;110;21\n11/01/19;10:30;755;864;87,38;73;59\n11/01/19;11:00;756;864;87,50;54;60\n11/01/19;11:30;749;864;86,69;74;67\n11/01/19;12:00;752;864;87,04;65;69\n11/01/19;12:30;749;864;86,69;43;43\n11/01/19;13:00;748;864;86,57;48;47\n11/01/19;13:30;749;864;86,69;58;59\n11/01/19;14:00;747;864;86,46;61;62\n11/01/19;14:30;747;864;86,46;77;72\n11/01/19;15:00;749;864;86,69;69;71\n11/01/19;15:30;749;864;86,69;64;66\n11/01/19;16:00;741;864;85,76;82;94\n11/01/19;16:30;735;864;85,07;73;79\n11/01/19;17:00;716;864;82,87;73;94\n11/01/19;17:30;677;864;78,36;70;113\n11/01/19;18:00;663;864;76,74;65;106\n11/01/19;18:30;580;864;67,13;55;118\n11/01/19;19:00;552;864;63,89;53;115\n11/01/19;19:30;476;864;55,09;57;74\n11/01/19;20:00;477;864;55,21;56;28\n11/01/19;20:30;524;864;60,65;60;22\n11/01/19;21:00;535;864;61,92;24;33\n11/01/19;21:30;528;864;61,11;23;29\n11/01/19;22:00;524;864;60,65;7;45\n11/01/19;22:30;475;864;54,98;5;39\n11/01/19;23:00;451;864;52,20;9;39\n11/01/19;23:30;401;864;46,41;4;33\n12/01/19;00:00;393;864;45,49;1;26\n12/01/19;00:30;360;864;41,67;3;24\n12/01/19;01:00;348;864;40,28;2;9\n12/01/19;01:30;337;864;39,00;0;10\n12/01/19;02:00;332;864;38,43;1;6\n12/01/19;02:30;327;864;37,85;2;2\n12/01/19;03:00;324;864;37,50;0;4\n12/01/19;03:30;323;864;37,38;0;0\n12/01/19;04:00;322;864;37,27;0;2\n12/01/19;04:30;320;864;37,04;1;2\n12/01/19;05:00;319;864;36,92;1;2\n12/01/19;05:30;320;864;37,04;1;0\n12/01/19;06:00;320;864;37,04;1;3\n12/01/19;06:30;319;864;36,92;1;0\n12/01/19;07:00;320;864;37,04;5;1\n12/01/19;07:30;325;864;37,62;5;1\n12/01/19;08:00;328;864;37,96;12;7\n12/01/19;08:30;338;864;39,12;21;6\n12/01/19;09:00;351;864;40,63;63;11\n12/01/19;09:30;453;864;52,43;102;12\n12/01/19;10:00;504;864;58,33;117;21\n12/01/19;10:30;638;864;73,84;114;37\n12/01/19;11:00;665;864;76,97;120;59\n12/01/19;11:30;739;864;85,53;101;83\n12/01/19;12:00;744;864;86,11;113;90\n12/01/19;12:30;759;864;87,85;69;66\n12/01/19;13:00;763;864;88,31;71;72\n12/01/19;13:30;762;864;88,19;64;62\n12/01/19;14:00;764;864;88,43;58;60\n12/01/19;14:30;759;864;87,85;65;74\n12/01/19;15:00;754;864;87,27;81;71\n12/01/19;15:30;743;864;86,00;71;96\n12/01/19;16:00;743;864;86,00;103;89\n12/01/19;16:30;747;864;86,46;93;90\n12/01/19;17:00;752;864;87,04;63;93\n12/01/19;17:30;692;864;80,09;47;79\n12/01/19;18:00;678;864;78,47;78;148\n12/01/19;18:30;601;864;69,56;64;91\n12/01/19;19:00;590;864;68,29;52;113\n12/01/19;19:30;512;864;59,26;64;69\n12/01/19;20:00;528;864;61,11;70;35\n12/01/19;20:30;575;864;66,55;54;29\n12/01/19;21:00;585;864;67,71;35;29\n12/01/19;21:30;596;864;68,98;34;33\n12/01/19;22:00;591;864;68,40;15;53\n12/01/19;22:30;532;864;61,57;8;46\n12/01/19;23:00;508;864;58,80;4;47\n12/01/19;23:30;446;864;51,62;5;48\n13/01/19;00:00;423;864;48,96;3;38\n13/01/19;00:30;372;864;43,06;2;31\n13/01/19;01:00;364;864;42,13;2;22\n13/01/19;01:30;339;864;39,24;1;11\n13/01/19;02:00;336;864;38,89;1;10\n13/01/19;02:30;325;864;37,62;1;5\n13/01/19;03:00;323;864;37,38;0;1\n13/01/19;03:30;322;864;37,27;0;2\n13/01/19;04:00;321;864;37,15;0;2\n13/01/19;04:30;316;864;36,57;0;3\n13/01/19;05:00;316;864;36,57;0;0\n13/01/19;05:30;315;864;36,46;1;1\n13/01/19;06:00;316;864;36,57;0;1\n13/01/19;06:30;315;864;36,46;0;0\n13/01/19;07:00;315;864;36,46;0;0\n13/01/19;07:30;314;864;36,34;0;1\n13/01/19;08:00;313;864;36,23;0;2\n13/01/19;08:30;310;864;35,88;3;5\n13/01/19;09:00;311;864;36,00;1;4\n13/01/19;09:30;304;864;35,19;6;7\n13/01/19;10:00;305;864;35,30;22;14\n13/01/19;10:30;337;864;39,00;56;15\n13/01/19;11:00;360;864;41,67;56;18\n13/01/19;11:30;409;864;47,34;64;46\n13/01/19;12:00;409;864;47,34;49;45\n13/01/19;12:30;429;864;49,65;48;33\n13/01/19;13:00;435;864;50,35;51;28\n13/01/19;13:30;460;864;53,24;39;31\n13/01/19;14:00;461;864;53,36;42;32\n13/01/19;14:30;475;864;54,98;56;44\n13/01/19;15:00;486;864;56,25;59;56\n13/01/19;15:30;485;864;56,13;64;66\n13/01/19;16:00;483;864;55,90;69;72\n13/01/19;16:30;484;864;56,02;65;62\n13/01/19;17:00;478;864;55,32;45;71\n13/01/19;17:30;427;864;49,42;30;81\n13/01/19;18:00;405;864;46,88;19;65\n13/01/19;18:30;344;864;39,81;19;57\n13/01/19;19:00;317;864;36,69;10;27\n13/01/19;19:30;311;864;36,00;22;11\n13/01/19;20:00;318;864;36,81;21;15\n13/01/19;20:30;321;864;37,15;7;7\n13/01/19;21:00;323;864;37,38;5;5\n13/01/19;21:30;319;864;36,92;4;8\n13/01/19;22:00;319;864;36,92;3;9\n13/01/19;22:30;307;864;35,53;0;7\n13/01/19;23:00;302;864;34,95;3;7\n13/01/19;23:30;302;864;34,95;1;0\n14/01/19;00:00;302;864;34,95;1;1\n14/01/19;00:30;300;864;34,72;0;3\n14/01/19;01:00;299;864;34,61;0;0\n14/01/19;01:30;299;864;34,61;0;0\n14/01/19;02:00;299;864;34,61;0;1\n14/01/19;02:30;298;864;34,49;0;0\n14/01/19;03:00;298;864;34,49;0;0\n14/01/19;03:30;298;864;34,49;0;0\n14/01/19;04:00;298;864;34,49;0;0\n14/01/19;04:30;298;864;34,49;0;0\n14/01/19;05:00;298;864;34,49;0;0\n14/01/19;05:30;298;864;34,49;6;0\n14/01/19;06:00;305;864;35,30;2;5\n14/01/19;06:30;298;864;34,49;8;5\n14/01/19;07:00;305;864;35,30;10;5\n14/01/19;07:30;311;864;36,00;29;14\n14/01/19;08:00;326;864;37,73;46;15\n14/01/19;08:30;382;864;44,21;76;23\n14/01/19;09:00;419;864;48,50;99;10\n14/01/19;09:30;532;864;61,57;80;17\n14/01/19;10:00;571;864;66,09;84;24\n14/01/19;10:30;654;864;75,69;85;33\n14/01/19;11:00;676;864;78,24;74;43\n14/01/19;11:30;720;864;83,33;79;62\n14/01/19;12:00;726;864;84,03;96;62\n14/01/19;12:30;757;864;87,62;57;52\n14/01/19;13:00;752;864;87,04;48;57\n14/01/19;13:30;753;864;87,15;80;72\n14/01/19;14:00;755;864;87,38;73;74\n14/01/19;14:30;755;864;87,38;66;65\n14/01/19;15:00;757;864;87,62;67;79\n14/01/19;15:30;747;864;86,46;75;91\n14/01/19;16:00;725;864;83,91;77;88\n14/01/19;16:30;691;864;79,98;65;96\n14/01/19;17:00;680;864;78,70;58;88\n14/01/19;17:30;612;864;70,83;48;101\n14/01/19;18:00;590;864;68,29;44;87\n14/01/19;18:30;502;864;58,10;34;87\n14/01/19;19:00;490;864;56,71;32;102\n14/01/19;19:30;392;864;45,37;30;73\n14/01/19;20:00;387;864;44,79;27;23\n14/01/19;20:30;388;864;44,91;12;20\n14/01/19;21:00;385;864;44,56;7;17\n14/01/19;21:30;370;864;42,82;1;11\n14/01/19;22:00;364;864;42,13;5;18\n14/01/19;22:30;341;864;39,47;1;18\n14/01/19;23:00;334;864;38,66;0;6\n14/01/19;23:30;330;864;38,19;2;3\n15/01/19;00:00;329;864;38,08;0;0\n15/01/19;00:30;330;864;38,19;1;0\n15/01/19;01:00;330;864;38,19;0;0\n15/01/19;01:30;330;864;38,19;0;0\n15/01/19;02:00;330;864;38,19;0;0\n15/01/19;02:30;330;864;38,19;0;0\n15/01/19;03:00;330;864;38,19;0;0\n15/01/19;03:30;330;864;38,19;0;0\n15/01/19;04:00;330;864;38,19;0;0\n15/01/19;04:30;329;864;38,08;0;0\n15/01/19;05:00;329;864;38,08;2;1\n15/01/19;05:30;330;864;38,19;4;1\n15/01/19;06:00;334;864;38,66;2;1\n15/01/19;06:30;338;864;39,12;11;8\n15/01/19;07:00;341;864;39,47;28;17\n15/01/19;07:30;352;864;40,74;26;18\n15/01/19;08:00;359;864;41,55;62;29\n15/01/19;08:30;434;864;50,23;90;10\n15/01/19;09:00;491;864;56,83;119;14\n15/01/19;09:30;564;864;65,28;107;24\n15/01/19;10:00;693;864;80,21;110;30\n15/01/19;10:30;743;864;86,00;52;46\n15/01/19;11:00;744;864;86,11;50;49\n15/01/19;11:30;746;864;86,34;52;50\n15/01/19;12:00;743;864;86,00;57;59\n15/01/19;12:30;745;864;86,23;53;46\n15/01/19;13:00;747;864;86,46;37;38\n15/01/19;13:30;749;864;86,69;58;57\n15/01/19;14:00;756;864;87,50;73;64\n15/01/19;14:30;756;864;87,50;54;58\n15/01/19;15:00;755;864;87,38;69;69\n15/01/19;15:30;752;864;87,04;67;70\n15/01/19;16:00;747;864;86,46;58;85\n15/01/19;16:30;714;864;82,64;68;81\n15/01/19;17:00;710;864;82,18;59;93\n15/01/19;17:30;658;864;76,16;70;91\n15/01/19;18:00;639;864;73,96;66;93\n15/01/19;18:30;575;864;66,55;54;116\n15/01/19;19:00;523;864;60,53;48;128\n15/01/19;19:30;483;864;55,90;75;75\n15/01/19;20:00;504;864;58,33;50;26\n15/01/19;20:30;502;864;58,10;22;32\n15/01/19;21:00;495;864;57,29;10;25\n15/01/19;21:30;468;864;54,17;9;28\n15/01/19;22:00;454;864;52,55;0;34\n15/01/19;22:30;400;864;46,30;2;38\n15/01/19;23:00;378;864;43,75;4;35\n15/01/19;23:30;341;864;39,47;1;26\n16/01/19;00:00;332;864;38,43;0;8\n16/01/19;00:30;329;864;38,08;0;2\n16/01/19;01:00;327;864;37,85;0;2\n16/01/19;01:30;326;864;37,73;0;0\n16/01/19;02:00;326;864;37,73;0;0\n16/01/19;02:30;326;864;37,73;0;0\n16/01/19;03:00;326;864;37,73;0;0\n16/01/19;03:30;326;864;37,73;0;0\n16/01/19;04:00;326;864;37,73;0;0\n16/01/19;04:30;328;864;37,96;2;0\n16/01/19;05:00;328;864;37,96;0;0\n16/01/19;05:30;334;864;38,66;6;0\n16/01/19;06:00;334;864;38,66;1;1\n16/01/19;06:30;333;864;38,54;10;11\n16/01/19;07:00;333;864;38,54;18;13\n16/01/19;07:30;346;864;40,05;27;18\n16/01/19;08:00;345;864;39,93;45;19\n16/01/19;08:30;427;864;49,42;80;18\n16/01/19;09:00;464;864;53,70;95;16\n16/01/19;09:30;565;864;65,39;81;22\n16/01/19;10:00;646;864;74,77;111;26\n16/01/19;10:30;702;864;81,25;89;32\n16/01/19;11:00;731;864;84,61;81;55\n16/01/19;11:30;751;864;86,92;82;67\n16/01/19;12:00;755;864;87,38;72;75\n16/01/19;12:30;756;864;87,50;57;53\n16/01/19;13:00;757;864;87,62;54;53\n16/01/19;13:30;756;864;87,50;71;70\n16/01/19;14:00;757;864;87,62;75;81\n16/01/19;14:30;757;864;87,62;71;64\n16/01/19;15:00;760;864;87,96;80;82\n16/01/19;15:30;760;864;87,96;64;60\n16/01/19;16:00;752;864;87,04;74;96\n16/01/19;16:30;720;864;83,33;82;96\n16/01/19;17:00;691;864;79,98;62;112\n16/01/19;17:30;660;864;76,39;61;84\n16/01/19;18:00;620;864;71,76;62;104\n16/01/19;18:30;588;864;68,06;53;94\n16/01/19;19:00;501;864;57,99;52;123\n16/01/19;19:30;496;864;57,41;70;70\n16/01/19;20:00;509;864;58,91;45;30\n16/01/19;20:30;511;864;59,14;19;20\n16/01/19;21:00;504;864;58,33;7;23\n16/01/19;21:30;477;864;55,21;9;25\n16/01/19;22:00;449;864;51,97;8;36\n16/01/19;22:30;412;864;47,69;5;43\n16/01/19;23:00;411;864;47,57;5;29\n16/01/19;23:30;372;864;43,06;0;17\n17/01/19;00:00;365;864;42,25;3;7\n17/01/19;00:30;351;864;40,63;2;13\n17/01/19;01:00;351;864;40,63;0;1\n17/01/19;01:30;350;864;40,51;0;1\n17/01/19;02:00;349;864;40,39;0;0\n17/01/19;02:30;349;864;40,39;0;0\n17/01/19;03:00;349;864;40,39;0;0\n17/01/19;03:30;349;864;40,39;0;0\n17/01/19;04:00;349;864;40,39;1;0\n17/01/19;04:30;352;864;40,74;2;0\n17/01/19;05:00;352;864;40,74;0;1\n17/01/19;05:30;353;864;40,86;4;1\n17/01/19;06:00;355;864;41,09;5;4\n17/01/19;06:30;360;864;41,67;7;3\n17/01/19;07:00;362;864;41,90;21;16\n17/01/19;07:30;370;864;42,82;28;19\n17/01/19;08:00;374;864;43,29;54;26\n17/01/19;08:30;463;864;53,59;95;21\n17/01/19;09:00;479;864;55,44;122;12\n17/01/19;09:30;649;864;75,12;107;29\n17/01/19;10:00;701;864;81,13;116;24\n17/01/19;10:30;751;864;86,92;53;57\n17/01/19;11:00;754;864;87,27;42;42\n17/01/19;11:30;753;864;87,15;54;57\n17/01/19;12:00;752;864;87,04;58;52\n17/01/19;12:30;750;864;86,81;38;38\n17/01/19;13:00;752;864;87,04;38;40\n17/01/19;13:30;749;864;86,69;58;59\n17/01/19;14:00;750;864;86,81;61;61\n17/01/19;14:30;749;864;86,69;55;57\n17/01/19;15:00;747;864;86,46;61;59\n17/01/19;15:30;736;864;85,19;68;80\n17/01/19;16:00;745;864;86,23;77;77\n17/01/19;16:30;723;864;83,68;79;89\n17/01/19;17:00;723;864;83,68;61;78\n17/01/19;17:30;674;864;78,01;56;97\n17/01/19;18:00;662;864;76,62;64;94\n17/01/19;18:30;608;864;70,37;80;113\n17/01/19;19:00;582;864;67,36;62;114\n17/01/19;19:30;553;864;64,00;67;66\n17/01/19;20:00;566;864;65,51;55;36\n17/01/19;20:30;567;864;65,63;26;32\n17/01/19;21:00;558;864;64,58;17;32\n17/01/19;21:30;537;864;62,15;9;31\n17/01/19;22:00;524;864;60,65;6;34\n17/01/19;22:30;465;864;53,82;4;46\n17/01/19;23:00;447;864;51,74;4;39\n17/01/19;23:30;398;864;46,06;1;25\n18/01/19;00:00;384;864;44,44;2;19\n18/01/19;00:30;363;864;42,01;0;17\n18/01/19;01:00;361;864;41,78;0;8\n18/01/19;01:30;353;864;40,86;0;2\n18/01/19;02:00;353;864;40,86;0;0\n18/01/19;02:30;352;864;40,74;0;1\n18/01/19;03:00;354;864;40,97;0;0\n18/01/19;03:30;354;864;40,97;0;0\n18/01/19;04:00;354;864;40,97;1;0\n18/01/19;04:30;355;864;41,09;0;0\n18/01/19;05:00;355;864;41,09;0;0\n18/01/19;05:30;356;864;41,20;3;1\n18/01/19;06:00;357;864;41,32;2;2\n18/01/19;06:30;363;864;42,01;13;4\n18/01/19;07:00;372;864;43,06;20;18\n18/01/19;07:30;385;864;44,56;33;16\n18/01/19;08:00;392;864;45,37;71;23\n18/01/19;08:30;510;864;59,03;103;13\n18/01/19;09:00;547;864;63,31;105;24\n18/01/19;09:30;672;864;77,78;97;17\n18/01/19;10:00;716;864;82,87;84;32\n18/01/19;10:30;746;864;86,34;65;53\n18/01/19;11:00;748;864;86,57;53;52\n18/01/19;11:30;746;864;86,34;57;57\n18/01/19;12:00;748;864;86,57;71;73\n18/01/19;12:30;749;864;86,69;42;38\n18/01/19;13:00;749;864;86,69;45;41\n18/01/19;13:30;751;864;86,92;52;53\n18/01/19;14:00;751;864;86,92;77;84\n18/01/19;14:30;750;864;86,81;60;55\n18/01/19;15:00;750;864;86,81;61;64\n18/01/19;15:30;743;864;86,00;83;86\n18/01/19;16:00;742;864;85,88;68;81\n18/01/19;16:30;718;864;83,10;74;83\n18/01/19;17:00;695;864;80,44;71;110\n18/01/19;17:30;660;864;76,39;67;94\n18/01/19;18:00;649;864;75,12;60;111\n18/01/19;18:30;556;864;64,35;52;109\n18/01/19;19:00;530;864;61,34;64;103\n18/01/19;19:30;514;864;59,49;67;58\n18/01/19;20:00;524;864;60,65;67;22\n18/01/19;20:30;581;864;67,25;48;25\n18/01/19;21:00;595;864;68,87;32;21\n18/01/19;21:30;589;864;68,17;21;29\n18/01/19;22:00;579;864;67,01;10;42\n18/01/19;22:30;579;864;67,01;6;40\n18/01/19;23:00;508;864;58,80;5;33\n18/01/19;23:30;466;864;53,94;6;35\n19/01/19;00:00;453;864;52,43;1;30\n19/01/19;00:30;405;864;46,88;3;36\n19/01/19;01:00;393;864;45,49;2;21\n19/01/19;01:30;372;864;43,06;0;10\n19/01/19;02:00;369;864;42,71;0;4\n19/01/19;02:30;368;864;42,59;1;1\n19/01/19;03:00;368;864;42,59;0;2\n19/01/19;03:30;364;864;42,13;0;2\n19/01/19;04:00;358;864;41,44;0;7\n19/01/19;04:30;355;864;41,09;0;0\n19/01/19;05:00;354;864;40,97;0;1\n19/01/19;05:30;355;864;41,09;1;0\n19/01/19;06:00;352;864;40,74;0;4\n19/01/19;06:30;349;864;40,39;1;3\n19/01/19;07:00;348;864;40,28;4;3\n19/01/19;07:30;356;864;41,20;8;3\n19/01/19;08:00;354;864;40,97;8;12\n19/01/19;08:30;363;864;42,01;23;7\n19/01/19;09:00;382;864;44,21;48;9\n19/01/19;09:30;478;864;55,32;95;13\n19/01/19;10:00;523;864;60,53;119;20\n19/01/19;10:30;652;864;75,46;121;43\n19/01/19;11:00;662;864;76,62;97;48\n19/01/19;11:30;744;864;86,11;104;67\n19/01/19;12:00;751;864;86,92;80;79\n19/01/19;12:30;748;864;86,57;73;76\n19/01/19;13:00;749;864;86,69;62;59\n19/01/19;13:30;749;864;86,69;62;62\n19/01/19;14:00;748;864;86,57;47;48\n19/01/19;14:30;705;864;81,60;46;77\n19/01/19;15:00;731;864;84,61;104;70\n19/01/19;15:30;746;864;86,34;66;69\n19/01/19;16:00;746;864;86,34;74;71\n19/01/19;16:30;743;864;86,00;70;78\n19/01/19;17:00;740;864;85,65;70;60\n19/01/19;17:30;745;864;86,23;48;51\n19/01/19;18:00;738;864;85,42;60;108\n19/01/19;18:30;635;864;73,50;59;108\n19/01/19;19:00;599;864;69,33;58;121\n19/01/19;19:30;562;864;65,05;67;66\n19/01/19;20:00;574;864;66,44;63;38\n19/01/19;20:30;640;864;74,07;76;26\n19/01/19;21:00;647;864;74,88;32;32\n19/01/19;21:30;641;864;74,19;24;29\n19/01/19;22:00;630;864;72,92;15;48\n19/01/19;22:30;571;864;66,09;13;47\n19/01/19;23:00;545;864;63,08;9;55\n19/01/19;23:30;469;864;54,28;3;57\n20/01/19;00:00;457;864;52,89;2;34\n20/01/19;00:30;418;864;48,38;5;28\n20/01/19;01:00;405;864;46,88;1;16\n20/01/19;01:30;380;864;43,98;1;21\n20/01/19;02:00;373;864;43,17;1;13\n20/01/19;02:30;360;864;41,67;2;8\n20/01/19;03:00;361;864;41,78;2;0\n20/01/19;03:30;361;864;41,78;0;1\n20/01/19;04:00;360;864;41,67;1;2\n20/01/19;04:30;357;864;41,32;0;3\n20/01/19;05:00;357;864;41,32;0;0\n20/01/19;05:30;356;864;41,20;1;2\n20/01/19;06:00;352;864;40,74;0;6\n20/01/19;06:30;347;864;40,16;1;4\n20/01/19;07:00;345;864;39,93;0;2\n20/01/19;07:30;343;864;39,70;1;2\n20/01/19;08:00;341;864;39,47;0;4\n20/01/19;08:30;335;864;38,77;2;6\n20/01/19;09:00;333;864;38,54;2;8\n20/01/19;09:30;325;864;37,62;4;8\n20/01/19;10:00;320;864;37,04;12;21\n20/01/19;10:30;327;864;37,85;23;11\n20/01/19;11:00;329;864;38,08;28;14\n20/01/19;11:30;355;864;41,09;35;20\n20/01/19;12:00;363;864;42,01;48;27\n20/01/19;12:30;396;864;45,83;50;28\n20/01/19;13:00;408;864;47,22;30;12\n20/01/19;13:30;427;864;49,42;34;23\n20/01/19;14:00;431;864;49,88;28;21\n20/01/19;14:30;431;864;49,88;36;43\n20/01/19;15:00;433;864;50,12;32;39\n20/01/19;15:30;418;864;48,38;46;47\n20/01/19;16:00;417;864;48,26;20;55\n20/01/19;16:30;366;864;42,36;20;48\n20/01/19;17:00;359;864;41,55;23;35\n20/01/19;17:30;345;864;39,93;16;36\n20/01/19;18:00;334;864;38,66;13;29\n20/01/19;18:30;324;864;37,50;17;19\n20/01/19;19:00;328;864;37,96;16;20\n20/01/19;19:30;324;864;37,50;8;4\n20/01/19;20:00;326;864;37,73;9;10\n20/01/19;20:30;325;864;37,62;10;8\n20/01/19;21:00;328;864;37,96;8;5\n20/01/19;21:30;322;864;37,27;1;9\n20/01/19;22:00;319;864;36,92;4;5\n20/01/19;22:30;314;864;36,34;2;6\n20/01/19;23:00;312;864;36,11;3;9\n20/01/19;23:30;306;864;35,42;2;2\n21/01/19;00:00;304;864;35,19;2;2\n21/01/19;00:30;304;864;35,19;0;1\n21/01/19;01:00;304;864;35,19;0;0\n21/01/19;01:30;302;864;34,95;0;2\n21/01/19;02:00;302;864;34,95;0;0\n21/01/19;02:30;303;864;35,07;1;0\n21/01/19;03:00;303;864;35,07;0;0\n21/01/19;03:30;303;864;35,07;0;0\n21/01/19;04:00;302;864;34,95;0;0\n21/01/19;04:30;301;864;34,84;0;1\n21/01/19;05:00;301;864;34,84;1;1\n21/01/19;05:30;303;864;35,07;5;2\n21/01/19;06:00;304;864;35,19;1;0\n21/01/19;06:30;307;864;35,53;7;3\n21/01/19;07:00;314;864;36,34;16;9\n21/01/19;07:30;334;864;38,66;31;12\n21/01/19;08:00;346;864;40,05;45;19\n21/01/19;08:30;412;864;47,69;64;11\n21/01/19;09:00;450;864;52,08;74;14\n21/01/19;09:30;496;864;57,41;61;19\n21/01/19;10:00;557;864;64,47;73;30\n21/01/19;10:30;588;864;68,06;65;35\n21/01/19;11:00;602;864;69,68;66;34\n21/01/19;11:30;653;864;75,58;69;50\n21/01/19;12:00;657;864;76,04;77;62\n21/01/19;12:30;673;864;77,89;48;46\n21/01/19;13:00;665;864;76,97;47;48\n21/01/19;13:30;678;864;78,47;56;43\n21/01/19;14:00;680;864;78,70;53;48\n21/01/19;14:30;681;864;78,82;78;86\n21/01/19;15:00;685;864;79,28;72;68\n21/01/19;15:30;690;864;79,86;75;86\n21/01/19;16:00;685;864;79,28;56;100\n21/01/19;16:30;623;864;72,11;48;68\n21/01/19;17:00;622;864;71,99;63;76\n21/01/19;17:30;590;864;68,29;44;83\n21/01/19;18:00;573;864;66,32;38;95\n21/01/19;18:30;496;864;57,41;43;95\n21/01/19;19:00;474;864;54,86;33;104\n21/01/19;19:30;421;864;48,73;23;53\n21/01/19;20:00;391;864;45,25;16;33\n21/01/19;20:30;369;864;42,71;8;23\n21/01/19;21:00;366;864;42,36;7;14\n21/01/19;21:30;360;864;41,67;7;12\n21/01/19;22:00;355;864;41,09;5;14\n21/01/19;22:30;345;864;39,93;4;9\n21/01/19;23:00;342;864;39,58;2;7\n21/01/19;23:30;337;864;39,00;2;1\n22/01/19;00:00;338;864;39,12;1;5\n22/01/19;00:30;334;864;38,66;1;3\n22/01/19;01:00;332;864;38,43;0;0\n22/01/19;01:30;332;864;38,43;0;0\n22/01/19;02:00;332;864;38,43;0;0\n22/01/19;02:30;332;864;38,43;0;0\n22/01/19;03:00;332;864;38,43;1;0\n22/01/19;03:30;333;864;38,54;0;0\n22/01/19;04:00;333;864;38,54;0;0\n22/01/19;04:30;333;864;38,54;0;0\n22/01/19;05:00;333;864;38,54;2;0\n22/01/19;05:30;338;864;39,12;5;0\n22/01/19;06:00;342;864;39,58;6;3\n22/01/19;06:30;344;864;39,81;10;7\n22/01/19;07:00;346;864;40,05;26;13\n22/01/19;07:30;364;864;42,13;30;20\n22/01/19;08:00;368;864;42,59;40;25\n22/01/19;08:30;449;864;51,97;93;10\n22/01/19;09:00;474;864;54,86;130;21\n22/01/19;09:30;607;864;70,25;77;19\n22/01/19;10:00;635;864;73,50;98;24\n22/01/19;10:30;722;864;83,56;65;47\n22/01/19;11:00;728;864;84,26;43;39\n22/01/19;11:30;724;864;83,80;52;53\n22/01/19;12:00;721;864;83,45;51;51\n22/01/19;12:30;727;864;84,14;33;30\n22/01/19;13:00;723;864;83,68;33;35\n22/01/19;13:30;725;864;83,91;61;63\n22/01/19;14:00;736;864;85,19;67;53\n22/01/19;14:30;735;864;85,07;42;42\n22/01/19;15:00;736;864;85,19;48;60\n22/01/19;15:30;724;864;83,80;68;78\n22/01/19;16:00;714;864;82,64;53;59\n22/01/19;16:30;693;864;80,21;50;77\n22/01/19;17:00;664;864;76,85;51;84\n22/01/19;17:30;628;864;72,69;59;76\n22/01/19;18:00;633;864;73,26;71;90\n22/01/19;18:30;612;864;70,83;52;105\n22/01/19;19:00;552;864;63,89;47;109\n22/01/19;19:30;484;864;56,02;63;70\n22/01/19;20:00;485;864;56,13;35;32\n22/01/19;20:30;492;864;56,94;20;28\n22/01/19;21:00;476;864;55,09;9;29\n22/01/19;21:30;452;864;52,31;8;26\n22/01/19;22:00;439;864;50,81;7;39\n22/01/19;22:30;387;864;44,79;8;33\n22/01/19;23:00;380;864;43,98;5;19\n22/01/19;23:30;370;864;42,82;10;10\n23/01/19;00:00;369;864;42,71;0;13\n23/01/19;00:30;357;864;41,32;0;1\n23/01/19;01:00;356;864;41,20;1;0\n23/01/19;01:30;357;864;41,32;0;1\n23/01/19;02:00;356;864;41,20;0;1\n23/01/19;02:30;353;864;40,86;0;2\n23/01/19;03:00;353;864;40,86;0;0\n23/01/19;03:30;354;864;40,97;1;0\n23/01/19;04:00;354;864;40,97;1;0\n23/01/19;04:30;356;864;41,20;1;0\n23/01/19;05:00;357;864;41,32;1;0\n23/01/19;05:30;360;864;41,67;7;1\n23/01/19;06:00;366;864;42,36;5;2\n23/01/19;06:30;369;864;42,71;7;5\n23/01/19;07:00;368;864;42,59;21;11\n23/01/19;07:30;392;864;45,37;29;14\n23/01/19;08:00;395;864;45,72;51;27\n23/01/19;08:30;448;864;51,85;60;12\n23/01/19;09:00;496;864;57,41;76;16\n23/01/19;09:30;552;864;63,89;69;22\n23/01/19;10:00;576;864;66,67;67;22\n23/01/19;10:30;646;864;74,77;61;29\n23/01/19;11:00;659;864;76,27;50;51\n23/01/19;11:30;664;864;76,85;70;48\n23/01/19;12:00;677;864;78,36;93;49\n23/01/19;12:30;734;864;84,95;59;41\n23/01/19;13:00;739;864;85,53;49;38\n23/01/19;13:30;745;864;86,23;57;68\n23/01/19;14:00;733;864;84,84;64;89\n23/01/19;14:30;720;864;83,33;87;68\n23/01/19;15:00;728;864;84,26;67;78\n23/01/19;15:30;709;864;82,06;54;61\n23/01/19;16:00;711;864;82,29;67;84\n23/01/19;16:30;680;864;78,70;53;86\n23/01/19;17:00;667;864;77,20;41;62\n23/01/19;17:30;624;864;72,22;51;77\n23/01/19;18:00;614;864;71,06;47;83\n23/01/19;18:30;553;864;64,00;44;84\n23/01/19;19:00;539;864;62,38;49;94\n23/01/19;19:30;500;864;57,87;33;51\n23/01/19;20:00;481;864;55,67;39;31\n23/01/19;20:30;493;864;57,06;24;25\n23/01/19;21:00;489;864;56,60;10;10\n23/01/19;21:30;481;864;55,67;5;20\n23/01/19;22:00;475;864;54,98;4;32\n23/01/19;22:30;436;864;50,46;7;21\n23/01/19;23:00;431;864;49,88;7;20\n23/01/19;23:30;408;864;47,22;1;15\n24/01/19;00:00;405;864;46,88;2;8\n24/01/19;00:30;399;864;46,18;0;1\n24/01/19;01:00;399;864;46,18;1;3\n24/01/19;01:30;396;864;45,83;1;1\n24/01/19;02:00;396;864;45,83;1;3\n24/01/19;02:30;395;864;45,72;1;0\n24/01/19;03:00;396;864;45,83;0;1\n24/01/19;03:30;395;864;45,72;1;0\n24/01/19;04:00;396;864;45,83;0;0\n24/01/19;04:30;396;864;45,83;2;0\n24/01/19;05:00;397;864;45,95;1;0\n24/01/19;05:30;399;864;46,18;7;1\n24/01/19;06:00;404;864;46,76;5;2\n24/01/19;06:30;409;864;47,34;11;5\n24/01/19;07:00;428;864;49,54;23;11\n24/01/19;07:30;443;864;51,27;42;20\n24/01/19;08:00;447;864;51,74;48;29\n24/01/19;08:30;515;864;59,61;85;15\n24/01/19;09:00;555;864;64,24;115;17\n24/01/19;09:30;682;864;78,94;109;27\n24/01/19;10:00;722;864;83,56;95;28\n24/01/19;10:30;786;864;90,97;59;47\n24/01/19;11:00;788;864;91,20;69;54\n24/01/19;11:30;819;864;94,79;72;56\n24/01/19;12:00;816;864;94,44;54;53\n24/01/19;12:30;822;864;95,14;43;43\n24/01/19;13:00;820;864;94,91;34;33\n24/01/19;13:30;823;864;95,25;66;66\n24/01/19;14:00;819;864;94,79;46;59\n24/01/19;14:30;780;864;90,28;68;63\n24/01/19;15:00;809;864;93,63;52;57\n24/01/19;15:30;810;864;93,75;75;70\n24/01/19;16:00;807;864;93,40;63;69\n24/01/19;16:30;776;864;89,81;61;99\n24/01/19;17:00;758;864;87,73;66;79\n24/01/19;17:30;732;864;84,72;59;87\n24/01/19;18:00;711;864;82,29;59;98\n24/01/19;18:30;650;864;75,23;52;91\n24/01/19;19:00;630;864;72,92;60;128\n24/01/19;19:30;572;864;66,20;68;53\n24/01/19;20:00;583;864;67,48;35;32\n24/01/19;20:30;599;864;69,33;38;26\n24/01/19;21:00;598;864;69,21;19;36\n24/01/19;21:30;579;864;67,01;14;24\n24/01/19;22:00;572;864;66,20;7;39\n24/01/19;22:30;514;864;59,49;3;42\n24/01/19;23:00;495;864;57,29;5;43\n24/01/19;23:30;453;864;52,43;2;22\n25/01/19;00:00;442;864;51,16;4;19\n25/01/19;00:30;422;864;48,84;0;7\n25/01/19;01:00;419;864;48,50;1;4\n25/01/19;01:30;413;864;47,80;0;5\n25/01/19;02:00;411;864;47,57;0;2\n25/01/19;02:30;410;864;47,45;0;0\n25/01/19;03:00;409;864;47,34;0;3\n25/01/19;03:30;407;864;47,11;1;0\n25/01/19;04:00;408;864;47,22;0;1\n25/01/19;04:30;408;864;47,22;1;0\n25/01/19;05:00;408;864;47,22;1;1\n25/01/19;05:30;408;864;47,22;3;0\n25/01/19;06:00;412;864;47,69;5;2\n25/01/19;06:30;416;864;48,15;10;8\n25/01/19;07:00;413;864;47,80;15;15\n25/01/19;07:30;416;864;48,15;35;13\n25/01/19;08:00;438;864;50,69;58;29\n25/01/19;08:30;494;864;57,18;88;28\n25/01/19;09:00;535;864;61,92;120;17\n25/01/19;09:30;678;864;78,47;101;15\n25/01/19;10:00;716;864;82,87;105;40\n25/01/19;10:30;792;864;91,67;88;58\n25/01/19;11:00;801;864;92,71;65;51\n25/01/19;11:30;814;864;94,21;70;72\n25/01/19;12:00;817;864;94,56;51;49\n25/01/19;12:30;814;864;94,21;54;56\n25/01/19;13:00;816;864;94,44;55;52\n25/01/19;13:30;815;864;94,33;66;70\n25/01/19;14:00;813;864;94,10;86;82\n25/01/19;14:30;816;864;94,44;94;94\n25/01/19;15:00;819;864;94,79;79;78\n25/01/19;15:30;817;864;94,56;87;92\n25/01/19;16:00;807;864;93,40;86;94\n25/01/19;16:30;806;864;93,29;90;90\n25/01/19;17:00;802;864;92,82;60;111\n25/01/19;17:30;734;864;84,95;91;125\n25/01/19;18:00;713;864;82,52;72;103\n25/01/19;18:30;662;864;76,62;54;87\n25/01/19;19:00;644;864;74,54;55;122\n25/01/19;19:30;598;864;69,21;77;60\n25/01/19;20:00;617;864;71,41;85;45\n25/01/19;20:30;693;864;80,21;103;24\n25/01/19;21:00;718;864;83,10;49;30\n25/01/19;21:30;729;864;84,38;22;46\n25/01/19;22:00;693;864;80,21;16;61\n25/01/19;22:30;647;864;74,88;13;53\n25/01/19;23:00;623;864;72,11;6;69\n25/01/19;23:30;534;864;61,81;4;59\n26/01/19;00:00;510;864;59,03;4;49\n26/01/19;00:30;452;864;52,31;3;27\n26/01/19;01:00;438;864;50,69;0;16\n26/01/19;01:30;413;864;47,80;0;19\n26/01/19;02:00;405;864;46,88;1;2\n26/01/19;02:30;402;864;46,53;0;3\n26/01/19;03:00;401;864;46,41;0;0\n26/01/19;03:30;400;864;46,30;0;1\n26/01/19;04:00;400;864;46,30;0;2\n26/01/19;04:30;398;864;46,06;2;0\n26/01/19;05:00;400;864;46,30;0;0\n26/01/19;05:30;400;864;46,30;0;2\n26/01/19;06:00;398;864;46,06;1;0\n26/01/19;06:30;398;864;46,06;2;1\n26/01/19;07:00;399;864;46,18;2;4\n26/01/19;07:30;397;864;45,95;7;7\n26/01/19;08:00;397;864;45,95;7;11\n26/01/19;08:30;396;864;45,83;16;9\n26/01/19;09:00;403;864;46,64;39;7\n26/01/19;09:30;462;864;53,47;93;18\n26/01/19;10:00;513;864;59,38;105;10\n26/01/19;10:30;635;864;73,50;113;47\n26/01/19;11:00;668;864;77,31;111;49\n26/01/19;11:30;752;864;87,04;120;72\n26/01/19;12:00;778;864;90,05;104;76\n26/01/19;12:30;810;864;93,75;83;69\n26/01/19;13:00;810;864;93,75;87;87\n26/01/19;13:30;810;864;93,75;71;66\n26/01/19;14:00;816;864;94,44;68;68\n26/01/19;14:30;818;864;94,68;59;56\n26/01/19;15:00;818;864;94,68;74;73\n26/01/19;15:30;818;864;94,68;74;74\n26/01/19;16:00;814;864;94,21;54;80\n26/01/19;16:30;789;864;91,32;72;70\n26/01/19;17:00;791;864;91,55;75;89\n26/01/19;17:30;757;864;87,62;55;99\n26/01/19;18:00;731;864;84,61;36;102\n26/01/19;18:30;665;864;76,97;87;80\n26/01/19;19:00;660;864;76,39;73;108\n26/01/19;19:30;645;864;74,65;87;57\n26/01/19;20:00;666;864;77,08;86;38\n26/01/19;20:30;752;864;87,04;110;30\n26/01/19;21:00;800;864;92,59;67;45\n26/01/19;21:30;810;864;93,75;42;55\n26/01/19;22:00;794;864;91,90;15;55\n26/01/19;22:30;727;864;84,14;7;59\n26/01/19;23:00;709;864;82,06;8;67\n26/01/19;23:30;598;864;69,21;7;88\n27/01/19;00:00;568;864;65,74;7;42\n27/01/19;00:30;507;864;58,68;7;53\n27/01/19;01:00;486;864;56,25;3;27\n27/01/19;01:30;449;864;51,97;0;24\n27/01/19;02:00;439;864;50,81;0;7\n27/01/19;02:30;427;864;49,42;1;8\n27/01/19;03:00;425;864;49,19;1;8\n27/01/19;03:30;416;864;48,15;0;3\n27/01/19;04:00;415;864;48,03;0;6\n27/01/19;04:30;410;864;47,45;1;0\n27/01/19;05:00;410;864;47,45;0;0\n27/01/19;05:30;410;864;47,45;1;1\n27/01/19;06:00;410;864;47,45;1;1\n27/01/19;06:30;409;864;47,34;0;1\n27/01/19;07:00;408;864;47,22;0;2\n27/01/19;07:30;404;864;46,76;0;9\n27/01/19;08:00;398;864;46,06;0;7\n27/01/19;08:30;386;864;44,68;2;8\n27/01/19;09:00;384;864;44,44;3;12\n27/01/19;09:30;371;864;42,94;1;10\n27/01/19;10:00;367;864;42,48;13;5\n27/01/19;10:30;379;864;43,87;21;18\n27/01/19;11:00;377;864;43,63;30;12\n27/01/19;11:30;404;864;46,76;38;20\n27/01/19;12:00;414;864;47,92;36;22\n27/01/19;12:30;432;864;50,00;34;21\n27/01/19;13:00;443;864;51,27;26;14\n27/01/19;13:30;458;864;53,01;24;21\n27/01/19;14:00;455;864;52,66;13;29\n27/01/19;14:30;424;864;49,07;9;31\n27/01/19;15:00;417;864;48,26;6;21\n27/01/19;15:30;382;864;44,21;1;35\n27/01/19;16:00;365;864;42,25;31;27\n27/01/19;16:30;375;864;43,40;22;18\n27/01/19;17:00;376;864;43,52;22;16\n27/01/19;17:30;382;864;44,21;28;32\n27/01/19;18:00;378;864;43,75;33;12\n27/01/19;18:30;404;864;46,76;27;19\n27/01/19;19:00;409;864;47,34;27;14\n27/01/19;19:30;429;864;49,65;40;9\n27/01/19;20:00;455;864;52,66;33;14\n27/01/19;20:30;482;864;55,79;27;7\n27/01/19;21:00;493;864;57,06;26;14\n27/01/19;21:30;500;864;57,87;7;17\n27/01/19;22:00;492;864;56,94;4;31\n27/01/19;22:30;464;864;53,70;2;10\n27/01/19;23:00;458;864;53,01;5;13\n27/01/19;23:30;441;864;51,04;0;15\n28/01/19;00:00;435;864;50,35;1;26\n28/01/19;00:30;405;864;46,88;1;10\n28/01/19;01:00;401;864;46,41;1;6\n28/01/19;01:30;397;864;45,95;0;0\n28/01/19;02:00;396;864;45,83;1;0\n28/01/19;02:30;396;864;45,83;0;0\n28/01/19;03:00;396;864;45,83;0;0\n28/01/19;03:30;396;864;45,83;0;0\n28/01/19;04:00;396;864;45,83;1;0\n28/01/19;04:30;375;864;43,40;0;0\n28/01/19;05:00;375;864;43,40;1;1\n28/01/19;05:30;375;864;43,40;4;1\n28/01/19;06:00;378;864;43,75;6;6\n28/01/19;06:30;373;864;43,17;9;12\n28/01/19;07:00;375;864;43,40;18;7\n28/01/19;07:30;385;864;44,56;24;21\n28/01/19;08:00;384;864;44,44;46;21\n28/01/19;08:30;444;864;51,39;72;19\n28/01/19;09:00;476;864;55,09;88;22\n28/01/19;09:30;579;864;67,01;97;27\n28/01/19;10:00;605;864;70,02;78;20\n28/01/19;10:30;689;864;79,75;84;31\n28/01/19;11:00;712;864;82,41;64;45\n28/01/19;11:30;749;864;86,69;72;57\n28/01/19;12:00;743;864;86,00;93;66\n28/01/19;12:30;777;864;89,93;43;40\n28/01/19;13:00;778;864;90,05;50;51\n28/01/19;13:30;779;864;90,16;62;59\n28/01/19;14:00;771;864;89,24;71;67\n28/01/19;14:30;774;864;89,58;66;67\n28/01/19;15:00;782;864;90,51;65;76\n28/01/19;15:30;752;864;87,04;70;92\n28/01/19;16:00;743;864;86,00;60;89\n28/01/19;16:30;693;864;80,21;47;88\n28/01/19;17:00;673;864;77,89;44;66\n28/01/19;17:30;625;864;72,34;49;83\n28/01/19;18:00;616;864;71,30;56;94\n28/01/19;18:30;566;864;65,51;42;89\n28/01/19;19:00;527;864;61,00;40;104\n28/01/19;19:30;466;864;53,94;61;53\n28/01/19;20:00;470;864;54,40;54;25\n28/01/19;20:30;514;864;59,49;43;24\n28/01/19;21:00;511;864;59,14;17;26\n28/01/19;21:30;499;864;57,75;10;23\n28/01/19;22:00;490;864;56,71;7;19\n28/01/19;22:30;467;864;54,05;6;24\n28/01/19;23:00;459;864;53,13;3;45\n28/01/19;23:30;402;864;46,53;2;14\n29/01/19;00:00;402;864;46,53;4;14\n29/01/19;00:30;389;864;45,02;0;9\n29/01/19;01:00;382;864;44,21;0;2\n29/01/19;01:30;378;864;43,75;0;4\n29/01/19;02:00;376;864;43,52;0;1\n29/01/19;02:30;375;864;43,40;0;0\n29/01/19;03:00;375;864;43,40;1;1\n29/01/19;03:30;375;864;43,40;0;0\n29/01/19;04:00;374;864;43,29;1;0\n29/01/19;04:30;375;864;43,40;0;0\n29/01/19;05:00;375;864;43,40;0;1\n29/01/19;05:30;374;864;43,29;6;0\n29/01/19;06:00;381;864;44,10;2;3\n29/01/19;06:30;379;864;43,87;12;9\n29/01/19;07:00;383;864;44,33;21;14\n29/01/19;07:30;398;864;46,06;40;23\n29/01/19;08:00;403;864;46,64;49;24\n29/01/19;08:30;471;864;54,51;103;15\n29/01/19;09:00;530;864;61,34;94;23\n29/01/19;09:30;640;864;74,07;81;22\n29/01/19;10:00;655;864;75,81;108;40\n29/01/19;10:30;754;864;87,27;72;41\n29/01/19;11:00;754;864;87,27;76;52\n29/01/19;11:30;773;864;89,47;52;54\n29/01/19;12:00;771;864;89,24;75;65\n29/01/19;12:30;778;864;90,05;55;55\n29/01/19;13:00;778;864;90,05;41;39\n29/01/19;13:30;780;864;90,28;44;45\n29/01/19;14:00;778;864;90,05;70;77\n29/01/19;14:30;779;864;90,16;68;59\n29/01/19;15:00;780;864;90,28;70;76\n29/01/19;15:30;760;864;87,96;68;74\n29/01/19;16:00;767;864;88,77;64;81\n29/01/19;16:30;734;864;84,95;67;79\n29/01/19;17:00;731;864;84,61;51;86\n29/01/19;17:30;668;864;77,31;51;93\n29/01/19;18:00;656;864;75,93;53;86\n29/01/19;18:30;599;864;69,33;58;100\n29/01/19;19:00;577;864;66,78;56;114\n29/01/19;19:30;516;864;59,72;48;64\n29/01/19;20:00;514;864;59,49;45;24\n29/01/19;20:30;539;864;62,38;28;21\n29/01/19;21:00;533;864;61,69;14;28\n29/01/19;21:30;508;864;58,80;11;35\n29/01/19;22:00;496;864;57,41;5;29\n29/01/19;22:30;460;864;53,24;6;34\n29/01/19;23:00;446;864;51,62;1;38\n29/01/19;23:30;403;864;46,64;2;17");

/***/ }),
/* 272 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// A no-operation function to use when you want to do nothing
/* harmony default export */ __webpack_exports__["a"] = (function () {});

/***/ }),
/* 273 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__ = __webpack_require__(76);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_tiny_emitter__ = __webpack_require__(79);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_tiny_emitter___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_tiny_emitter__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_utils_host__ = __webpack_require__(77);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_reconnectingwebsocket__ = __webpack_require__(274);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_reconnectingwebsocket___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_reconnectingwebsocket__);





var ws = new __WEBPACK_IMPORTED_MODULE_3_reconnectingwebsocket___default.a(__WEBPACK_IMPORTED_MODULE_2_utils_host__["a" /* default */].replace('http', 'ws'));
var em = new __WEBPACK_IMPORTED_MODULE_1_tiny_emitter___default.a();

var connected = false;

ws.onerror = function (err) {
  connected = false;
  em.emit('error', err);
};

ws.onclose = function () {
  connected = false;
  em.emit('close');
};

ws.onopen = function () {
  connected = true;
  em.emit('open');
};

ws.onmessage = function (message) {
  var _JSON$parse = JSON.parse(message.data),
      event = _JSON$parse.event,
      data = _JSON$parse.data;

  em.emit(event, data);
};

/* harmony default export */ __webpack_exports__["a"] = ({
  emit: em.emit.bind(em),
  on: em.on.bind(em),
  once: em.once.bind(em),
  off: em.off.bind(em),

  get connected() {
    return connected;
  },
  send: function send(event, data) {
    if (connected) ws.send(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default()({ event: event, data: data }));else console.warn('WS: cannot send(\'' + event + '\'). Not connected');
  }
});

/***/ }),
/* 274 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// MIT License:
//
// Copyright (c) 2010-2012, Joe Walnes
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

/**
 * This behaves like a WebSocket in every way, except if it fails to connect,
 * or it gets disconnected, it will repeatedly poll until it successfully connects
 * again.
 *
 * It is API compatible, so when you have:
 *   ws = new WebSocket('ws://....');
 * you can replace with:
 *   ws = new ReconnectingWebSocket('ws://....');
 *
 * The event stream will typically look like:
 *  onconnecting
 *  onopen
 *  onmessage
 *  onmessage
 *  onclose // lost connection
 *  onconnecting
 *  onopen  // sometime later...
 *  onmessage
 *  onmessage
 *  etc...
 *
 * It is API compatible with the standard WebSocket API, apart from the following members:
 *
 * - `bufferedAmount`
 * - `extensions`
 * - `binaryType`
 *
 * Latest version: https://github.com/joewalnes/reconnecting-websocket/
 * - Joe Walnes
 *
 * Syntax
 * ======
 * var socket = new ReconnectingWebSocket(url, protocols, options);
 *
 * Parameters
 * ==========
 * url - The url you are connecting to.
 * protocols - Optional string or array of protocols.
 * options - See below
 *
 * Options
 * =======
 * Options can either be passed upon instantiation or set after instantiation:
 *
 * var socket = new ReconnectingWebSocket(url, null, { debug: true, reconnectInterval: 4000 });
 *
 * or
 *
 * var socket = new ReconnectingWebSocket(url);
 * socket.debug = true;
 * socket.reconnectInterval = 4000;
 *
 * debug
 * - Whether this instance should log debug messages. Accepts true or false. Default: false.
 *
 * automaticOpen
 * - Whether or not the websocket should attempt to connect immediately upon instantiation. The socket can be manually opened or closed at any time using ws.open() and ws.close().
 *
 * reconnectInterval
 * - The number of milliseconds to delay before attempting to reconnect. Accepts integer. Default: 1000.
 *
 * maxReconnectInterval
 * - The maximum number of milliseconds to delay a reconnection attempt. Accepts integer. Default: 30000.
 *
 * reconnectDecay
 * - The rate of increase of the reconnect delay. Allows reconnect attempts to back off when problems persist. Accepts integer or float. Default: 1.5.
 *
 * timeoutInterval
 * - The maximum time in milliseconds to wait for a connection to succeed before closing and retrying. Accepts integer. Default: 2000.
 *
 */
(function (global, factory) {
    if (true) {
        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
    } else if (typeof module !== 'undefined' && module.exports){
        module.exports = factory();
    } else {
        global.ReconnectingWebSocket = factory();
    }
})(this, function () {

    if (!('WebSocket' in window)) {
        return;
    }

    function ReconnectingWebSocket(url, protocols, options) {

        // Default settings
        var settings = {

            /** Whether this instance should log debug messages. */
            debug: false,

            /** Whether or not the websocket should attempt to connect immediately upon instantiation. */
            automaticOpen: true,

            /** The number of milliseconds to delay before attempting to reconnect. */
            reconnectInterval: 1000,
            /** The maximum number of milliseconds to delay a reconnection attempt. */
            maxReconnectInterval: 30000,
            /** The rate of increase of the reconnect delay. Allows reconnect attempts to back off when problems persist. */
            reconnectDecay: 1.5,

            /** The maximum time in milliseconds to wait for a connection to succeed before closing and retrying. */
            timeoutInterval: 2000,

            /** The maximum number of reconnection attempts to make. Unlimited if null. */
            maxReconnectAttempts: null
        }
        if (!options) { options = {}; }

        // Overwrite and define settings with options if they exist.
        for (var key in settings) {
            if (typeof options[key] !== 'undefined') {
                this[key] = options[key];
            } else {
                this[key] = settings[key];
            }
        }

        // These should be treated as read-only properties

        /** The URL as resolved by the constructor. This is always an absolute URL. Read only. */
        this.url = url;

        /** The number of attempted reconnects since starting, or the last successful connection. Read only. */
        this.reconnectAttempts = 0;

        /**
         * The current state of the connection.
         * Can be one of: WebSocket.CONNECTING, WebSocket.OPEN, WebSocket.CLOSING, WebSocket.CLOSED
         * Read only.
         */
        this.readyState = WebSocket.CONNECTING;

        /**
         * A string indicating the name of the sub-protocol the server selected; this will be one of
         * the strings specified in the protocols parameter when creating the WebSocket object.
         * Read only.
         */
        this.protocol = null;

        // Private state variables

        var self = this;
        var ws;
        var forcedClose = false;
        var timedOut = false;
        var eventTarget = document.createElement('div');

        // Wire up "on*" properties as event handlers

        eventTarget.addEventListener('open',       function(event) { self.onopen(event); });
        eventTarget.addEventListener('close',      function(event) { self.onclose(event); });
        eventTarget.addEventListener('connecting', function(event) { self.onconnecting(event); });
        eventTarget.addEventListener('message',    function(event) { self.onmessage(event); });
        eventTarget.addEventListener('error',      function(event) { self.onerror(event); });

        // Expose the API required by EventTarget

        this.addEventListener = eventTarget.addEventListener.bind(eventTarget);
        this.removeEventListener = eventTarget.removeEventListener.bind(eventTarget);
        this.dispatchEvent = eventTarget.dispatchEvent.bind(eventTarget);

        /**
         * This function generates an event that is compatible with standard
         * compliant browsers and IE9 - IE11
         *
         * This will prevent the error:
         * Object doesn't support this action
         *
         * http://stackoverflow.com/questions/19345392/why-arent-my-parameters-getting-passed-through-to-a-dispatched-event/19345563#19345563
         * @param s String The name that the event should use
         * @param args Object an optional object that the event will use
         */
        function generateEvent(s, args) {
        	var evt = document.createEvent("CustomEvent");
        	evt.initCustomEvent(s, false, false, args);
        	return evt;
        };

        this.open = function (reconnectAttempt) {
            ws = new WebSocket(self.url, protocols || []);

            if (reconnectAttempt) {
                if (this.maxReconnectAttempts && this.reconnectAttempts > this.maxReconnectAttempts) {
                    return;
                }
            } else {
                eventTarget.dispatchEvent(generateEvent('connecting'));
                this.reconnectAttempts = 0;
            }

            if (self.debug || ReconnectingWebSocket.debugAll) {
                console.debug('ReconnectingWebSocket', 'attempt-connect', self.url);
            }

            var localWs = ws;
            var timeout = setTimeout(function() {
                if (self.debug || ReconnectingWebSocket.debugAll) {
                    console.debug('ReconnectingWebSocket', 'connection-timeout', self.url);
                }
                timedOut = true;
                localWs.close();
                timedOut = false;
            }, self.timeoutInterval);

            ws.onopen = function(event) {
                clearTimeout(timeout);
                if (self.debug || ReconnectingWebSocket.debugAll) {
                    console.debug('ReconnectingWebSocket', 'onopen', self.url);
                }
                self.protocol = ws.protocol;
                self.readyState = WebSocket.OPEN;
                self.reconnectAttempts = 0;
                var e = generateEvent('open');
                e.isReconnect = reconnectAttempt;
                reconnectAttempt = false;
                eventTarget.dispatchEvent(e);
            };

            ws.onclose = function(event) {
                clearTimeout(timeout);
                ws = null;
                if (forcedClose) {
                    self.readyState = WebSocket.CLOSED;
                    eventTarget.dispatchEvent(generateEvent('close'));
                } else {
                    self.readyState = WebSocket.CONNECTING;
                    var e = generateEvent('connecting');
                    e.code = event.code;
                    e.reason = event.reason;
                    e.wasClean = event.wasClean;
                    eventTarget.dispatchEvent(e);
                    if (!reconnectAttempt && !timedOut) {
                        if (self.debug || ReconnectingWebSocket.debugAll) {
                            console.debug('ReconnectingWebSocket', 'onclose', self.url);
                        }
                        eventTarget.dispatchEvent(generateEvent('close'));
                    }

                    var timeout = self.reconnectInterval * Math.pow(self.reconnectDecay, self.reconnectAttempts);
                    setTimeout(function() {
                        self.reconnectAttempts++;
                        self.open(true);
                    }, timeout > self.maxReconnectInterval ? self.maxReconnectInterval : timeout);
                }
            };
            ws.onmessage = function(event) {
                if (self.debug || ReconnectingWebSocket.debugAll) {
                    console.debug('ReconnectingWebSocket', 'onmessage', self.url, event.data);
                }
                var e = generateEvent('message');
                e.data = event.data;
                eventTarget.dispatchEvent(e);
            };
            ws.onerror = function(event) {
                if (self.debug || ReconnectingWebSocket.debugAll) {
                    console.debug('ReconnectingWebSocket', 'onerror', self.url, event);
                }
                eventTarget.dispatchEvent(generateEvent('error'));
            };
        }

        // Whether or not to create a websocket upon instantiation
        if (this.automaticOpen == true) {
            this.open(false);
        }

        /**
         * Transmits data to the server over the WebSocket connection.
         *
         * @param data a text string, ArrayBuffer or Blob to send to the server.
         */
        this.send = function(data) {
            if (ws) {
                if (self.debug || ReconnectingWebSocket.debugAll) {
                    console.debug('ReconnectingWebSocket', 'send', self.url, data);
                }
                return ws.send(data);
            } else {
                throw 'INVALID_STATE_ERR : Pausing to reconnect websocket';
            }
        };

        /**
         * Closes the WebSocket connection or connection attempt, if any.
         * If the connection is already CLOSED, this method does nothing.
         */
        this.close = function(code, reason) {
            // Default CLOSE_NORMAL code
            if (typeof code == 'undefined') {
                code = 1000;
            }
            forcedClose = true;
            if (ws) {
                ws.close(code, reason);
            }
        };

        /**
         * Additional public API method to refresh the connection if still open (close, re-open).
         * For example, if the app suspects bad data / missed heart beats, it can try to refresh.
         */
        this.refresh = function() {
            if (ws) {
                ws.close();
            }
        };
    }

    /**
     * An event listener to be called when the WebSocket connection's readyState changes to OPEN;
     * this indicates that the connection is ready to send and receive data.
     */
    ReconnectingWebSocket.prototype.onopen = function(event) {};
    /** An event listener to be called when the WebSocket connection's readyState changes to CLOSED. */
    ReconnectingWebSocket.prototype.onclose = function(event) {};
    /** An event listener to be called when a connection begins being attempted. */
    ReconnectingWebSocket.prototype.onconnecting = function(event) {};
    /** An event listener to be called when a message is received from the server. */
    ReconnectingWebSocket.prototype.onmessage = function(event) {};
    /** An event listener to be called when an error occurs. */
    ReconnectingWebSocket.prototype.onerror = function(event) {};

    /**
     * Whether all instances of ReconnectingWebSocket should log debug messages.
     * Setting this to true is the equivalent of setting all instances of ReconnectingWebSocket.debug to true.
     */
    ReconnectingWebSocket.debugAll = false;

    ReconnectingWebSocket.CONNECTING = WebSocket.CONNECTING;
    ReconnectingWebSocket.OPEN = WebSocket.OPEN;
    ReconnectingWebSocket.CLOSING = WebSocket.CLOSING;
    ReconnectingWebSocket.CLOSED = WebSocket.CLOSED;

    return ReconnectingWebSocket;
});


/***/ }),
/* 275 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_slicedToArray__ = __webpack_require__(51);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_slicedToArray___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_slicedToArray__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_entries__ = __webpack_require__(282);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_entries___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_entries__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_get_prototype_of__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_get_prototype_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_get_prototype_of__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_classCallCheck__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_classCallCheck__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_createClass__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_createClass__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_babel_runtime_helpers_possibleConstructorReturn__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_babel_runtime_helpers_possibleConstructorReturn___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_babel_runtime_helpers_possibleConstructorReturn__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_babel_runtime_helpers_inherits__ = __webpack_require__(16);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_babel_runtime_helpers_inherits___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_babel_runtime_helpers_inherits__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_babel_runtime_core_js_object_values__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_babel_runtime_core_js_object_values___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_babel_runtime_core_js_object_values__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_yo_yoify_lib_appendChild__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_yo_yoify_lib_appendChild___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_yo_yoify_lib_appendChild__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_utils_array_median__ = __webpack_require__(285);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_utils_array_median___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9_utils_array_median__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_controllers_dataset__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_components_data_timeline__ = __webpack_require__(286);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_abstractions_DomComponent__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_moment__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_13_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14_controllers_store__ = __webpack_require__(18);

















var CACHED = {};

var parseDate = function parseDate(day) {
  var RFC2822 = new Date('20' + day[0].date.split('/').reverse().join('-')).toUTCString();
  return __WEBPACK_IMPORTED_MODULE_13_moment___default()(RFC2822).locale('fr').format('dddd Do MMMM YYYY');
};

var computeStats = function computeStats(day) {
  var values = __WEBPACK_IMPORTED_MODULE_7_babel_runtime_core_js_object_values___default()(day).map(function (halfhour) {
    return halfhour['présences'];
  }).sort(function (a, b) {
    return a - b;
  });

  return {
    min: values[0],
    max: values[values.length - 1],
    moy: (values.reduce(function (sum, v) {
      return sum + v;
    }, 0) / values.length).toFixed(2).replace('.', ','),
    med: __WEBPACK_IMPORTED_MODULE_9_utils_array_median___default()(values, { alreadySorted: true }).toFixed(2).replace('.', ',')
  };
};

var DataSummary = function (_DomComponent) {
  __WEBPACK_IMPORTED_MODULE_6_babel_runtime_helpers_inherits___default()(DataSummary, _DomComponent);

  function DataSummary() {
    __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_classCallCheck___default()(this, DataSummary);

    return __WEBPACK_IMPORTED_MODULE_5_babel_runtime_helpers_possibleConstructorReturn___default()(this, (DataSummary.__proto__ || __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_get_prototype_of___default()(DataSummary)).apply(this, arguments));
  }

  __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_createClass___default()(DataSummary, [{
    key: 'render',
    value: function render() {
      var _dataSummaryDate, _dataSummaryStats, _dataSummary;

      this.refs.date = (_dataSummaryDate = document.createElement('div'), _dataSummaryDate.setAttribute('class', 'data-summary__date'), _dataSummaryDate);
      this.refs.timeline = this.registerComponent(__WEBPACK_IMPORTED_MODULE_11_components_data_timeline__["a" /* default */]);
      this.refs.stats = (_dataSummaryStats = document.createElement('div'), _dataSummaryStats.setAttribute('class', 'data-summary__stats'), _dataSummaryStats);
      return _dataSummary = document.createElement('section'), _dataSummary.setAttribute('class', 'data-summary'), __WEBPACK_IMPORTED_MODULE_8_yo_yoify_lib_appendChild___default()(_dataSummary, [' ', this.refs.date, ' ', this.refs.timeline.raw(), ' ', this.refs.stats, ' ']), _dataSummary;
    }
  }, {
    key: 'didMount',
    value: function didMount() {
      this.bindFuncs(['update']);
      __WEBPACK_IMPORTED_MODULE_14_controllers_store__["a" /* default */].watch('datasetIndex', this.update, { immediate: true });
    }
  }, {
    key: 'willUnmount',
    value: function willUnmount() {
      __WEBPACK_IMPORTED_MODULE_14_controllers_store__["a" /* default */].unwatch('datasetIndex', this.update);
    }
  }, {
    key: 'update',
    value: function update() {
      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;

      this.day = __WEBPACK_IMPORTED_MODULE_7_babel_runtime_core_js_object_values___default()(__WEBPACK_IMPORTED_MODULE_10_controllers_dataset__["a" /* default */])[index];
      if (!CACHED[index]) {
        CACHED[index] = {
          date: parseDate(this.day),
          stats: __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_entries___default()(computeStats(this.day)).map(function (_ref) {
            var _ref2 = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_slicedToArray___default()(_ref, 2),
                key = _ref2[0],
                stat = _ref2[1];

            return '<div class=\'data-summary__stat\' data-key=\'' + key + '\'>' + stat + '</div>';
          }).join('')
        };
      }
      this.refs.date.innerHTML = CACHED[index].date;
      this.refs.stats.innerHTML = CACHED[index].stats;
    }
  }]);

  return DataSummary;
}(__WEBPACK_IMPORTED_MODULE_12_abstractions_DomComponent__["a" /* default */]);

/* harmony default export */ __webpack_exports__["a"] = (DataSummary);

/***/ }),
/* 276 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(277), __esModule: true };

/***/ }),
/* 277 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(34);
__webpack_require__(22);
module.exports = __webpack_require__(278);


/***/ }),
/* 278 */
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__(46);
var ITERATOR = __webpack_require__(3)('iterator');
var Iterators = __webpack_require__(20);
module.exports = __webpack_require__(1).isIterable = function (it) {
  var O = Object(it);
  return O[ITERATOR] !== undefined
    || '@@iterator' in O
    // eslint-disable-next-line no-prototype-builtins
    || Iterators.hasOwnProperty(classof(O));
};


/***/ }),
/* 279 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(280), __esModule: true };

/***/ }),
/* 280 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(34);
__webpack_require__(22);
module.exports = __webpack_require__(281);


/***/ }),
/* 281 */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(5);
var get = __webpack_require__(47);
module.exports = __webpack_require__(1).getIterator = function (it) {
  var iterFn = get(it);
  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');
  return anObject(iterFn.call(it));
};


/***/ }),
/* 282 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(283), __esModule: true };

/***/ }),
/* 283 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(284);
module.exports = __webpack_require__(1).Object.entries;


/***/ }),
/* 284 */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/tc39/proposal-object-values-entries
var $export = __webpack_require__(4);
var $entries = __webpack_require__(78)(true);

$export($export.S, 'Object', {
  entries: function entries(it) {
    return $entries(it);
  }
});


/***/ }),
/* 285 */
/***/ (function(module, exports) {

module.exports = function () {
  var arr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      _ref$alreadySorted = _ref.alreadySorted,
      alreadySorted = _ref$alreadySorted === undefined ? false : _ref$alreadySorted,
      _ref$alreadyCloned = _ref.alreadyCloned,
      alreadyCloned = _ref$alreadyCloned === undefined ? false : _ref$alreadyCloned;

  var values = alreadyCloned ? arr : arr.slice(0);
  var numbers = alreadySorted ? values : values.sort(function (a, b) {
    return a - b;
  });

  var middle = Math.floor(numbers.length / 2);
  var isEven = numbers.length % 2 === 0;
  return isEven ? (numbers[middle] + numbers[middle - 1]) / 2 : numbers[middle];
};

/***/ }),
/* 286 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_toConsumableArray__ = __webpack_require__(52);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_toConsumableArray___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_toConsumableArray__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_get_prototype_of__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_get_prototype_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_get_prototype_of__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_classCallCheck__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_classCallCheck__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_createClass__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_createClass__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_possibleConstructorReturn__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_possibleConstructorReturn___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_possibleConstructorReturn__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_babel_runtime_helpers_inherits__ = __webpack_require__(16);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_babel_runtime_helpers_inherits___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_babel_runtime_helpers_inherits__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_yo_yoify_lib_appendChild__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_yo_yoify_lib_appendChild___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_yo_yoify_lib_appendChild__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_abstractions_DomComponent__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_controllers_store__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_missing_math__ = __webpack_require__(36);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_missing_math___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9_missing_math__);












var DataSummary = function (_DomComponent) {
  __WEBPACK_IMPORTED_MODULE_5_babel_runtime_helpers_inherits___default()(DataSummary, _DomComponent);

  function DataSummary() {
    __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_classCallCheck___default()(this, DataSummary);

    var _this = __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_possibleConstructorReturn___default()(this, (DataSummary.__proto__ || __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_get_prototype_of___default()(DataSummary)).call(this));

    _this.bindFuncs(['onchange', 'jumpTo']);
    return _this;
  }

  __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_createClass___default()(DataSummary, [{
    key: 'render',
    value: function render() {
      var _dataTimelineInput, _dataTimelineTicks, _dataTimeline;

      this.refs.input = (_dataTimelineInput = document.createElement('input'), _dataTimelineInput.setAttribute('type', 'range'), _dataTimelineInput.setAttribute('min', '' + String(window.configuration['datasetRange'][0]) + ''), _dataTimelineInput.setAttribute('max', '' + String(window.configuration['datasetRange'][1]) + ''), _dataTimelineInput.setAttribute('step', '1'), _dataTimelineInput.setAttribute('value', '' + String(window.configuration['datasetRange'][0]) + ''), _dataTimelineInput.oninput = this.onchange, _dataTimelineInput.onchange = this.onchange, _dataTimelineInput.setAttribute('list', 'dataTimelineDays'), _dataTimelineInput.setAttribute('class', 'data-timeline__input'), _dataTimelineInput);

      return _dataTimeline = document.createElement('div'), _dataTimeline.setAttribute('class', 'data-timeline'), __WEBPACK_IMPORTED_MODULE_6_yo_yoify_lib_appendChild___default()(_dataTimeline, [' ', this.refs.input, ' ', (_dataTimelineTicks = document.createElement('div'), _dataTimelineTicks.setAttribute('class', 'data-timeline__ticks'), __WEBPACK_IMPORTED_MODULE_6_yo_yoify_lib_appendChild___default()(_dataTimelineTicks, [' ', Array(window.configuration['datasetRange'][1] - window.configuration['datasetRange'][0] + 1).fill().map(function (_) {
        var _dataTimelineTick;

        return _dataTimelineTick = document.createElement('div'), _dataTimelineTick.setAttribute('class', 'data-timeline__tick'), _dataTimelineTick;
      }), ' ']), _dataTimelineTicks), ' ']), _dataTimeline;
    }
  }, {
    key: 'didMount',
    value: function didMount() {
      this.onchange();
      this.refs.base.addEventListener('click', this.jumpTo);
    }
  }, {
    key: 'willUnmount',
    value: function willUnmount() {
      this.refs.base.removeEventListener('click', this.jumpTo);
    }
  }, {
    key: 'jumpTo',
    value: function jumpTo(e) {
      if (e.target === this.refs.input) return;

      e.preventDefault();

      var nv = e.pageX / this.refs.base.clientWidth;
      this.refs.input.value = Math.round(__WEBPACK_IMPORTED_MODULE_9_missing_math__["map"].apply(undefined, [nv, 0, 1].concat(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_toConsumableArray___default()(window.configuration['datasetRange']))));
      this.onchange();
    }
  }, {
    key: 'onchange',
    value: function onchange() {
      var _this2 = this;

      window.requestAnimationFrame(function () {
        __WEBPACK_IMPORTED_MODULE_8_controllers_store__["a" /* default */].set('datasetIndex', parseInt(_this2.refs.input.value));
      });
    }
  }]);

  return DataSummary;
}(__WEBPACK_IMPORTED_MODULE_7_abstractions_DomComponent__["a" /* default */]);

/* harmony default export */ __webpack_exports__["a"] = (DataSummary);

/***/ }),
/* 287 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = { "default": __webpack_require__(288), __esModule: true };

/***/ }),
/* 288 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(22);
__webpack_require__(289);
module.exports = __webpack_require__(1).Array.from;


/***/ }),
/* 289 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ctx = __webpack_require__(19);
var $export = __webpack_require__(4);
var toObject = __webpack_require__(33);
var call = __webpack_require__(63);
var isArrayIter = __webpack_require__(64);
var toLength = __webpack_require__(42);
var createProperty = __webpack_require__(290);
var getIterFn = __webpack_require__(47);

$export($export.S + $export.F * !__webpack_require__(69)(function (iter) { Array.from(iter); }), 'Array', {
  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
    var O = toObject(arrayLike);
    var C = typeof this == 'function' ? this : Array;
    var aLen = arguments.length;
    var mapfn = aLen > 1 ? arguments[1] : undefined;
    var mapping = mapfn !== undefined;
    var index = 0;
    var iterFn = getIterFn(O);
    var length, result, step, iterator;
    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
    // if object isn't iterable or it's array with default iterator - use simple case
    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {
      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {
        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
      }
    } else {
      length = toLength(O.length);
      for (result = new C(length); length > index; index++) {
        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
      }
    }
    result.length = index;
    return result;
  }
});


/***/ }),
/* 290 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $defineProperty = __webpack_require__(8);
var createDesc = __webpack_require__(25);

module.exports = function (object, index, value) {
  if (index in object) $defineProperty.f(object, index, createDesc(0, value));
  else object[index] = value;
};


/***/ }),
/* 291 */
/***/ (function(module, exports, __webpack_require__) {

/*
 * A speed-improved perlin and simplex noise algorithms for 2D.
 *
 * Based on example code by Stefan Gustavson (stegu@itn.liu.se).
 * Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).
 * Better rank ordering method by Stefan Gustavson in 2012.
 * Converted to Javascript by Joseph Gentle.
 *
 * Version 2012-03-09
 *
 * This code was placed in the public domain by its original author,
 * Stefan Gustavson. You may use it as you see fit, but
 * attribution is appreciated.
 *
 */

(function(global){
  var module = global.noise = {};

  function Grad(x, y, z) {
    this.x = x; this.y = y; this.z = z;
  }
  
  Grad.prototype.dot2 = function(x, y) {
    return this.x*x + this.y*y;
  };

  Grad.prototype.dot3 = function(x, y, z) {
    return this.x*x + this.y*y + this.z*z;
  };

  var grad3 = [new Grad(1,1,0),new Grad(-1,1,0),new Grad(1,-1,0),new Grad(-1,-1,0),
               new Grad(1,0,1),new Grad(-1,0,1),new Grad(1,0,-1),new Grad(-1,0,-1),
               new Grad(0,1,1),new Grad(0,-1,1),new Grad(0,1,-1),new Grad(0,-1,-1)];

  var p = [151,160,137,91,90,15,
  131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,
  190, 6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,
  88,237,149,56,87,174,20,125,136,171,168, 68,175,74,165,71,134,139,48,27,166,
  77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,
  102,143,54, 65,25,63,161, 1,216,80,73,209,76,132,187,208, 89,18,169,200,196,
  135,130,116,188,159,86,164,100,109,198,173,186, 3,64,52,217,226,250,124,123,
  5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,
  223,183,170,213,119,248,152, 2,44,154,163, 70,221,153,101,155,167, 43,172,9,
  129,22,39,253, 19,98,108,110,79,113,224,232,178,185, 112,104,218,246,97,228,
  251,34,242,193,238,210,144,12,191,179,162,241, 81,51,145,235,249,14,239,107,
  49,192,214, 31,181,199,106,157,184, 84,204,176,115,121,50,45,127, 4,150,254,
  138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180];
  // To remove the need for index wrapping, double the permutation table length
  var perm = new Array(512);
  var gradP = new Array(512);

  // This isn't a very good seeding function, but it works ok. It supports 2^16
  // different seed values. Write something better if you need more seeds.
  module.seed = function(seed) {
    if(seed > 0 && seed < 1) {
      // Scale the seed out
      seed *= 65536;
    }

    seed = Math.floor(seed);
    if(seed < 256) {
      seed |= seed << 8;
    }

    for(var i = 0; i < 256; i++) {
      var v;
      if (i & 1) {
        v = p[i] ^ (seed & 255);
      } else {
        v = p[i] ^ ((seed>>8) & 255);
      }

      perm[i] = perm[i + 256] = v;
      gradP[i] = gradP[i + 256] = grad3[v % 12];
    }
  };

  module.seed(0);

  /*
  for(var i=0; i<256; i++) {
    perm[i] = perm[i + 256] = p[i];
    gradP[i] = gradP[i + 256] = grad3[perm[i] % 12];
  }*/

  // Skewing and unskewing factors for 2, 3, and 4 dimensions
  var F2 = 0.5*(Math.sqrt(3)-1);
  var G2 = (3-Math.sqrt(3))/6;

  var F3 = 1/3;
  var G3 = 1/6;

  // 2D simplex noise
  module.simplex2 = function(xin, yin) {
    var n0, n1, n2; // Noise contributions from the three corners
    // Skew the input space to determine which simplex cell we're in
    var s = (xin+yin)*F2; // Hairy factor for 2D
    var i = Math.floor(xin+s);
    var j = Math.floor(yin+s);
    var t = (i+j)*G2;
    var x0 = xin-i+t; // The x,y distances from the cell origin, unskewed.
    var y0 = yin-j+t;
    // For the 2D case, the simplex shape is an equilateral triangle.
    // Determine which simplex we are in.
    var i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords
    if(x0>y0) { // lower triangle, XY order: (0,0)->(1,0)->(1,1)
      i1=1; j1=0;
    } else {    // upper triangle, YX order: (0,0)->(0,1)->(1,1)
      i1=0; j1=1;
    }
    // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and
    // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where
    // c = (3-sqrt(3))/6
    var x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords
    var y1 = y0 - j1 + G2;
    var x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords
    var y2 = y0 - 1 + 2 * G2;
    // Work out the hashed gradient indices of the three simplex corners
    i &= 255;
    j &= 255;
    var gi0 = gradP[i+perm[j]];
    var gi1 = gradP[i+i1+perm[j+j1]];
    var gi2 = gradP[i+1+perm[j+1]];
    // Calculate the contribution from the three corners
    var t0 = 0.5 - x0*x0-y0*y0;
    if(t0<0) {
      n0 = 0;
    } else {
      t0 *= t0;
      n0 = t0 * t0 * gi0.dot2(x0, y0);  // (x,y) of grad3 used for 2D gradient
    }
    var t1 = 0.5 - x1*x1-y1*y1;
    if(t1<0) {
      n1 = 0;
    } else {
      t1 *= t1;
      n1 = t1 * t1 * gi1.dot2(x1, y1);
    }
    var t2 = 0.5 - x2*x2-y2*y2;
    if(t2<0) {
      n2 = 0;
    } else {
      t2 *= t2;
      n2 = t2 * t2 * gi2.dot2(x2, y2);
    }
    // Add contributions from each corner to get the final noise value.
    // The result is scaled to return values in the interval [-1,1].
    return 70 * (n0 + n1 + n2);
  };

  // 3D simplex noise
  module.simplex3 = function(xin, yin, zin) {
    var n0, n1, n2, n3; // Noise contributions from the four corners

    // Skew the input space to determine which simplex cell we're in
    var s = (xin+yin+zin)*F3; // Hairy factor for 2D
    var i = Math.floor(xin+s);
    var j = Math.floor(yin+s);
    var k = Math.floor(zin+s);

    var t = (i+j+k)*G3;
    var x0 = xin-i+t; // The x,y distances from the cell origin, unskewed.
    var y0 = yin-j+t;
    var z0 = zin-k+t;

    // For the 3D case, the simplex shape is a slightly irregular tetrahedron.
    // Determine which simplex we are in.
    var i1, j1, k1; // Offsets for second corner of simplex in (i,j,k) coords
    var i2, j2, k2; // Offsets for third corner of simplex in (i,j,k) coords
    if(x0 >= y0) {
      if(y0 >= z0)      { i1=1; j1=0; k1=0; i2=1; j2=1; k2=0; }
      else if(x0 >= z0) { i1=1; j1=0; k1=0; i2=1; j2=0; k2=1; }
      else              { i1=0; j1=0; k1=1; i2=1; j2=0; k2=1; }
    } else {
      if(y0 < z0)      { i1=0; j1=0; k1=1; i2=0; j2=1; k2=1; }
      else if(x0 < z0) { i1=0; j1=1; k1=0; i2=0; j2=1; k2=1; }
      else             { i1=0; j1=1; k1=0; i2=1; j2=1; k2=0; }
    }
    // A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z),
    // a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z), and
    // a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z), where
    // c = 1/6.
    var x1 = x0 - i1 + G3; // Offsets for second corner
    var y1 = y0 - j1 + G3;
    var z1 = z0 - k1 + G3;

    var x2 = x0 - i2 + 2 * G3; // Offsets for third corner
    var y2 = y0 - j2 + 2 * G3;
    var z2 = z0 - k2 + 2 * G3;

    var x3 = x0 - 1 + 3 * G3; // Offsets for fourth corner
    var y3 = y0 - 1 + 3 * G3;
    var z3 = z0 - 1 + 3 * G3;

    // Work out the hashed gradient indices of the four simplex corners
    i &= 255;
    j &= 255;
    k &= 255;
    var gi0 = gradP[i+   perm[j+   perm[k   ]]];
    var gi1 = gradP[i+i1+perm[j+j1+perm[k+k1]]];
    var gi2 = gradP[i+i2+perm[j+j2+perm[k+k2]]];
    var gi3 = gradP[i+ 1+perm[j+ 1+perm[k+ 1]]];

    // Calculate the contribution from the four corners
    var t0 = 0.5 - x0*x0-y0*y0-z0*z0;
    if(t0<0) {
      n0 = 0;
    } else {
      t0 *= t0;
      n0 = t0 * t0 * gi0.dot3(x0, y0, z0);  // (x,y) of grad3 used for 2D gradient
    }
    var t1 = 0.5 - x1*x1-y1*y1-z1*z1;
    if(t1<0) {
      n1 = 0;
    } else {
      t1 *= t1;
      n1 = t1 * t1 * gi1.dot3(x1, y1, z1);
    }
    var t2 = 0.5 - x2*x2-y2*y2-z2*z2;
    if(t2<0) {
      n2 = 0;
    } else {
      t2 *= t2;
      n2 = t2 * t2 * gi2.dot3(x2, y2, z2);
    }
    var t3 = 0.5 - x3*x3-y3*y3-z3*z3;
    if(t3<0) {
      n3 = 0;
    } else {
      t3 *= t3;
      n3 = t3 * t3 * gi3.dot3(x3, y3, z3);
    }
    // Add contributions from each corner to get the final noise value.
    // The result is scaled to return values in the interval [-1,1].
    return 32 * (n0 + n1 + n2 + n3);

  };

  // ##### Perlin noise stuff

  function fade(t) {
    return t*t*t*(t*(t*6-15)+10);
  }

  function lerp(a, b, t) {
    return (1-t)*a + t*b;
  }

  // 2D Perlin Noise
  module.perlin2 = function(x, y) {
    // Find unit grid cell containing point
    var X = Math.floor(x), Y = Math.floor(y);
    // Get relative xy coordinates of point within that cell
    x = x - X; y = y - Y;
    // Wrap the integer cells at 255 (smaller integer period can be introduced here)
    X = X & 255; Y = Y & 255;

    // Calculate noise contributions from each of the four corners
    var n00 = gradP[X+perm[Y]].dot2(x, y);
    var n01 = gradP[X+perm[Y+1]].dot2(x, y-1);
    var n10 = gradP[X+1+perm[Y]].dot2(x-1, y);
    var n11 = gradP[X+1+perm[Y+1]].dot2(x-1, y-1);

    // Compute the fade curve value for x
    var u = fade(x);

    // Interpolate the four results
    return lerp(
        lerp(n00, n10, u),
        lerp(n01, n11, u),
       fade(y));
  };

  // 3D Perlin Noise
  module.perlin3 = function(x, y, z) {
    // Find unit grid cell containing point
    var X = Math.floor(x), Y = Math.floor(y), Z = Math.floor(z);
    // Get relative xyz coordinates of point within that cell
    x = x - X; y = y - Y; z = z - Z;
    // Wrap the integer cells at 255 (smaller integer period can be introduced here)
    X = X & 255; Y = Y & 255; Z = Z & 255;

    // Calculate noise contributions from each of the eight corners
    var n000 = gradP[X+  perm[Y+  perm[Z  ]]].dot3(x,   y,     z);
    var n001 = gradP[X+  perm[Y+  perm[Z+1]]].dot3(x,   y,   z-1);
    var n010 = gradP[X+  perm[Y+1+perm[Z  ]]].dot3(x,   y-1,   z);
    var n011 = gradP[X+  perm[Y+1+perm[Z+1]]].dot3(x,   y-1, z-1);
    var n100 = gradP[X+1+perm[Y+  perm[Z  ]]].dot3(x-1,   y,   z);
    var n101 = gradP[X+1+perm[Y+  perm[Z+1]]].dot3(x-1,   y, z-1);
    var n110 = gradP[X+1+perm[Y+1+perm[Z  ]]].dot3(x-1, y-1,   z);
    var n111 = gradP[X+1+perm[Y+1+perm[Z+1]]].dot3(x-1, y-1, z-1);

    // Compute the fade curve value for x, y, z
    var u = fade(x);
    var v = fade(y);
    var w = fade(z);

    // Interpolate
    return lerp(
        lerp(
          lerp(n000, n100, u),
          lerp(n001, n101, u), w),
        lerp(
          lerp(n010, n110, u),
          lerp(n011, n111, u), w),
       v);
  };

})( false ? this : module.exports);

/***/ }),
/* 292 */
/***/ (function(module, exports) {

module.exports = function(module) {
	if(!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if(!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),
/* 293 */
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./af": 80,
	"./af.js": 80,
	"./ar": 81,
	"./ar-dz": 82,
	"./ar-dz.js": 82,
	"./ar-kw": 83,
	"./ar-kw.js": 83,
	"./ar-ly": 84,
	"./ar-ly.js": 84,
	"./ar-ma": 85,
	"./ar-ma.js": 85,
	"./ar-sa": 86,
	"./ar-sa.js": 86,
	"./ar-tn": 87,
	"./ar-tn.js": 87,
	"./ar.js": 81,
	"./az": 88,
	"./az.js": 88,
	"./be": 89,
	"./be.js": 89,
	"./bg": 90,
	"./bg.js": 90,
	"./bm": 91,
	"./bm.js": 91,
	"./bn": 92,
	"./bn.js": 92,
	"./bo": 93,
	"./bo.js": 93,
	"./br": 94,
	"./br.js": 94,
	"./bs": 95,
	"./bs.js": 95,
	"./ca": 96,
	"./ca.js": 96,
	"./cs": 97,
	"./cs.js": 97,
	"./cv": 98,
	"./cv.js": 98,
	"./cy": 99,
	"./cy.js": 99,
	"./da": 100,
	"./da.js": 100,
	"./de": 101,
	"./de-at": 102,
	"./de-at.js": 102,
	"./de-ch": 103,
	"./de-ch.js": 103,
	"./de.js": 101,
	"./dv": 104,
	"./dv.js": 104,
	"./el": 105,
	"./el.js": 105,
	"./en-SG": 106,
	"./en-SG.js": 106,
	"./en-au": 107,
	"./en-au.js": 107,
	"./en-ca": 108,
	"./en-ca.js": 108,
	"./en-gb": 109,
	"./en-gb.js": 109,
	"./en-ie": 110,
	"./en-ie.js": 110,
	"./en-il": 111,
	"./en-il.js": 111,
	"./en-nz": 112,
	"./en-nz.js": 112,
	"./eo": 113,
	"./eo.js": 113,
	"./es": 114,
	"./es-do": 115,
	"./es-do.js": 115,
	"./es-us": 116,
	"./es-us.js": 116,
	"./es.js": 114,
	"./et": 117,
	"./et.js": 117,
	"./eu": 118,
	"./eu.js": 118,
	"./fa": 119,
	"./fa.js": 119,
	"./fi": 120,
	"./fi.js": 120,
	"./fo": 121,
	"./fo.js": 121,
	"./fr": 122,
	"./fr-ca": 123,
	"./fr-ca.js": 123,
	"./fr-ch": 124,
	"./fr-ch.js": 124,
	"./fr.js": 122,
	"./fy": 125,
	"./fy.js": 125,
	"./ga": 126,
	"./ga.js": 126,
	"./gd": 127,
	"./gd.js": 127,
	"./gl": 128,
	"./gl.js": 128,
	"./gom-latn": 129,
	"./gom-latn.js": 129,
	"./gu": 130,
	"./gu.js": 130,
	"./he": 131,
	"./he.js": 131,
	"./hi": 132,
	"./hi.js": 132,
	"./hr": 133,
	"./hr.js": 133,
	"./hu": 134,
	"./hu.js": 134,
	"./hy-am": 135,
	"./hy-am.js": 135,
	"./id": 136,
	"./id.js": 136,
	"./is": 137,
	"./is.js": 137,
	"./it": 138,
	"./it-ch": 139,
	"./it-ch.js": 139,
	"./it.js": 138,
	"./ja": 140,
	"./ja.js": 140,
	"./jv": 141,
	"./jv.js": 141,
	"./ka": 142,
	"./ka.js": 142,
	"./kk": 143,
	"./kk.js": 143,
	"./km": 144,
	"./km.js": 144,
	"./kn": 145,
	"./kn.js": 145,
	"./ko": 146,
	"./ko.js": 146,
	"./ku": 147,
	"./ku.js": 147,
	"./ky": 148,
	"./ky.js": 148,
	"./lb": 149,
	"./lb.js": 149,
	"./lo": 150,
	"./lo.js": 150,
	"./lt": 151,
	"./lt.js": 151,
	"./lv": 152,
	"./lv.js": 152,
	"./me": 153,
	"./me.js": 153,
	"./mi": 154,
	"./mi.js": 154,
	"./mk": 155,
	"./mk.js": 155,
	"./ml": 156,
	"./ml.js": 156,
	"./mn": 157,
	"./mn.js": 157,
	"./mr": 158,
	"./mr.js": 158,
	"./ms": 159,
	"./ms-my": 160,
	"./ms-my.js": 160,
	"./ms.js": 159,
	"./mt": 161,
	"./mt.js": 161,
	"./my": 162,
	"./my.js": 162,
	"./nb": 163,
	"./nb.js": 163,
	"./ne": 164,
	"./ne.js": 164,
	"./nl": 165,
	"./nl-be": 166,
	"./nl-be.js": 166,
	"./nl.js": 165,
	"./nn": 167,
	"./nn.js": 167,
	"./pa-in": 168,
	"./pa-in.js": 168,
	"./pl": 169,
	"./pl.js": 169,
	"./pt": 170,
	"./pt-br": 171,
	"./pt-br.js": 171,
	"./pt.js": 170,
	"./ro": 172,
	"./ro.js": 172,
	"./ru": 173,
	"./ru.js": 173,
	"./sd": 174,
	"./sd.js": 174,
	"./se": 175,
	"./se.js": 175,
	"./si": 176,
	"./si.js": 176,
	"./sk": 177,
	"./sk.js": 177,
	"./sl": 178,
	"./sl.js": 178,
	"./sq": 179,
	"./sq.js": 179,
	"./sr": 180,
	"./sr-cyrl": 181,
	"./sr-cyrl.js": 181,
	"./sr.js": 180,
	"./ss": 182,
	"./ss.js": 182,
	"./sv": 183,
	"./sv.js": 183,
	"./sw": 184,
	"./sw.js": 184,
	"./ta": 185,
	"./ta.js": 185,
	"./te": 186,
	"./te.js": 186,
	"./tet": 187,
	"./tet.js": 187,
	"./tg": 188,
	"./tg.js": 188,
	"./th": 189,
	"./th.js": 189,
	"./tl-ph": 190,
	"./tl-ph.js": 190,
	"./tlh": 191,
	"./tlh.js": 191,
	"./tr": 192,
	"./tr.js": 192,
	"./tzl": 193,
	"./tzl.js": 193,
	"./tzm": 194,
	"./tzm-latn": 195,
	"./tzm-latn.js": 195,
	"./tzm.js": 194,
	"./ug-cn": 196,
	"./ug-cn.js": 196,
	"./uk": 197,
	"./uk.js": 197,
	"./ur": 198,
	"./ur.js": 198,
	"./uz": 199,
	"./uz-latn": 200,
	"./uz-latn.js": 200,
	"./uz.js": 199,
	"./vi": 201,
	"./vi.js": 201,
	"./x-pseudo": 202,
	"./x-pseudo.js": 202,
	"./yo": 203,
	"./yo.js": 203,
	"./zh-cn": 204,
	"./zh-cn.js": 204,
	"./zh-hk": 205,
	"./zh-hk.js": 205,
	"./zh-tw": 206,
	"./zh-tw.js": 206
};
function webpackContext(req) {
	return __webpack_require__(webpackContextResolve(req));
};
function webpackContextResolve(req) {
	var id = map[req];
	if(!(id + 1)) // check for number or string
		throw new Error("Cannot find module '" + req + "'.");
	return id;
};
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 293;

/***/ }),
/* 294 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_toConsumableArray__ = __webpack_require__(52);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_toConsumableArray___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_toConsumableArray__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_values__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_values___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_values__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_get_prototype_of__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_get_prototype_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_get_prototype_of__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_classCallCheck__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_classCallCheck__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_createClass__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_createClass__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_babel_runtime_helpers_possibleConstructorReturn__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_babel_runtime_helpers_possibleConstructorReturn___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_babel_runtime_helpers_possibleConstructorReturn__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_babel_runtime_helpers_inherits__ = __webpack_require__(16);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_babel_runtime_helpers_inherits___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_babel_runtime_helpers_inherits__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_yo_yoify_lib_appendChild__ = __webpack_require__(21);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_yo_yoify_lib_appendChild___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_yo_yoify_lib_appendChild__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_components_data_date__ = __webpack_require__(295);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_abstractions_Datagrid__ = __webpack_require__(296);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_controllers_dataset__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_abstractions_DomComponent__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_abstractions_Particle__ = __webpack_require__(297);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__internet_raf__ = __webpack_require__(299);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14_controllers_store__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15_missing_math__ = __webpack_require__(36);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15_missing_math___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_15_missing_math__);


















function randomTargetOutsideBox(width, height) {
  var radius = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Math.min(width, height);

  // NOTE: this make sure to create a particle outside the screen
  var theta = Object(__WEBPACK_IMPORTED_MODULE_15_missing_math__["random"])(Math.PI * 2);
  return [width / 2 + Math.sin(theta) * radius, height / 2 + Math.cos(theta) * radius];
}

var ViewerApp = function (_DomComponent) {
  __WEBPACK_IMPORTED_MODULE_6_babel_runtime_helpers_inherits___default()(ViewerApp, _DomComponent);

  function ViewerApp() {
    __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_classCallCheck___default()(this, ViewerApp);

    var _this = __WEBPACK_IMPORTED_MODULE_5_babel_runtime_helpers_possibleConstructorReturn___default()(this, (ViewerApp.__proto__ || __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_get_prototype_of___default()(ViewerApp)).call(this));

    _this.bindFuncs(['update', 'resize', 'regroupParticles', 'addParticle']);
    _this.datagrid = new __WEBPACK_IMPORTED_MODULE_9_abstractions_Datagrid__["a" /* default */]();
    _this.particles = [];
    return _this;
  }

  __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_createClass___default()(ViewerApp, [{
    key: 'render',
    value: function render() {
      var _canvas, _viewerApp;

      this.refs.date = this.registerComponent(__WEBPACK_IMPORTED_MODULE_8_components_data_date__["a" /* default */]);
      this.refs.canvas = (_canvas = document.createElement('canvas'), _canvas);
      return _viewerApp = document.createElement('main'), _viewerApp.setAttribute('id', 'ViewerApp'), _viewerApp.setAttribute('class', 'app'), __WEBPACK_IMPORTED_MODULE_7_yo_yoify_lib_appendChild___default()(_viewerApp, [' ', this.refs.date.raw(), ' ', this.refs.canvas, ' ']), _viewerApp;
    }
  }, {
    key: 'didMount',
    value: function didMount() {
      var _this2 = this;

      this.resize();

      this.ctx = this.refs.canvas.getContext('2d');
      this.ctx.scale(window.configuration.viewer['pixelDensity'], window.configuration.viewer['pixelDensity']);
      this.ctx.lineCap = 'round';
      this.ctx.lineJoin = 'round';
      this.ctx.fillStyle = 'white';

      __WEBPACK_IMPORTED_MODULE_14_controllers_store__["a" /* default */].watch('datasetIndex', function (index) {
        var day = __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_values___default()(__WEBPACK_IMPORTED_MODULE_10_controllers_dataset__["a" /* default */])[__WEBPACK_IMPORTED_MODULE_14_controllers_store__["a" /* default */].get('datasetDay') || window.configuration['datasetRange'][0]];
        var halfhour = day[0];
        var maxLength = window.configuration['viewer'].particlesMaxLength;

        _this2.particles = [];
        _this2.updateParticlesLength(maxLength * (halfhour['% occupation'] / 100));
        _this2.regroupParticles();
      });

      __WEBPACK_IMPORTED_MODULE_14_controllers_store__["a" /* default */].watch('datasetDayIndex', function (index) {
        var day = __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_values___default()(__WEBPACK_IMPORTED_MODULE_10_controllers_dataset__["a" /* default */])[__WEBPACK_IMPORTED_MODULE_14_controllers_store__["a" /* default */].get('datasetDay') || window.configuration['datasetRange'][0]];
        var halfhour = day[index];
        var maxLength = window.configuration['viewer'].particlesMaxLength;

        _this2.updateParticlesLength(maxLength * (halfhour['% occupation'] / 100));
      });

      __WEBPACK_IMPORTED_MODULE_13__internet_raf__["a" /* default */].add(this.update);
    }
  }, {
    key: 'regroupParticles',
    value: function regroupParticles() {
      var randomTarget = [Object(__WEBPACK_IMPORTED_MODULE_15_missing_math__["random"])(this.width), Object(__WEBPACK_IMPORTED_MODULE_15_missing_math__["random"])(this.height)];
      this.particles.forEach(function (p) {
        p.target = randomTarget;
        p.speed = 10;
        p.percentWhenStopSeekingTarget = 0.01;
      });
    }
  }, {
    key: 'resize',
    value: function resize() {
      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
          _ref$width = _ref.width,
          width = _ref$width === undefined ? window.innerWidth : _ref$width,
          _ref$height = _ref.height,
          height = _ref$height === undefined ? window.innerHeight : _ref$height;

      if (!this.mounted) return;
      this.refs.canvas.width = width * window.configuration.viewer['pixelDensity'];
      this.refs.canvas.height = height * window.configuration.viewer['pixelDensity'];
      this.refs.canvas.style.width = width + 'px';
      this.refs.canvas.style.height = height + 'px';
    }
  }, {
    key: 'update',
    value: function update(dt) {
      var _this3 = this;

      if (!window.isProduction) window.particlesLength = this.particles.length;

      this.ctx.clearRect(0, 0, this.width, this.height);

      this.datagrid.update();
      this.particles.forEach(function (p) {
        return p.update({ width: _this3.width, height: _this3.height });
      });

      this.ctx.strokeStyle = 'white';
      this.ctx.lineWidth = 2;
      this.datagrid.draw(this.ctx, { width: this.width, height: this.height });

      this.ctx.strokeStyle = 'white';
      this.ctx.lineWidth = 20;
      this.particles.forEach(function (p) {
        return p.draw(_this3.ctx);
      });

      this.ctx.strokeStyle = 'black';
      this.ctx.lineWidth = 10;
      this.particles.forEach(function (p) {
        return p.draw(_this3.ctx);
      });
    }
  }, {
    key: 'updateParticlesLength',
    value: function updateParticlesLength(targetLength) {
      for (var i = targetLength; i < this.particles.length; i++) {
        this.removeParticle();
      }for (var _i = this.particles.length; _i < targetLength; _i++) {
        this.addParticle();
      }
    }
  }, {
    key: 'addParticle',
    value: function addParticle() {
      var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Object(__WEBPACK_IMPORTED_MODULE_15_missing_math__["random"])(this.width);
      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Object(__WEBPACK_IMPORTED_MODULE_15_missing_math__["random"])(this.height);

      var p = new (Function.prototype.bind.apply(__WEBPACK_IMPORTED_MODULE_12_abstractions_Particle__["a" /* default */], [null].concat(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_toConsumableArray___default()(randomTargetOutsideBox(this.width, this.height)))))();
      p.target = [x, y];
      p.speed = 1;
      p.percentWhenStopSeekingTarget = 0.1;
      this.particles.push(p);
    }
  }, {
    key: 'removeParticle',
    value: function removeParticle() {
      var _this4 = this;

      var p = this.particles.shift();
      if (!p) return;

      p.target = randomTargetOutsideBox(this.width, this.height, this.width * 2);
      p.shouldBounce = false;
      p.speed = 2;
      p.percentWhenStopSeekingTarget = 0.1;
      this.particles.push(p);

      setTimeout(function () {
        _this4.particles.splice(_this4.particles.indexOf(p), 1);
      }, 3000);
    }
  }, {
    key: 'width',
    get: function get() {
      return this.refs.canvas ? this.refs.canvas.width / window.configuration.viewer['pixelDensity'] : window.innerWidth;
    }
  }, {
    key: 'height',
    get: function get() {
      return this.refs.canvas ? this.refs.canvas.height / window.configuration.viewer['pixelDensity'] : window.innerHeight;
    }
  }]);

  return ViewerApp;
}(__WEBPACK_IMPORTED_MODULE_11_abstractions_DomComponent__["a" /* default */]);

/* harmony default export */ __webpack_exports__["a"] = (ViewerApp);

/***/ }),
/* 295 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_values__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_values___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_values__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_get_prototype_of__ = __webpack_require__(14);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_get_prototype_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_get_prototype_of__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_classCallCheck__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_classCallCheck__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_createClass__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_createClass__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_possibleConstructorReturn__ = __webpack_require__(15);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_possibleConstructorReturn___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_possibleConstructorReturn__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_babel_runtime_helpers_inherits__ = __webpack_require__(16);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_babel_runtime_helpers_inherits___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_babel_runtime_helpers_inherits__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_controllers_dataset__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_abstractions_DomComponent__ = __webpack_require__(17);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_moment__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_moment___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_moment__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_controllers_store__ = __webpack_require__(18);












var CACHED = {};

var parseDate = function parseDate(day) {
  var RFC2822 = new Date('20' + day[0].date.split('/').reverse().join('-')).toUTCString();
  return {
    dddd: __WEBPACK_IMPORTED_MODULE_8_moment___default()(RFC2822).locale('fr').format('dddd'),
    do: __WEBPACK_IMPORTED_MODULE_8_moment___default()(RFC2822).locale('fr').format('Do'),
    mmmm: __WEBPACK_IMPORTED_MODULE_8_moment___default()(RFC2822).locale('fr').format('MMMM'),
    yyyy: __WEBPACK_IMPORTED_MODULE_8_moment___default()(RFC2822).locale('fr').format('YYYY')
  };
};

var DataSummary = function (_DomComponent) {
  __WEBPACK_IMPORTED_MODULE_5_babel_runtime_helpers_inherits___default()(DataSummary, _DomComponent);

  function DataSummary() {
    __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_classCallCheck___default()(this, DataSummary);

    return __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_possibleConstructorReturn___default()(this, (DataSummary.__proto__ || __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_get_prototype_of___default()(DataSummary)).apply(this, arguments));
  }

  __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_createClass___default()(DataSummary, [{
    key: 'render',
    value: function render() {
      var _dataDate;

      return _dataDate = document.createElement('section'), _dataDate.setAttribute('style', '\n        --fade-in-duration: ' + String(window.configuration.viewer['dateFadeInDuration']) + 'ms;\n        --fade-out-duration: ' + String(window.configuration.viewer['dateFadeOutDuration']) + 'ms;\n        --size:' + String(window.configuration.viewer['dateSizeVH']) + 'vh;\n      '), _dataDate.setAttribute('class', 'data-date'), _dataDate.appendChild(document.createTextNode(' ')), _dataDate;
    }
  }, {
    key: 'didMount',
    value: function didMount() {
      this.bindFuncs(['update']);
      __WEBPACK_IMPORTED_MODULE_9_controllers_store__["a" /* default */].watch('datasetIndex', this.update, { immediate: true });
    }
  }, {
    key: 'willUnmount',
    value: function willUnmount() {
      __WEBPACK_IMPORTED_MODULE_9_controllers_store__["a" /* default */].unwatch('datasetIndex', this.update);
    }
  }, {
    key: 'update',
    value: function update() {
      var _this2 = this;

      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;

      this.day = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_values___default()(__WEBPACK_IMPORTED_MODULE_6_controllers_dataset__["a" /* default */])[index];
      if (!CACHED[index]) CACHED[index] = parseDate(this.day);
      this.refs.base.innerHTML = '\n      <span class=\'day\'>' + CACHED[index].dddd + '</span>\n      <span class=\'month\'>' + CACHED[index].do + '&nbsp;' + CACHED[index].mmmm + '</span>\n      <span class=\'year\'>' + CACHED[index].yyyy + '</span>\n    ';

      clearTimeout(this.visibilityTimeout);
      this.addClass('is-visible');
      this.visibilityTimeout = setTimeout(function () {
        _this2.removeClass('is-visible');
      }, window.configuration.viewer['dateVisibilityDuration']);
    }
  }]);

  return DataSummary;
}(__WEBPACK_IMPORTED_MODULE_7_abstractions_DomComponent__["a" /* default */]);

/* harmony default export */ __webpack_exports__["a"] = (DataSummary);

/***/ }),
/* 296 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_values__ = __webpack_require__(28);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_values___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_values__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray__ = __webpack_require__(52);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_classCallCheck__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_classCallCheck__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_createClass__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_createClass__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_controllers_dataset__ = __webpack_require__(29);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_controllers_store__ = __webpack_require__(18);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_missing_math__ = __webpack_require__(36);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_missing_math___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_missing_math__);








var Datagrid = function () {
  function Datagrid() {
    var _this = this;

    __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_classCallCheck___default()(this, Datagrid);

    this.index = __WEBPACK_IMPORTED_MODULE_5_controllers_store__["a" /* default */].get('datasetIndex') || 0;
    this.datas = [].concat(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_toConsumableArray___default()(this.tdatas));
    this.scale = window.configuration['viewer'].dataGridScale;

    __WEBPACK_IMPORTED_MODULE_5_controllers_store__["a" /* default */].watch('datasetIndex', function (i) {
      _this.index = i;
    });
  }

  __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_createClass___default()(Datagrid, [{
    key: 'update',
    value: function update() {
      for (var i = 0; i < this.datas.length; i++) {
        var d = this.datas[i];
        var t = this.tdatas[i];
        this.datas[i] += (t - d) * window.configuration['viewer'].dataGridEasing;
      }
    }
  }, {
    key: 'draw',
    value: function draw(ctx) {
      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
          _ref$width = _ref.width,
          width = _ref$width === undefined ? 100 : _ref$width,
          _ref$height = _ref.height,
          height = _ref$height === undefined ? 100 : _ref$height;

      var step = Object(__WEBPACK_IMPORTED_MODULE_6_missing_math__["map"])(1, 0, this.datas.length, 0, width);

      ctx.beginPath();
      for (var i = 1; i < this.datas.length; i += this.scale) {
        var x = Object(__WEBPACK_IMPORTED_MODULE_6_missing_math__["map"])(i, 0, this.datas.length, 0, width);
        var y = this.datas[i] * height;

        ctx.moveTo(x, height - y);
        ctx.lineTo(x, height);

        for (var j = step; j < y; j += step * this.scale) {
          ctx.moveTo(Math.ceil(x - step * this.scale / 2), height - j);
          ctx.lineTo(Math.floor(x + step * this.scale / 2), height - j);
        }
      }
      ctx.stroke();
    }
  }, {
    key: 'index',
    get: function get() {
      return this._index;
    },
    set: function set(index) {
      this._index = index;
      this.tdatas = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_values___default()(__WEBPACK_IMPORTED_MODULE_4_controllers_dataset__["a" /* default */])[index].map(function (data) {
        return data['% occupation'] / 100;
      });
    }
  }]);

  return Datagrid;
}();

/* harmony default export */ __webpack_exports__["a"] = (Datagrid);

/***/ }),
/* 297 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_slicedToArray__ = __webpack_require__(51);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_slicedToArray___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_slicedToArray__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck__ = __webpack_require__(6);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass__ = __webpack_require__(7);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_missing_math__ = __webpack_require__(36);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_missing_math___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_missing_math__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_utils_distance_squared__ = __webpack_require__(298);






var Particle = function () {
  function Particle(x, y) {
    __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default()(this, Particle);

    this.x = x;
    this.y = y;
    this.speed = Object(__WEBPACK_IMPORTED_MODULE_3_missing_math__["random"])(10);
    this.dx = Object(__WEBPACK_IMPORTED_MODULE_3_missing_math__["random"])(-1, 1);
    this.dy = Object(__WEBPACK_IMPORTED_MODULE_3_missing_math__["random"])(-1, 1);
    this.trailLength = 5 + Math.pow(Math.random(), 2) * 95;
    this.trail = [];
    this.percentWhenStopSeekingTarget = 0.3;
    this.shouldBounce = true;
  }

  __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default()(Particle, [{
    key: 'updateBehavior',
    value: function updateBehavior() {
      if (this.target && Object(__WEBPACK_IMPORTED_MODULE_4_utils_distance_squared__["a" /* default */])([this.x, this.y], this.target) < this.intialDistanceFromTarget * this.percentWhenStopSeekingTarget) {
        this._target = null;
        this.dx = Object(__WEBPACK_IMPORTED_MODULE_3_missing_math__["random"])(-1, 1);
        this.dy = Object(__WEBPACK_IMPORTED_MODULE_3_missing_math__["random"])(-1, 1);
        this.speed = Object(__WEBPACK_IMPORTED_MODULE_3_missing_math__["random"])(1);
      }

      if (this.target) {
        this.dx = (this.target[0] - this.x) * 0.01;
        this.dy = (this.target[1] - this.y) * 0.01;
      }

      if (Object(__WEBPACK_IMPORTED_MODULE_3_missing_math__["random"])(100) > 99) this.speed = Object(__WEBPACK_IMPORTED_MODULE_3_missing_math__["random"])(1);
      if (Object(__WEBPACK_IMPORTED_MODULE_3_missing_math__["random"])(100) > 90) {
        this.dx += Object(__WEBPACK_IMPORTED_MODULE_3_missing_math__["random"])(-1, 1);
        this.dy += Object(__WEBPACK_IMPORTED_MODULE_3_missing_math__["random"])(-1, 1);
      }

      if (Object(__WEBPACK_IMPORTED_MODULE_3_missing_math__["random"])(100) > 99) this.dx = -this.dx;
      if (Object(__WEBPACK_IMPORTED_MODULE_3_missing_math__["random"])(100) > 99) this.dy = -this.dy;
    }
  }, {
    key: 'update',
    value: function update() {
      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
          _ref$width = _ref.width,
          width = _ref$width === undefined ? 100 : _ref$width,
          _ref$height = _ref.height,
          height = _ref$height === undefined ? 100 : _ref$height;

      this.updateBehavior();

      this.x += this.dx * this.speed;
      this.y += this.dy * this.speed;
      if (this.shouldBounce && (this.x < 0 || this.x > width)) this.dx = -this.dx;
      if (this.shouldBounce && (this.y < 0 || this.y > height)) this.dy = -this.dy;

      this.trail.push([this.x, this.y]);
      if (this.trail.length > this.trailLength) this.trail.shift();
    }
  }, {
    key: 'draw',
    value: function draw(ctx) {
      ctx.beginPath();
      this.trail.forEach(function (_ref2, index) {
        var _ref3 = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_slicedToArray___default()(_ref2, 2),
            x = _ref3[0],
            y = _ref3[1];

        ctx[index === 0 ? 'moveTo' : 'lineTo'](x, y);
      });
      ctx.stroke();
    }
  }, {
    key: 'target',
    get: function get() {
      return this._target;
    },
    set: function set(_ref4) {
      var _ref5 = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_slicedToArray___default()(_ref4, 2),
          x = _ref5[0],
          y = _ref5[1];

      this._target = [x, y];
      this.intialDistanceFromTarget = Object(__WEBPACK_IMPORTED_MODULE_4_utils_distance_squared__["a" /* default */])([this.x, this.y], this.target);
    }
  }]);

  return Particle;
}();

/* harmony default export */ __webpack_exports__["a"] = (Particle);

/***/ }),
/* 298 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_slicedToArray__ = __webpack_require__(51);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_slicedToArray___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_slicedToArray__);

/* harmony default export */ __webpack_exports__["a"] = (function (_ref, _ref2) {
  var _ref4 = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_slicedToArray___default()(_ref, 2),
      x1 = _ref4[0],
      y1 = _ref4[1];

  var _ref3 = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_slicedToArray___default()(_ref2, 2),
      x2 = _ref3[0],
      y2 = _ref3[1];

  return (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1);
});

/***/ }),
/* 299 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__RafTimer_js__ = __webpack_require__(300);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__fpsLimiter_js__ = __webpack_require__(301);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__raf_js__ = __webpack_require__(302);
/* unused harmony reexport RafTimer */
/* unused harmony reexport fpsLimiter */
/* unused harmony reexport raf */





/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_2__raf_js__["a" /* default */]);


/***/ }),
/* 300 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";


/**
 * Create a new RafTimer instance.
 * @class RafTimer
 * @param {number} delay Number of milliseconds before executing the callback.
 * @param {Function} cb Callback function executed when the timer hit 0. For convenience, a restart method will be passed as 1st arg of the cb function.
 * @param {boolean} [autostart=true] Optional (default true). Auto-start the timer (Don't need to call start() method).
 * @constructor
 * @example
 * import { raf, RafTimer } from '@internet/raf'
 *
 * const timer = new RafTimer(2000, restart => {
 *   console.log('Will be logged after 2000ms')
 *   restart() // Restart the timer. onDone will be called after another 2000ms.
 * })
 *
 * raf.add(dt => timer.update(dt))
 */

function RafTimer (delay, cb, autostart) {
  if (autostart === void 0) autostart = true

  this._stopped = !autostart
  this._remainder = 0
  this._delay = delay | 0
  this._remainingTime = delay
  this._callback = cb === undefined ? function () {} : cb

  // fast binding
  var restart = this.restart
  var self = this
  this.restart = function (n, u) { restart.call(self, n, u) }

  if (this._delay === 0) this._stopped = true
}

/**
 * Set a new callback function.
 * @method
 * @param {function} newCallback New callback function. For convenience, a restart method will be passed as 1st arg of the cb function.
 * @param {number} [newDelay] Optional. Set a new delay (in ms). If set, the timer will be restarted
 */
RafTimer.prototype.setCallback = function setCallback (newCallback, newDelay) {
  this._callback = newCallback === undefined ? function () {} : newCallback
  if (newDelay) this.restart(newDelay)
}

/**
 * Stop the timer. update() calls will do nothing.
 * @method
 */
RafTimer.prototype.stop = function stop () {
  this._stopped = true
}

/**
 * Start the timer if stopped.
 * @method
 */
RafTimer.prototype.start = function start () {
  if (!this._stopped) return
  this.restart()
}

/**
 * Restart the timer
 * @method
 * @param {number} newDelay
 * @param {boolean} [useRemainder=true] Optional (default true). Use deltatime's remainder from the last time the timer hits 0.
 */
RafTimer.prototype.restart = function restart (newDelay, useRemainder) {
  if (useRemainder === void 0) useRemainder = true

  if (newDelay !== undefined) this._delay = newDelay
  this._stopped = false
  this._remainingTime = this._delay - (this._remainder * (+useRemainder))
}

/**
 * Update remaining time. Usually executed inside a requestAnimationFrame call.
 * @method
 * @param {number} dt Time elapsed since the last call (in ms).
 */
RafTimer.prototype.update = function update (dt) {
  if (this._stopped) return
  this._remainingTime -= dt
  if (this._remainingTime <= 0) {
    this._stopped = true
    this._remainder = (-this._remainingTime) % this._delay
    this._callback(this.restart)
  } else {
    this._remainder = 0
  }
}

/**
 * Stop the timer and remove callback reference
 * @method
 */
RafTimer.prototype.dispose = function dispose () {
  this._callback = this.restart = function () {}
  this._stopped = true
  this._remainder = 0
  this._remainingTime = this._delay
}

/* unused harmony default export */ var _unused_webpack_default_export = (RafTimer);


/***/ }),
/* 301 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";


/**
 * Limit function calls to a specific framerate
 * @param {number} [framerate=30] Framerate
 * @param {function} callback Function to be called at the specified frame interval
 * @return {function} Framerate-limited function to add to your raf
 * @example
 * import { raf, fpsLimiter } from '@internet/raf'
 *
 * function tick () {
 *   console.log('called each 10 fps')
 * }
 *
 * const limited = fpsLimiter(10, tick)
 * raf.add(limited)
 */
function fpsLimiter (framerate, callback) {
  if (callback === void 0) throw new Error('You must specify a callback')
  if (framerate === void 0) framerate = 30
  var _interval = 1000 / framerate
  var _remainingTime = 0
  var _elapsedTime = 0
  return function (dt) {
    _remainingTime -= dt
    _elapsedTime += dt
    if (_remainingTime <= 0) {
      callback(_elapsedTime)
      _elapsedTime = 0
      _remainingTime = _interval + (_remainingTime % _interval)
    }
  }
}

/* unused harmony default export */ var _unused_webpack_default_export = (fpsLimiter);


/***/ }),
/* 302 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

/**
 * Core of the raf package
 * @module raf
 * @type {Object}
 * @example
 * import { raf } from '@internet/raf'
 *
 * function tick (dt) {
 *  console.log('called on new frame')
 * }
 *
 * raf.add(tick)
 */

var root = typeof window === 'undefined' ? global : window
var _observers = []
var _afterObservers = []
var _beforeObservers = []
var _rafHandler = null
var _lastDate = null
var _once = false
var _complex = false

/**
 * Time elapsed between the previous and the current frame
 * @type {number}
 * @static
 * @category properties
 */
var time

/**
 * Current delta time
 * @type {number}
 * @static
 * @category properties
 */
var dt

function _frame (timestamp) {
  // compute deltatime and time
  if (timestamp === void 0) timestamp = 0
  if (_lastDate === null) _lastDate = timestamp
  dt = timestamp - _lastDate
  time += dt
  _lastDate = timestamp
  // we request the frame now, allowing to cancel it from observers
  _rafHandler = _once ? null : root.requestAnimationFrame(_frame)
  if (_once) _once = false
  // call all observers
  var i
  if (_complex) {
    for (i = 0; i < _beforeObservers.length; i++) _beforeObservers[i](dt)
    for (i = 0; i < _observers.length; i++) _observers[i](dt)
    for (i = 0; i < _afterObservers.length; i++) _afterObservers[i](dt)
  } else {
    for (i = 0; i < _observers.length; i++) _observers[i](dt)
  }
}

function _swapRunner () {
  _complex = !!(_afterObservers.length > 0 || _beforeObservers.length > 0)
}

function _addObserver (arr, fn, prepend) {
  if (!fn || !arr) return false
  if (~arr.indexOf(fn)) return false
  prepend = !!prepend
  prepend ? arr.unshift(fn) : arr.push(fn)
  return true
}

function _removeObserver (arr, fn) {
  if (!fn) return false
  var index = arr.indexOf(fn)
  if (!~index) return false
  arr.splice(index, 1)
  return !!(arr.length === 0)
}

/**
 * Add a function for execution at the beginning of the raf call
 * Calling addBefore will not start the raf.
 * @param {function} fn Function to be called at the start of the raf
 * @param {function} [prepend=false] Prepend the function to the beginning of the functions list
 * @static
 * @category methods
 */
function addBefore (fn, prepend) {
  _addObserver(_beforeObservers, fn, prepend) && _swapRunner()
}

/**
 * Add a function for execution at the end of the raf call
 * Calling addAfter will not start the raf.
 * @param {function} fn Function to be called at the end of the raf
 * @param {function} [prepend=false] Prepend the function to the beginning of the functions list
 * @static
 * @category methods
 */
function addAfter (fn, prepend) {
  _addObserver(_afterObservers, fn, prepend) && _swapRunner()
}

/**
 * Add a function for execution on each frame
 * @param {function} fn Function to be called
 * @param {function} [prepend=false] Prepend the function to the beginning of the functions list
 * @static
 * @category methods
 */
function add (fn, prepend) {
  _addObserver(_observers, fn, prepend) && start()
}

/**
 * Remove a function for execution at the beginning of the raf call
 * Calling removeBefore will not stop the raf.
 * @param {function} fn Function to remove from the raf
 * @static
 * @category methods
 */
function removeBefore (fn) {
  _removeObserver(_beforeObservers, fn) && _swapRunner()
}

/**
 * Remove a function for execution at the end of the raf call
 * Calling removeAfter will not stop the raf.
 * @param {function} fn Function to remove from the raf
 * @param {function} [prepend=false] Prepend the function to the beginning of the functions list
 * @static
 * @category methods
 */
function removeAfter (fn, prepend) {
  _removeObserver(_afterObservers, fn) && _swapRunner()
}

/**
 * Remove a function for execution on each frame
 * @param {function} fn Function to remove from the raf
 * @static
 * @category methods
 */
function remove (fn) {
  _removeObserver(_observers, fn) && stop()
}

/**
 * Force start the raf. You usually don't need to use it.
 * @param {boolean} [instant=false] Directly make a raf call without waiting for the next frame (default false)
 * @static
 * @category methods
 */
function start (instant) {
  _once = false
  if (_rafHandler) return
  instant = !!instant
  _lastDate = null
  if (instant) _frame()
  else _rafHandler = root.requestAnimationFrame(_frame)
}

/**
 * Request once the raf. Will not be executed if the raf is already running.
 * @static
 * @category methods
 */
function requestOnce () {
  if (_rafHandler) return
  _once = true
  _lastDate = null
  _rafHandler = root.requestAnimationFrame(_frame)
}

/**
 * Force stop the raf. You usually don't need to use it.
 * @static
 * @category methods
 */
function stop () {
  if (!_rafHandler) return
  root.cancelAnimationFrame(_rafHandler)
  _rafHandler = null
}

/**
 * Remove all observers from the raf singleton and stop the raf if it's running. Reset time.
 * @static
 * @category methods
 */
function dispose () {
  stop()
  _observers.length = 0
  _afterObservers.length = 0
  _beforeObservers.length = 0
  _complex = false
  _lastDate = null
  time = 0
  dt = 0
}

/* harmony default export */ __webpack_exports__["a"] = ({
  add: add,
  addAfter: addAfter,
  addBefore: addBefore,
  remove: remove,
  removeAfter: removeAfter,
  removeBefore: removeBefore,
  start: start,
  stop: stop,
  time: time,
  dt: dt,
  requestOnce: requestOnce,
  dispose: dispose
});

/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(53)))

/***/ }),
/* 303 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * @module fps-indicator
 */



var raf = __webpack_require__(304)
var now = __webpack_require__(307)
var css = __webpack_require__(308)

module.exports = fps



function fps (opts) {
	if (!(this instanceof fps)) return new fps(opts)

	if (typeof opts === 'string') {
		if (positions[opts]) opts = {position: opts}
		else opts = {container: opts}
	}
	opts = opts || {}

	if (opts.container) {
		if (typeof opts.container === 'string') {
			this.container = document.querySelector(opts.container)
		}
		else {
			this.container = opts.container
		}
	}
	else {
		this.container = document.body || document.documentElement
	}

	//init fps
	this.element = document.createElement('div')
	this.element.className = 'fps'
	this.element.innerHTML = [
		'<div class="fps-bg"></div>',
		'<canvas class="fps-canvas"></canvas>',
		'<span class="fps-text">fps <span class="fps-value">60.0</span></span>'
	].join('')
	this.container.appendChild(this.element)

	this.canvas = this.element.querySelector('.fps-canvas')
	this.textEl = this.element.querySelector('.fps-text')
	this.valueEl = this.element.querySelector('.fps-value')
	this.bgEl = this.element.querySelector('.fps-bg')

	var style = opts.css || opts.style || ''
	if (typeof style === 'object') style = css(style)

	var posCss = ''
	posCss = positions[opts.position] || positions['top-left']

	this.element.style.cssText = [
		'line-height: 1;',
		'position: fixed;',
		'font-family: Roboto, sans-serif;',
		'z-index: 1;',
		'font-weight: 300;',
		'font-size: small;',
		'padding: 1rem;',
		posCss,
		opts.color ? ('color:' + opts.color) : '',
		style
	].join('')

	this.canvas.style.cssText = [
		'position: relative;',
		'width: 2em;',
		'height: 1em;',
		'display: block;',
		'float: left;',
		'margin-right: .333em;'
	].join('')

	this.bgEl.style.cssText = [
		'position: absolute;',
		'height: 1em;',
		'width: 2em;',
		'background: currentcolor;',
		'opacity: .1;'
	].join('')

	this.canvas.width = parseInt(getComputedStyle(this.canvas).width) || 1
	this.canvas.height = parseInt(getComputedStyle(this.canvas).height) || 1

	this.context = this.canvas.getContext('2d')

	var ctx = this.context
	var w = this.canvas.width
	var h = this.canvas.height
	var count = 0
	var lastTime = 0
	var values = opts.values || Array(this.canvas.width)
	var period = opts.period || 1000
	var max = opts.max || 100

	//enable update routine
	var that = this
	raf(function measure () {
		count++
		var t = now()

		if (t - lastTime > period) {
			lastTime = t
			values.push(count / (max * period * 0.001))
			values = values.slice(-w)
			count = 0

			ctx.clearRect(0, 0, w, h)
			ctx.fillStyle = getComputedStyle(that.canvas).color
			for (var i = w; i--;) {
				var value = values[i]
				if (value == null) break
				ctx.fillRect(i, h - h * value, 1, h * value)
			}

			that.valueEl.innerHTML = (values[values.length - 1]*max).toFixed(1)
		}

		raf(measure)
	})
}


var positions = {
	'top-left': 'left: 0; top: 0;',
	'top-right': 'right: 0; top: 0;',
	'bottom-right': 'right: 0; bottom: 0;',
	'bottom-left': 'left: 0; bottom: 0;'
}


/***/ }),
/* 304 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var now = __webpack_require__(305)
  , root = typeof window === 'undefined' ? global : window
  , vendors = ['moz', 'webkit']
  , suffix = 'AnimationFrame'
  , raf = root['request' + suffix]
  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]

for(var i = 0; !raf && i < vendors.length; i++) {
  raf = root[vendors[i] + 'Request' + suffix]
  caf = root[vendors[i] + 'Cancel' + suffix]
      || root[vendors[i] + 'CancelRequest' + suffix]
}

// Some versions of FF have rAF but not cAF
if(!raf || !caf) {
  var last = 0
    , id = 0
    , queue = []
    , frameDuration = 1000 / 60

  raf = function(callback) {
    if(queue.length === 0) {
      var _now = now()
        , next = Math.max(0, frameDuration - (_now - last))
      last = next + _now
      setTimeout(function() {
        var cp = queue.slice(0)
        // Clear queue here to prevent
        // callbacks from appending listeners
        // to the current frame's queue
        queue.length = 0
        for(var i = 0; i < cp.length; i++) {
          if(!cp[i].cancelled) {
            try{
              cp[i].callback(last)
            } catch(e) {
              setTimeout(function() { throw e }, 0)
            }
          }
        }
      }, Math.round(next))
    }
    queue.push({
      handle: ++id,
      callback: callback,
      cancelled: false
    })
    return id
  }

  caf = function(handle) {
    for(var i = 0; i < queue.length; i++) {
      if(queue[i].handle === handle) {
        queue[i].cancelled = true
      }
    }
  }
}

module.exports = function(fn) {
  // Wrap in a new function to prevent
  // `cancel` potentially being assigned
  // to the native rAF function
  return raf.call(root, fn)
}
module.exports.cancel = function() {
  caf.apply(root, arguments)
}
module.exports.polyfill = function(object) {
  if (!object) {
    object = root;
  }
  object.requestAnimationFrame = raf
  object.cancelAnimationFrame = caf
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(53)))

/***/ }),
/* 305 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {// Generated by CoffeeScript 1.12.2
(function() {
  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;

  if ((typeof performance !== "undefined" && performance !== null) && performance.now) {
    module.exports = function() {
      return performance.now();
    };
  } else if ((typeof process !== "undefined" && process !== null) && process.hrtime) {
    module.exports = function() {
      return (getNanoSeconds() - nodeLoadTime) / 1e6;
    };
    hrtime = process.hrtime;
    getNanoSeconds = function() {
      var hr;
      hr = hrtime();
      return hr[0] * 1e9 + hr[1];
    };
    moduleLoadTime = getNanoSeconds();
    upTime = process.uptime() * 1e9;
    nodeLoadTime = moduleLoadTime - upTime;
  } else if (Date.now) {
    module.exports = function() {
      return Date.now() - loadTime;
    };
    loadTime = Date.now();
  } else {
    module.exports = function() {
      return new Date().getTime() - loadTime;
    };
    loadTime = new Date().getTime();
  }

}).call(this);

//# sourceMappingURL=performance-now.js.map

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(306)))

/***/ }),
/* 306 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),
/* 307 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {module.exports =
  global.performance &&
  global.performance.now ? function now() {
    return performance.now()
  } : Date.now || function now() {
    return +new Date
  }

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(53)))

/***/ }),
/* 308 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var repeatString = __webpack_require__(309);
var objectAssign = __webpack_require__(310);
var arrify = __webpack_require__(311);

module.exports = function toCss(object, opts) {
	opts = objectAssign({
		indent: '',
		property: identity,
		value: identity,
		selector: identity
	}, opts);

	if (typeof opts.indent === 'number') {
		opts.indent = repeatString(' ', opts.indent);
	}

	function props(prop, val) {
		return arrify(prop).reduce(function (props, p) {
			return props.concat(opts.property(p, val));
		}, []);
	}

	function values(val, prop) {
		return arrify(val).reduce(function (vals, v) {
			return vals.concat(opts.value(v, prop));
		}, []);
	}

	function selectors(sel, value) {
		return arrify(sel).reduce(function (sels, s) {
			return sels.concat(opts.selector(s, value));
		}, []);
	}

	function _toCss(obj, level) {
		var str = '';
		Object.keys(obj).forEach(function (sel) {
			var value = obj[sel];
			if (isLastLevel(value)) {
				str += rule(props(sel, value), values(value, sel), opts.indent, level - 1);
				return;
			} else if (Array.isArray(value)) {
				value.forEach(function (val) {
					str += _toCss(nest(sel, val), level);
				});
				return;
			}
			selectors(sel, value).forEach(function (selector) {
				str += start(selector, opts.indent, level);
				Object.keys(value).forEach(function (prop) {
					var value = obj[sel][prop];
					if (oneMoreLevelExists(value)) {
						str += _toCss(nest(prop, value), level + 1);
					} else {
						str += rule(props(prop, value), values(value, prop), opts.indent, level);
					}
				});
				str += end(opts.indent, level);
			});
		});
		return str;
	}

	return arrify(object)
		.map(function (o) {
			return _toCss(o, 0);
		})
		.join(lineEnd(opts.indent));
};

function nest(prop, val) {
	var tmp = {};
	tmp[prop] = val;
	return tmp;
}

function isLastLevel(val) {
	return typeof val === 'string' || Array.isArray(val) && val.length && typeof val[0] !== 'object';
}

function oneMoreLevelExists(val) {
	return typeof val === 'object' && !Array.isArray(val);
}

function identity(v) {
	return v;
}

function lineStart(indent, level) {
	return indent ? repeatString(indent, level) : '';
}

function space(indent) {
	return indent ? ' ' : '';
}

function lineEnd(indent) {
	return indent ? '\n' : '';
}

function start(sel, indent, level) {
	return lineStart(indent, level) + sel + space(indent) + '{' + lineEnd(indent);
}

function end(indent, level) {
	return lineStart(indent, level) + '}' + lineEnd(indent);
}

function rule(props, values, indent, level) {
	var linestart = lineStart(indent, level + 1);
	var lineend = lineEnd(indent);
	var s = space(indent);

	var str = '';

	for (var i = 0, propLength = props.length; i < propLength; i++) {
		for (var j = 0, valueLength = values.length; j < valueLength; j++) {
			str += linestart + props[i] + (isAtRule(props[i]) ? ' ' : ':') + s + values[j] + ';' + lineend;
		}
	}

	return str;
}

function isAtRule(prop) {
	return prop.indexOf('@') === 0;
}


/***/ }),
/* 309 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*!
 * repeat-string <https://github.com/jonschlinkert/repeat-string>
 *
 * Copyright (c) 2014-2015, Jon Schlinkert.
 * Licensed under the MIT License.
 */



/**
 * Results cache
 */

var res = '';
var cache;

/**
 * Expose `repeat`
 */

module.exports = repeat;

/**
 * Repeat the given `string` the specified `number`
 * of times.
 *
 * **Example:**
 *
 * ```js
 * var repeat = require('repeat-string');
 * repeat('A', 5);
 * //=> AAAAA
 * ```
 *
 * @param {String} `string` The string to repeat
 * @param {Number} `number` The number of times to repeat the string
 * @return {String} Repeated string
 * @api public
 */

function repeat(str, num) {
  if (typeof str !== 'string') {
    throw new TypeError('expected a string');
  }

  // cover common, quick use cases
  if (num === 1) return str;
  if (num === 2) return str + str;

  var max = str.length * num;
  if (cache !== str || typeof cache === 'undefined') {
    cache = str;
    res = '';
  } else if (res.length >= max) {
    return res.substr(0, max);
  }

  while (max > res.length && num > 1) {
    if (num & 1) {
      res += str;
    }

    num >>= 1;
    str += str;
  }

  res += str;
  res = res.substr(0, max);
  return res;
}


/***/ }),
/* 310 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/


/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};


/***/ }),
/* 311 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function (val) {
	if (val === null || val === undefined) {
		return [];
	}

	return Array.isArray(val) ? val : [val];
};


/***/ }),
/* 312 */
/***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

/***/ })
/******/ ]);
//# sourceMappingURL=ce234032ebbcc66f2b3b.js.map